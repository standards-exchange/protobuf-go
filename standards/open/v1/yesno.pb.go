// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: standards/open/v1/yesno.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Y / N requiring no further explanation
type YesNo int32

const (
	// No
	YesNo_N YesNo = 0
	// Yes
	YesNo_Y YesNo = 1
)

// Enum value maps for YesNo.
var (
	YesNo_name = map[int32]string{
		0: "N",
		1: "Y",
	}
	YesNo_value = map[string]int32{
		"N": 0,
		"Y": 1,
	}
)

func (x YesNo) Enum() *YesNo {
	p := new(YesNo)
	*p = x
	return p
}

func (x YesNo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YesNo) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_yesno_proto_enumTypes[0].Descriptor()
}

func (YesNo) Type() protoreflect.EnumType {
	return &file_standards_open_v1_yesno_proto_enumTypes[0]
}

func (x YesNo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use YesNo.Descriptor instead.
func (YesNo) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_yesno_proto_rawDescGZIP(), []int{0}
}

type YesNoExplain_Response int32

const (
	YesNoExplain_RESPONSE_UNSPECIFIED YesNoExplain_Response = 0
	YesNoExplain_YES                  YesNoExplain_Response = 1
	YesNoExplain_NO                   YesNoExplain_Response = 2
)

// Enum value maps for YesNoExplain_Response.
var (
	YesNoExplain_Response_name = map[int32]string{
		0: "RESPONSE_UNSPECIFIED",
		1: "YES",
		2: "NO",
	}
	YesNoExplain_Response_value = map[string]int32{
		"RESPONSE_UNSPECIFIED": 0,
		"YES":                  1,
		"NO":                   2,
	}
)

func (x YesNoExplain_Response) Enum() *YesNoExplain_Response {
	p := new(YesNoExplain_Response)
	*p = x
	return p
}

func (x YesNoExplain_Response) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YesNoExplain_Response) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_yesno_proto_enumTypes[1].Descriptor()
}

func (YesNoExplain_Response) Type() protoreflect.EnumType {
	return &file_standards_open_v1_yesno_proto_enumTypes[1]
}

func (x YesNoExplain_Response) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use YesNoExplain_Response.Descriptor instead.
func (YesNoExplain_Response) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_yesno_proto_rawDescGZIP(), []int{0, 0}
}

type YesExplainNo_Response int32

const (
	YesExplainNo_RESPONSE_UNSPECIFIED YesExplainNo_Response = 0
	YesExplainNo_YES                  YesExplainNo_Response = 1
	YesExplainNo_NO                   YesExplainNo_Response = 2
)

// Enum value maps for YesExplainNo_Response.
var (
	YesExplainNo_Response_name = map[int32]string{
		0: "RESPONSE_UNSPECIFIED",
		1: "YES",
		2: "NO",
	}
	YesExplainNo_Response_value = map[string]int32{
		"RESPONSE_UNSPECIFIED": 0,
		"YES":                  1,
		"NO":                   2,
	}
)

func (x YesExplainNo_Response) Enum() *YesExplainNo_Response {
	p := new(YesExplainNo_Response)
	*p = x
	return p
}

func (x YesExplainNo_Response) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YesExplainNo_Response) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_yesno_proto_enumTypes[2].Descriptor()
}

func (YesExplainNo_Response) Type() protoreflect.EnumType {
	return &file_standards_open_v1_yesno_proto_enumTypes[2]
}

func (x YesExplainNo_Response) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use YesExplainNo_Response.Descriptor instead.
func (YesExplainNo_Response) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_yesno_proto_rawDescGZIP(), []int{1, 0}
}

type YesNoAndExplain_Response int32

const (
	YesNoAndExplain_RESPONSE_UNSPECIFIED YesNoAndExplain_Response = 0
	YesNoAndExplain_YES                  YesNoAndExplain_Response = 1
	YesNoAndExplain_NO                   YesNoAndExplain_Response = 2
)

// Enum value maps for YesNoAndExplain_Response.
var (
	YesNoAndExplain_Response_name = map[int32]string{
		0: "RESPONSE_UNSPECIFIED",
		1: "YES",
		2: "NO",
	}
	YesNoAndExplain_Response_value = map[string]int32{
		"RESPONSE_UNSPECIFIED": 0,
		"YES":                  1,
		"NO":                   2,
	}
)

func (x YesNoAndExplain_Response) Enum() *YesNoAndExplain_Response {
	p := new(YesNoAndExplain_Response)
	*p = x
	return p
}

func (x YesNoAndExplain_Response) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YesNoAndExplain_Response) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_yesno_proto_enumTypes[3].Descriptor()
}

func (YesNoAndExplain_Response) Type() protoreflect.EnumType {
	return &file_standards_open_v1_yesno_proto_enumTypes[3]
}

func (x YesNoAndExplain_Response) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use YesNoAndExplain_Response.Descriptor instead.
func (YesNoAndExplain_Response) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_yesno_proto_rawDescGZIP(), []int{2, 0}
}

// Response where a NO requires further information
type YesNoExplain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yes / No response.
	Response YesNoExplain_Response `protobuf:"varint,1,opt,name=response,proto3,enum=standards.open.v1.YesNoExplain_Response" json:"response,omitempty"`
	// Explanation if the answer is `NO`
	Explanation string `protobuf:"bytes,2,opt,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *YesNoExplain) Reset() {
	*x = YesNoExplain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_yesno_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YesNoExplain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YesNoExplain) ProtoMessage() {}

func (x *YesNoExplain) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_yesno_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YesNoExplain.ProtoReflect.Descriptor instead.
func (*YesNoExplain) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_yesno_proto_rawDescGZIP(), []int{0}
}

func (x *YesNoExplain) GetResponse() YesNoExplain_Response {
	if x != nil {
		return x.Response
	}
	return YesNoExplain_RESPONSE_UNSPECIFIED
}

func (x *YesNoExplain) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

// Response where a YES requires further information
type YesExplainNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yes / No response.
	Response YesExplainNo_Response `protobuf:"varint,1,opt,name=response,proto3,enum=standards.open.v1.YesExplainNo_Response" json:"response,omitempty"`
	// Explanation if the answer is `YES`
	Explanation string `protobuf:"bytes,2,opt,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *YesExplainNo) Reset() {
	*x = YesExplainNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_yesno_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YesExplainNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YesExplainNo) ProtoMessage() {}

func (x *YesExplainNo) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_yesno_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YesExplainNo.ProtoReflect.Descriptor instead.
func (*YesExplainNo) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_yesno_proto_rawDescGZIP(), []int{1}
}

func (x *YesExplainNo) GetResponse() YesExplainNo_Response {
	if x != nil {
		return x.Response
	}
	return YesExplainNo_RESPONSE_UNSPECIFIED
}

func (x *YesExplainNo) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

// Response where further information is required regardless of whether a Yes or No is provided
type YesNoAndExplain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yes / No response.
	Response YesNoAndExplain_Response `protobuf:"varint,1,opt,name=response,proto3,enum=standards.open.v1.YesNoAndExplain_Response" json:"response,omitempty"`
	// Provide further information for the response
	Explanation string `protobuf:"bytes,2,opt,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *YesNoAndExplain) Reset() {
	*x = YesNoAndExplain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_yesno_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YesNoAndExplain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YesNoAndExplain) ProtoMessage() {}

func (x *YesNoAndExplain) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_yesno_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YesNoAndExplain.ProtoReflect.Descriptor instead.
func (*YesNoAndExplain) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_yesno_proto_rawDescGZIP(), []int{2}
}

func (x *YesNoAndExplain) GetResponse() YesNoAndExplain_Response {
	if x != nil {
		return x.Response
	}
	return YesNoAndExplain_RESPONSE_UNSPECIFIED
}

func (x *YesNoAndExplain) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

var File_standards_open_v1_yesno_proto protoreflect.FileDescriptor

var file_standards_open_v1_yesno_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x79, 0x65, 0x73, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x22, 0xad, 0x01, 0x0a, 0x0c, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x45, 0x78, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x45,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x4f,
	0x10, 0x02, 0x22, 0xad, 0x01, 0x0a, 0x0c, 0x59, 0x65, 0x73, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x4e, 0x6f, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x45, 0x78, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x4f,
	0x10, 0x02, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x41, 0x6e, 0x64, 0x45,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x47, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x41, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x35, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x45, 0x53, 0x10, 0x01,
	0x12, 0x06, 0x0a, 0x02, 0x4e, 0x4f, 0x10, 0x02, 0x2a, 0x15, 0x0a, 0x05, 0x59, 0x65, 0x73, 0x4e,
	0x6f, 0x12, 0x05, 0x0a, 0x01, 0x4e, 0x10, 0x00, 0x12, 0x05, 0x0a, 0x01, 0x59, 0x10, 0x01, 0x42,
	0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_standards_open_v1_yesno_proto_rawDescOnce sync.Once
	file_standards_open_v1_yesno_proto_rawDescData = file_standards_open_v1_yesno_proto_rawDesc
)

func file_standards_open_v1_yesno_proto_rawDescGZIP() []byte {
	file_standards_open_v1_yesno_proto_rawDescOnce.Do(func() {
		file_standards_open_v1_yesno_proto_rawDescData = protoimpl.X.CompressGZIP(file_standards_open_v1_yesno_proto_rawDescData)
	})
	return file_standards_open_v1_yesno_proto_rawDescData
}

var file_standards_open_v1_yesno_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_standards_open_v1_yesno_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_standards_open_v1_yesno_proto_goTypes = []interface{}{
	(YesNo)(0),                    // 0: standards.open.v1.YesNo
	(YesNoExplain_Response)(0),    // 1: standards.open.v1.YesNoExplain.Response
	(YesExplainNo_Response)(0),    // 2: standards.open.v1.YesExplainNo.Response
	(YesNoAndExplain_Response)(0), // 3: standards.open.v1.YesNoAndExplain.Response
	(*YesNoExplain)(nil),          // 4: standards.open.v1.YesNoExplain
	(*YesExplainNo)(nil),          // 5: standards.open.v1.YesExplainNo
	(*YesNoAndExplain)(nil),       // 6: standards.open.v1.YesNoAndExplain
}
var file_standards_open_v1_yesno_proto_depIdxs = []int32{
	1, // 0: standards.open.v1.YesNoExplain.response:type_name -> standards.open.v1.YesNoExplain.Response
	2, // 1: standards.open.v1.YesExplainNo.response:type_name -> standards.open.v1.YesExplainNo.Response
	3, // 2: standards.open.v1.YesNoAndExplain.response:type_name -> standards.open.v1.YesNoAndExplain.Response
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_standards_open_v1_yesno_proto_init() }
func file_standards_open_v1_yesno_proto_init() {
	if File_standards_open_v1_yesno_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_standards_open_v1_yesno_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YesNoExplain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_yesno_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YesExplainNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_yesno_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YesNoAndExplain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_standards_open_v1_yesno_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_standards_open_v1_yesno_proto_goTypes,
		DependencyIndexes: file_standards_open_v1_yesno_proto_depIdxs,
		EnumInfos:         file_standards_open_v1_yesno_proto_enumTypes,
		MessageInfos:      file_standards_open_v1_yesno_proto_msgTypes,
	}.Build()
	File_standards_open_v1_yesno_proto = out.File
	file_standards_open_v1_yesno_proto_rawDesc = nil
	file_standards_open_v1_yesno_proto_goTypes = nil
	file_standards_open_v1_yesno_proto_depIdxs = nil
}
