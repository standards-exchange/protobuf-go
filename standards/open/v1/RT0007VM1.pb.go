// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: standards/open/v1/RT0007VM1.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/type/date"
	_ "google.golang.org/genproto/googleapis/type/money"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RT0007VM1_Header_ReportType int32

const (
	RT0007VM1_Header_SFDR_PRECONTRACTUAL RT0007VM1_Header_ReportType = 0
)

// Enum value maps for RT0007VM1_Header_ReportType.
var (
	RT0007VM1_Header_ReportType_name = map[int32]string{
		0: "SFDR_PRECONTRACTUAL",
	}
	RT0007VM1_Header_ReportType_value = map[string]int32{
		"SFDR_PRECONTRACTUAL": 0,
	}
)

func (x RT0007VM1_Header_ReportType) Enum() *RT0007VM1_Header_ReportType {
	p := new(RT0007VM1_Header_ReportType)
	*p = x
	return p
}

func (x RT0007VM1_Header_ReportType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0007VM1_Header_ReportType) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0007VM1_proto_enumTypes[0].Descriptor()
}

func (RT0007VM1_Header_ReportType) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0007VM1_proto_enumTypes[0]
}

func (x RT0007VM1_Header_ReportType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0007VM1_Header_ReportType.Descriptor instead.
func (RT0007VM1_Header_ReportType) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 0, 0}
}

type RT0007VM1_Header_Version int32

const (
	RT0007VM1_Header_V1_0_0 RT0007VM1_Header_Version = 0
)

// Enum value maps for RT0007VM1_Header_Version.
var (
	RT0007VM1_Header_Version_name = map[int32]string{
		0: "V1_0_0",
	}
	RT0007VM1_Header_Version_value = map[string]int32{
		"V1_0_0": 0,
	}
)

func (x RT0007VM1_Header_Version) Enum() *RT0007VM1_Header_Version {
	p := new(RT0007VM1_Header_Version)
	*p = x
	return p
}

func (x RT0007VM1_Header_Version) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0007VM1_Header_Version) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0007VM1_proto_enumTypes[1].Descriptor()
}

func (RT0007VM1_Header_Version) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0007VM1_proto_enumTypes[1]
}

func (x RT0007VM1_Header_Version) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0007VM1_Header_Version.Descriptor instead.
func (RT0007VM1_Header_Version) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 0, 1}
}

type RT0007VM1_Article8Subfund_EAndSCharacteristic int32

const (
	RT0007VM1_Article8Subfund_EEN   RT0007VM1_Article8Subfund_EAndSCharacteristic = 0  // Environmental - energy
	RT0007VM1_Article8Subfund_EREN  RT0007VM1_Article8Subfund_EAndSCharacteristic = 1  // Environmental - renewable energy
	RT0007VM1_Article8Subfund_ERMA  RT0007VM1_Article8Subfund_EAndSCharacteristic = 2  // Environmental - raw materials
	RT0007VM1_Article8Subfund_EWL   RT0007VM1_Article8Subfund_EAndSCharacteristic = 3  // Environmental - water and land
	RT0007VM1_Article8Subfund_EWAS  RT0007VM1_Article8Subfund_EAndSCharacteristic = 4  // Environmental - waste
	RT0007VM1_Article8Subfund_EGGE  RT0007VM1_Article8Subfund_EAndSCharacteristic = 5  // Environmental - greenhouse gas emissions
	RT0007VM1_Article8Subfund_EBIO  RT0007VM1_Article8Subfund_EAndSCharacteristic = 6  // Environmental - biodiversity
	RT0007VM1_Article8Subfund_ECECO RT0007VM1_Article8Subfund_EAndSCharacteristic = 7  // Environmental - circular economy
	RT0007VM1_Article8Subfund_EOTH  RT0007VM1_Article8Subfund_EAndSCharacteristic = 8  // Environmental - other
	RT0007VM1_Article8Subfund_SINEQ RT0007VM1_Article8Subfund_EAndSCharacteristic = 9  // Social - inequality
	RT0007VM1_Article8Subfund_SSOCO RT0007VM1_Article8Subfund_EAndSCharacteristic = 10 // Social - social cohesion
	RT0007VM1_Article8Subfund_SSOIN RT0007VM1_Article8Subfund_EAndSCharacteristic = 11 // Social - social integration
	RT0007VM1_Article8Subfund_SLARE RT0007VM1_Article8Subfund_EAndSCharacteristic = 12 // Social - labour relations
	RT0007VM1_Article8Subfund_SIHC  RT0007VM1_Article8Subfund_EAndSCharacteristic = 13 // Social - investment in human capital
	RT0007VM1_Article8Subfund_SESDC RT0007VM1_Article8Subfund_EAndSCharacteristic = 14 // Social - economically or socially disadvantaged communities
	RT0007VM1_Article8Subfund_SOTH  RT0007VM1_Article8Subfund_EAndSCharacteristic = 15 // Social - other
)

// Enum value maps for RT0007VM1_Article8Subfund_EAndSCharacteristic.
var (
	RT0007VM1_Article8Subfund_EAndSCharacteristic_name = map[int32]string{
		0:  "EEN",
		1:  "EREN",
		2:  "ERMA",
		3:  "EWL",
		4:  "EWAS",
		5:  "EGGE",
		6:  "EBIO",
		7:  "ECECO",
		8:  "EOTH",
		9:  "SINEQ",
		10: "SSOCO",
		11: "SSOIN",
		12: "SLARE",
		13: "SIHC",
		14: "SESDC",
		15: "SOTH",
	}
	RT0007VM1_Article8Subfund_EAndSCharacteristic_value = map[string]int32{
		"EEN":   0,
		"EREN":  1,
		"ERMA":  2,
		"EWL":   3,
		"EWAS":  4,
		"EGGE":  5,
		"EBIO":  6,
		"ECECO": 7,
		"EOTH":  8,
		"SINEQ": 9,
		"SSOCO": 10,
		"SSOIN": 11,
		"SLARE": 12,
		"SIHC":  13,
		"SESDC": 14,
		"SOTH":  15,
	}
)

func (x RT0007VM1_Article8Subfund_EAndSCharacteristic) Enum() *RT0007VM1_Article8Subfund_EAndSCharacteristic {
	p := new(RT0007VM1_Article8Subfund_EAndSCharacteristic)
	*p = x
	return p
}

func (x RT0007VM1_Article8Subfund_EAndSCharacteristic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0007VM1_Article8Subfund_EAndSCharacteristic) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0007VM1_proto_enumTypes[2].Descriptor()
}

func (RT0007VM1_Article8Subfund_EAndSCharacteristic) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0007VM1_proto_enumTypes[2]
}

func (x RT0007VM1_Article8Subfund_EAndSCharacteristic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0007VM1_Article8Subfund_EAndSCharacteristic.Descriptor instead.
func (RT0007VM1_Article8Subfund_EAndSCharacteristic) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 3, 0}
}

type RT0007VM1_Article8Subfund_SustainableInvestmentObjective int32

const (
	RT0007VM1_Article8Subfund_CCM  RT0007VM1_Article8Subfund_SustainableInvestmentObjective = 0 // Climate change mitigation
	RT0007VM1_Article8Subfund_CCA  RT0007VM1_Article8Subfund_SustainableInvestmentObjective = 1 // Climate change adaptation
	RT0007VM1_Article8Subfund_UPWM RT0007VM1_Article8Subfund_SustainableInvestmentObjective = 2 // The sustainable use and protection of water and marine resources
	RT0007VM1_Article8Subfund_TCE  RT0007VM1_Article8Subfund_SustainableInvestmentObjective = 3 // The transition to a circular economy
	RT0007VM1_Article8Subfund_PPC  RT0007VM1_Article8Subfund_SustainableInvestmentObjective = 4 // Pollution prevention and control
	RT0007VM1_Article8Subfund_PRBE RT0007VM1_Article8Subfund_SustainableInvestmentObjective = 5 // The protection and restoration of biodiversity and ecosystems
	RT0007VM1_Article8Subfund_SO   RT0007VM1_Article8Subfund_SustainableInvestmentObjective = 6 // Social objective
)

// Enum value maps for RT0007VM1_Article8Subfund_SustainableInvestmentObjective.
var (
	RT0007VM1_Article8Subfund_SustainableInvestmentObjective_name = map[int32]string{
		0: "CCM",
		1: "CCA",
		2: "UPWM",
		3: "TCE",
		4: "PPC",
		5: "PRBE",
		6: "SO",
	}
	RT0007VM1_Article8Subfund_SustainableInvestmentObjective_value = map[string]int32{
		"CCM":  0,
		"CCA":  1,
		"UPWM": 2,
		"TCE":  3,
		"PPC":  4,
		"PRBE": 5,
		"SO":   6,
	}
)

func (x RT0007VM1_Article8Subfund_SustainableInvestmentObjective) Enum() *RT0007VM1_Article8Subfund_SustainableInvestmentObjective {
	p := new(RT0007VM1_Article8Subfund_SustainableInvestmentObjective)
	*p = x
	return p
}

func (x RT0007VM1_Article8Subfund_SustainableInvestmentObjective) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0007VM1_Article8Subfund_SustainableInvestmentObjective) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0007VM1_proto_enumTypes[3].Descriptor()
}

func (RT0007VM1_Article8Subfund_SustainableInvestmentObjective) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0007VM1_proto_enumTypes[3]
}

func (x RT0007VM1_Article8Subfund_SustainableInvestmentObjective) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0007VM1_Article8Subfund_SustainableInvestmentObjective.Descriptor instead.
func (RT0007VM1_Article8Subfund_SustainableInvestmentObjective) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 3, 1}
}

type RT0007VM1_Article8Subfund_InvestmentStrategy int32

const (
	RT0007VM1_Article8Subfund_BIC  RT0007VM1_Article8Subfund_InvestmentStrategy = 0 // Best in class
	RT0007VM1_Article8Subfund_THE  RT0007VM1_Article8Subfund_InvestmentStrategy = 1 // Thematic
	RT0007VM1_Article8Subfund_ESGI RT0007VM1_Article8Subfund_InvestmentStrategy = 2 // ESG integration
	RT0007VM1_Article8Subfund_ESGE RT0007VM1_Article8Subfund_InvestmentStrategy = 3 // ESG engagement
	RT0007VM1_Article8Subfund_II   RT0007VM1_Article8Subfund_InvestmentStrategy = 4 // Impact investing
	RT0007VM1_Article8Subfund_E    RT0007VM1_Article8Subfund_InvestmentStrategy = 5 // Exclusions
	RT0007VM1_Article8Subfund_O    RT0007VM1_Article8Subfund_InvestmentStrategy = 6 // Other
)

// Enum value maps for RT0007VM1_Article8Subfund_InvestmentStrategy.
var (
	RT0007VM1_Article8Subfund_InvestmentStrategy_name = map[int32]string{
		0: "BIC",
		1: "THE",
		2: "ESGI",
		3: "ESGE",
		4: "II",
		5: "E",
		6: "O",
	}
	RT0007VM1_Article8Subfund_InvestmentStrategy_value = map[string]int32{
		"BIC":  0,
		"THE":  1,
		"ESGI": 2,
		"ESGE": 3,
		"II":   4,
		"E":    5,
		"O":    6,
	}
)

func (x RT0007VM1_Article8Subfund_InvestmentStrategy) Enum() *RT0007VM1_Article8Subfund_InvestmentStrategy {
	p := new(RT0007VM1_Article8Subfund_InvestmentStrategy)
	*p = x
	return p
}

func (x RT0007VM1_Article8Subfund_InvestmentStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0007VM1_Article8Subfund_InvestmentStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0007VM1_proto_enumTypes[4].Descriptor()
}

func (RT0007VM1_Article8Subfund_InvestmentStrategy) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0007VM1_proto_enumTypes[4]
}

func (x RT0007VM1_Article8Subfund_InvestmentStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0007VM1_Article8Subfund_InvestmentStrategy.Descriptor instead.
func (RT0007VM1_Article8Subfund_InvestmentStrategy) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 3, 2}
}

type RT0007VM1_Article8Subfund_TACalculationMethod int32

const (
	RT0007VM1_Article8Subfund_T     RT0007VM1_Article8Subfund_TACalculationMethod = 0 // Turnover
	RT0007VM1_Article8Subfund_CAPEX RT0007VM1_Article8Subfund_TACalculationMethod = 1 // Capital expenditure
	RT0007VM1_Article8Subfund_OPEX  RT0007VM1_Article8Subfund_TACalculationMethod = 2 // Operational expenditure
)

// Enum value maps for RT0007VM1_Article8Subfund_TACalculationMethod.
var (
	RT0007VM1_Article8Subfund_TACalculationMethod_name = map[int32]string{
		0: "T",
		1: "CAPEX",
		2: "OPEX",
	}
	RT0007VM1_Article8Subfund_TACalculationMethod_value = map[string]int32{
		"T":     0,
		"CAPEX": 1,
		"OPEX":  2,
	}
)

func (x RT0007VM1_Article8Subfund_TACalculationMethod) Enum() *RT0007VM1_Article8Subfund_TACalculationMethod {
	p := new(RT0007VM1_Article8Subfund_TACalculationMethod)
	*p = x
	return p
}

func (x RT0007VM1_Article8Subfund_TACalculationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0007VM1_Article8Subfund_TACalculationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0007VM1_proto_enumTypes[5].Descriptor()
}

func (RT0007VM1_Article8Subfund_TACalculationMethod) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0007VM1_proto_enumTypes[5]
}

func (x RT0007VM1_Article8Subfund_TACalculationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0007VM1_Article8Subfund_TACalculationMethod.Descriptor instead.
func (RT0007VM1_Article8Subfund_TACalculationMethod) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 3, 3}
}

// What is the sustainable investment objective of the sub-fund?
type RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives int32

const (
	RT0007VM1_Article9Subfund_CCM  RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives = 0 // Climate change mitigation
	RT0007VM1_Article9Subfund_CCA  RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives = 1 // Climate change adaptation
	RT0007VM1_Article9Subfund_UPWM RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives = 2 // The sustainable use and protection of water and marine resources
	RT0007VM1_Article9Subfund_TCE  RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives = 3 // Transition to a circular economy
	RT0007VM1_Article9Subfund_PPC  RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives = 4 // Pollution prevention and control
	RT0007VM1_Article9Subfund_PRBE RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives = 5 // The protection and restoration of biodiversity and ecosystems
	RT0007VM1_Article9Subfund_RCE  RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives = 6 // Reduction in carbon emissions
	RT0007VM1_Article9Subfund_SO   RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives = 7 // Social objective
)

// Enum value maps for RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives.
var (
	RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives_name = map[int32]string{
		0: "CCM",
		1: "CCA",
		2: "UPWM",
		3: "TCE",
		4: "PPC",
		5: "PRBE",
		6: "RCE",
		7: "SO",
	}
	RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives_value = map[string]int32{
		"CCM":  0,
		"CCA":  1,
		"UPWM": 2,
		"TCE":  3,
		"PPC":  4,
		"PRBE": 5,
		"RCE":  6,
		"SO":   7,
	}
)

func (x RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives) Enum() *RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives {
	p := new(RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives)
	*p = x
	return p
}

func (x RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0007VM1_proto_enumTypes[6].Descriptor()
}

func (RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0007VM1_proto_enumTypes[6]
}

func (x RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives.Descriptor instead.
func (RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 4, 0}
}

type RT0007VM1_Article9Subfund_InvestmentStrategy int32

const (
	RT0007VM1_Article9Subfund_BIC  RT0007VM1_Article9Subfund_InvestmentStrategy = 0 // Best in class
	RT0007VM1_Article9Subfund_THE  RT0007VM1_Article9Subfund_InvestmentStrategy = 1 // Thematic
	RT0007VM1_Article9Subfund_ESGI RT0007VM1_Article9Subfund_InvestmentStrategy = 2 // ESG integration
	RT0007VM1_Article9Subfund_ESGE RT0007VM1_Article9Subfund_InvestmentStrategy = 3 // ESG engagement
	RT0007VM1_Article9Subfund_II   RT0007VM1_Article9Subfund_InvestmentStrategy = 4 // Impact investing
	RT0007VM1_Article9Subfund_E    RT0007VM1_Article9Subfund_InvestmentStrategy = 5 // Exclusions
	RT0007VM1_Article9Subfund_O    RT0007VM1_Article9Subfund_InvestmentStrategy = 6 // Other
)

// Enum value maps for RT0007VM1_Article9Subfund_InvestmentStrategy.
var (
	RT0007VM1_Article9Subfund_InvestmentStrategy_name = map[int32]string{
		0: "BIC",
		1: "THE",
		2: "ESGI",
		3: "ESGE",
		4: "II",
		5: "E",
		6: "O",
	}
	RT0007VM1_Article9Subfund_InvestmentStrategy_value = map[string]int32{
		"BIC":  0,
		"THE":  1,
		"ESGI": 2,
		"ESGE": 3,
		"II":   4,
		"E":    5,
		"O":    6,
	}
)

func (x RT0007VM1_Article9Subfund_InvestmentStrategy) Enum() *RT0007VM1_Article9Subfund_InvestmentStrategy {
	p := new(RT0007VM1_Article9Subfund_InvestmentStrategy)
	*p = x
	return p
}

func (x RT0007VM1_Article9Subfund_InvestmentStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0007VM1_Article9Subfund_InvestmentStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0007VM1_proto_enumTypes[7].Descriptor()
}

func (RT0007VM1_Article9Subfund_InvestmentStrategy) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0007VM1_proto_enumTypes[7]
}

func (x RT0007VM1_Article9Subfund_InvestmentStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0007VM1_Article9Subfund_InvestmentStrategy.Descriptor instead.
func (RT0007VM1_Article9Subfund_InvestmentStrategy) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 4, 1}
}

type RT0007VM1_Article9Subfund_TaCalculationMethod int32

const (
	RT0007VM1_Article9Subfund_T     RT0007VM1_Article9Subfund_TaCalculationMethod = 0 // Turnover
	RT0007VM1_Article9Subfund_CAPEX RT0007VM1_Article9Subfund_TaCalculationMethod = 1 // Capital expenditure
	RT0007VM1_Article9Subfund_OPEX  RT0007VM1_Article9Subfund_TaCalculationMethod = 2 // Operational expenditure
)

// Enum value maps for RT0007VM1_Article9Subfund_TaCalculationMethod.
var (
	RT0007VM1_Article9Subfund_TaCalculationMethod_name = map[int32]string{
		0: "T",
		1: "CAPEX",
		2: "OPEX",
	}
	RT0007VM1_Article9Subfund_TaCalculationMethod_value = map[string]int32{
		"T":     0,
		"CAPEX": 1,
		"OPEX":  2,
	}
)

func (x RT0007VM1_Article9Subfund_TaCalculationMethod) Enum() *RT0007VM1_Article9Subfund_TaCalculationMethod {
	p := new(RT0007VM1_Article9Subfund_TaCalculationMethod)
	*p = x
	return p
}

func (x RT0007VM1_Article9Subfund_TaCalculationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0007VM1_Article9Subfund_TaCalculationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0007VM1_proto_enumTypes[8].Descriptor()
}

func (RT0007VM1_Article9Subfund_TaCalculationMethod) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0007VM1_proto_enumTypes[8]
}

func (x RT0007VM1_Article9Subfund_TaCalculationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0007VM1_Article9Subfund_TaCalculationMethod.Descriptor instead.
func (RT0007VM1_Article9Subfund_TaCalculationMethod) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 4, 2}
}

// The CSSF SFDR PreContractual Disclosure is a  data collection exercise is to collect, in a digital format,
// information contained in precontractual disclosure documents/templates.
//
// See https://www.cssf.lu/wp-content/uploads/User_Guide_-_SFDR_UCI_Data_Collection_-_practical_guide.pdf
// See https://edesk.apps.cssf.lu/edesk-dashboard/docs/sfdr-precontractual/jsonschema/v1_0_0/sfdr-precontractual-input-jsonschema-v1_0_0
// for JSON Schema
type RT0007VM1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The header of the report (required)
	Header *RT0007VM1_Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The payload of the report
	Payload *RT0007VM1_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RT0007VM1) Reset() {
	*x = RT0007VM1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0007VM1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0007VM1) ProtoMessage() {}

func (x *RT0007VM1) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0007VM1.ProtoReflect.Descriptor instead.
func (*RT0007VM1) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0}
}

func (x *RT0007VM1) GetHeader() *RT0007VM1_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RT0007VM1) GetPayload() *RT0007VM1_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Batch set of RT0007VM1 responses
type RT0007VM1Batch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*RT0007VM1 `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *RT0007VM1Batch) Reset() {
	*x = RT0007VM1Batch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0007VM1Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0007VM1Batch) ProtoMessage() {}

func (x *RT0007VM1Batch) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0007VM1Batch.ProtoReflect.Descriptor instead.
func (*RT0007VM1Batch) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{1}
}

func (x *RT0007VM1Batch) GetResponse() []*RT0007VM1 {
	if x != nil {
		return x.Response
	}
	return nil
}

type RT0007VM1_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required
	// UUID format Unique identifier following the rfc 4122 norm (see https://www.rfc-editor.org/rfc/rfc4122)
	ReportUuid string `protobuf:"bytes,1,opt,name=report_uuid,json=reportUid,proto3" json:"report_uuid,omitempty"`
	// Required
	ReportType RT0007VM1_Header_ReportType `protobuf:"varint,2,opt,name=report_type,json=reportType,proto3,enum=standards.open.v1.RT0007VM1_Header_ReportType" json:"report_type,omitempty"`
	// Required
	Version     RT0007VM1_Header_Version `protobuf:"varint,3,opt,name=version,proto3,enum=standards.open.v1.RT0007VM1_Header_Version" json:"version,omitempty"`
	CreatedBy   string                   `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	SubmittedBy string                   `protobuf:"bytes,5,opt,name=submitted_by,json=submittedBy,proto3" json:"submitted_by,omitempty"`
	// Format "date-time"
	CreationTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
}

func (x *RT0007VM1_Header) Reset() {
	*x = RT0007VM1_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0007VM1_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0007VM1_Header) ProtoMessage() {}

func (x *RT0007VM1_Header) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0007VM1_Header.ProtoReflect.Descriptor instead.
func (*RT0007VM1_Header) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RT0007VM1_Header) GetReportUuid() string {
	if x != nil {
		return x.ReportUuid
	}
	return ""
}

func (x *RT0007VM1_Header) GetReportType() RT0007VM1_Header_ReportType {
	if x != nil {
		return x.ReportType
	}
	return RT0007VM1_Header_SFDR_PRECONTRACTUAL
}

func (x *RT0007VM1_Header) GetVersion() RT0007VM1_Header_Version {
	if x != nil {
		return x.Version
	}
	return RT0007VM1_Header_V1_0_0
}

func (x *RT0007VM1_Header) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *RT0007VM1_Header) GetSubmittedBy() string {
	if x != nil {
		return x.SubmittedBy
	}
	return ""
}

func (x *RT0007VM1_Header) GetCreationTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTimestamp
	}
	return nil
}

// The payload of the report (required)
type RT0007VM1_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SfdrPrecontractualReport *RT0007VM1_SFDRPrecontractualReport `protobuf:"bytes,1,opt,name=sfdr_precontractual_report,json=sfdrPrecontractualReport,proto3" json:"sfdr_precontractual_report,omitempty"`
}

func (x *RT0007VM1_Payload) Reset() {
	*x = RT0007VM1_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0007VM1_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0007VM1_Payload) ProtoMessage() {}

func (x *RT0007VM1_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0007VM1_Payload.ProtoReflect.Descriptor instead.
func (*RT0007VM1_Payload) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 1}
}

func (x *RT0007VM1_Payload) GetSfdrPrecontractualReport() *RT0007VM1_SFDRPrecontractualReport {
	if x != nil {
		return x.SfdrPrecontractualReport
	}
	return nil
}

// The SFDR PreContractual Report
type RT0007VM1_SFDRPrecontractualReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CSSF code of the entity
	EntityCssfCode string `protobuf:"bytes,1,opt,name=entity_cssf_code,json=entityCssfCode,proto3" json:"entity_cssf_code,omitempty"`
	// List of Article 8 subfunds
	Article8Subfunds []*RT0007VM1_Article8Subfund `protobuf:"bytes,2,rep,name=article8_subfunds,json=article8Subfunds,proto3" json:"article8_subfunds,omitempty"`
	// List of Article 9 subfunds
	Article9Subfunds []*RT0007VM1_Article9Subfund `protobuf:"bytes,3,rep,name=article9_subfunds,json=article9Subfunds,proto3" json:"article9_subfunds,omitempty"`
	// Subfunds subject to the SFDR disclosure obligation without being an art 8 or art 9 product array
	OtherSubfunds []*RT0007VM1_OtherSubfund `protobuf:"bytes,4,rep,name=other_subfunds,json=otherSubfunds,proto3" json:"other_subfunds,omitempty"`
}

func (x *RT0007VM1_SFDRPrecontractualReport) Reset() {
	*x = RT0007VM1_SFDRPrecontractualReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0007VM1_SFDRPrecontractualReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0007VM1_SFDRPrecontractualReport) ProtoMessage() {}

func (x *RT0007VM1_SFDRPrecontractualReport) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0007VM1_SFDRPrecontractualReport.ProtoReflect.Descriptor instead.
func (*RT0007VM1_SFDRPrecontractualReport) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 2}
}

func (x *RT0007VM1_SFDRPrecontractualReport) GetEntityCssfCode() string {
	if x != nil {
		return x.EntityCssfCode
	}
	return ""
}

func (x *RT0007VM1_SFDRPrecontractualReport) GetArticle8Subfunds() []*RT0007VM1_Article8Subfund {
	if x != nil {
		return x.Article8Subfunds
	}
	return nil
}

func (x *RT0007VM1_SFDRPrecontractualReport) GetArticle9Subfunds() []*RT0007VM1_Article9Subfund {
	if x != nil {
		return x.Article9Subfunds
	}
	return nil
}

func (x *RT0007VM1_SFDRPrecontractualReport) GetOtherSubfunds() []*RT0007VM1_OtherSubfund {
	if x != nil {
		return x.OtherSubfunds
	}
	return nil
}

// Definition of information to be provided per Article 8 sub fund
type RT0007VM1_Article8Subfund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CSSF code of the sub-fund. Number corresponding to the compartment without zero in front of the number. For a stand-alone fund, please enter 0. For a multiple compartment fund, please indicate the corresponding number.
	SubfundCssfCode int32 `protobuf:"varint,1,opt,name=subfund_cssf_code,json=subfundCssfCode,proto3" json:"subfund_cssf_code,omitempty"`
	// The sub-fund promotes Environmental/Social characteristics and while it does not have as its objective a sustainable investment, it will make sustainable investments
	SustainableInvestmentsIndicator YesNo `protobuf:"varint,2,opt,name=sustainable_investments_indicator,json=sustainableInvestmentsIndicator,proto3,enum=standards.open.v1.YesNo" json:"sustainable_investments_indicator,omitempty"`
	// Minimum proportion of sustainable investments.
	SustainableInvestmentsMinimumProportion1 float64 `protobuf:"fixed64,3,opt,name=sustainableInvestmentsMinimumProportion1,proto3" json:"sustainableInvestmentsMinimumProportion1,omitempty"`
	// With an environmental objective in economic activities that qualify as environmentally sustainable under the EU Taxonomy.
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	EnvironmentalObjectiveTaxonomyIndicator YesNo `protobuf:"varint,4,opt,name=environmental_objective_taxonomy_indicator,json=environmentalObjectiveTaxonomyIndicator,proto3,enum=standards.open.v1.YesNo" json:"environmental_objective_taxonomy_indicator,omitempty"`
	// with an environmental objective in economic activities that do not qualify as environmentally sustainable under the EU Taxonomy
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	EnvironmentalObjectiveNoTaxonomyIndicator YesNo `protobuf:"varint,5,opt,name=environmental_objective_no_taxonomy_indicator,json=environmentalObjectiveNoTaxonomyIndicator,proto3,enum=standards.open.v1.YesNo" json:"environmental_objective_no_taxonomy_indicator,omitempty"`
	// with a social objective
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	SocialObjectiveIndicator YesNo                                           `protobuf:"varint,6,opt,name=social_objective_indicator,json=socialObjectiveIndicator,proto3,enum=standards.open.v1.YesNo" json:"social_objective_indicator,omitempty"`
	EAndSCharacteristics     []RT0007VM1_Article8Subfund_EAndSCharacteristic `protobuf:"varint,7,rep,packed,name=e_and_s_characteristics,json=eAndSCharacteristics,proto3,enum=standards.open.v1.RT0007VM1_Article8Subfund_EAndSCharacteristic" json:"e_and_s_characteristics,omitempty"`
	// Please specify other environmental characteristics.
	// The field is required if EOTH is defined in the list of values for the field eAndSCharacteristics
	OtherEnvironmentalCharacteristicsDescription string `protobuf:"bytes,8,opt,name=other_environmental_characteristics_description,json=otherEnvironmentalCharacteristicsDescription,proto3" json:"other_environmental_characteristics_description,omitempty"`
	// Please specify other social characteristics
	// The field is required if SOTH is defined in the list of values for the field eAndSCharacteristics
	OtherSocialCharacteristicsDescription string `protobuf:"bytes,9,opt,name=other_social_characteristics_description,json=otherSocialCharacteristicsDescription,proto3" json:"other_social_characteristics_description,omitempty"`
	// What are the objectives of the sustainable investments that the sub-fund partially intends to make?
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	SustainableInvestmentsObjectives []RT0007VM1_Article8Subfund_SustainableInvestmentObjective `protobuf:"varint,10,rep,packed,name=sustainable_investments_objectives,json=sustainableInvestmentsObjectives,proto3,enum=standards.open.v1.RT0007VM1_Article8Subfund_SustainableInvestmentObjective" json:"sustainable_investments_objectives,omitempty"`
	// Does the sub-fund consider principle adverse impacts on sustainability factors?
	PrincipalAdverseImpactConsiderationIndicator YesNo `protobuf:"varint,11,opt,name=principal_adverse_impact_consideration_indicator,json=principalAdversImpactConsiderationIndicator,proto3,enum=standards.open.v1.YesNo" json:"principal_adverse_impact_consideration_indicator,omitempty"`
	// What investment strategy does the sub-fund follow?
	InvestmentStrategies []RT0007VM1_Article8Subfund_InvestmentStrategy `protobuf:"varint,12,rep,packed,name=investment_strategies,json=investmentsStrategies,proto3,enum=standards.open.v1.RT0007VM1_Article8Subfund_InvestmentStrategy" json:"investment_strategies,omitempty"`
	// Please specify other investment strategies
	// The field is required if O is defined in the list of values for the field investmentsStrategies
	OtherInvestmentsStrategiesDescription string `protobuf:"bytes,13,opt,name=other_investments_strategies_description,json=otherInvestmentsStrategiesDescription,proto3" json:"other_investments_strategies_description,omitempty"`
	// Is a policy applied to assess good governance practices of the investee companies?
	GoodGovernancePolicyIndicator YesNo `protobuf:"varint,14,opt,name=good_governance_policy_indicator,json=goodGovernancePolicyIndicator,proto3,enum=standards.open.v1.YesNo" json:"good_governance_policy_indicator,omitempty"`
	// If no, please explain
	// The field is required if the value of the field goodGovernancePolicyIndicator is N
	NoGoodGovernancePolicyDescription string `protobuf:"bytes,15,opt,name=no_good_governance_policy_description,json=noGoodGovernancePolicyDescription,proto3" json:"no_good_governance_policy_description,omitempty"`
	// Minimum proportion of investments aligned with environmental or social characteristics - #1 Aligned with E/S characteristics (in %)
	AlignedEsCharacteristicsInvestmentsMinimumProportion float64 `protobuf:"fixed64,16,opt,name=aligned_es_characteristics_investments_minimum_proportion,json=alignedESCharacteristicsInvestmentsMinimumProportion,proto3" json:"aligned_es_characteristics_investments_minimum_proportion,omitempty"`
	// Minimum proportion of sustainable investments - 1#A Sustainable (in %)
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	SustainableInvestmentsMinimumProportion2 float64 `protobuf:"fixed64,17,opt,name=sustainable_investments_minimum_proportion2,json=sustainableInvestmentsMinimumProportion2,proto3" json:"sustainable_investments_minimum_proportion2,omitempty"`
	// Minimum proportion of environmental or social characteristics investments that do not qualify as sustainable investments - #1B Other E/S characteristics (in %)
	OtherEsCharacteristicsInvestmentsMinimumProportion float64 `protobuf:"fixed64,18,opt,name=other_es_characteristics_investments_minimum_proportion,json=otherESCharacteristicsInvestmentsMinimumProportion,proto3" json:"other_es_characteristics_investments_minimum_proportion,omitempty"`
	// Minimum proportion of remaining investments which are neither aligned with the environmental or social characteristics, nor are qualified as sustainable investments - #2 Other (in %)
	RemainingInvestmentsMinimumProportion float64 `protobuf:"fixed64,19,opt,name=remaining_investments_minimum_proportion,json=remainingInvestmentsMinimumProportion,proto3" json:"remaining_investments_minimum_proportion,omitempty"`
	// Minimum proportion of Taxonomy-aligned (in %)
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TaInvestmentsMinimumProportion float64 `protobuf:"fixed64,20,opt,name=taInvestmentsMinimumProportion,json=ta_investments_minimum_proportion,proto3" json:"taInvestmentsMinimumProportion,omitempty"`
	// Minimum proportion of Other environmental (in %)
	// The field is required if the value of the field environmentalObjectiveNoTaxonomyIndicator is Y
	OtherEnvironmentalMinimumProportion float64 `protobuf:"fixed64,21,opt,name=other_environmental_minimum_proportion,json=otherEnvironmentalMinimumProportion,proto3" json:"other_environmental_minimum_proportion,omitempty"`
	// Minimum proportion of Social (in %)
	// The field is required if the value of the field socialObjectiveIndicator is Y
	SocialMinimumProportion float64 `protobuf:"fixed64,22,opt,name=social_minimum_proportion,json=socialMinimumProportion,proto3" json:"social_minimum_proportion,omitempty"`
	// Does the sub-fund use derivatives as defined in Article 2(1), point (29), of Regulation (EU) No 600/2014 to attain the environmental or social characteristics they promote?
	DerivativesUseIndicator YesNo `protobuf:"varint,23,opt,name=derivatives_use_indicator,json=derivativesUseIndicator,proto3,enum=standards.open.v1.YesNo" json:"derivatives_use_indicator,omitempty"`
	// Taxonomy-aligned activities are expressed as a share of.
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TaCalculationMethod []RT0007VM1_Article8Subfund_TACalculationMethod `protobuf:"varint,24,rep,packed,name=taCalculationMethod,proto3,enum=standards.open.v1.RT0007VM1_Article8Subfund_TACalculationMethod" json:"taCalculationMethod,omitempty"`
	// Does the sub-fund invest in fossil gas related activities complying with the EU Taxonomy?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	FossilGasInvestmentsIndicator YesNo `protobuf:"varint,25,opt,name=fossil_gas_investments_indicator,json=fossilGasInvestmentsIndicator,proto3,enum=standards.open.v1.YesNo" json:"fossil_gas_investments_indicator,omitempty"`
	// Does the sub-fund invest in nuclear energy related activities complying with the EU Taxonomy?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	NuclearEnergyInvestmentsIndicator YesNo `protobuf:"varint,26,opt,name=nuclear_energy_investments_indicator,json=nuclearEnergyInvestmentsIndicator,proto3,enum=standards.open.v1.YesNo" json:"nuclear_energy_investments_indicator,omitempty"`
	// Minimum percentage of investments in fossil gas related activities aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field fossilGasInvestmentsIndicator is Y
	FossilGasInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,27,opt,name=fossil_gas_investments_incl_sovereign_bonds_minimum_proportion,json=fossilGasInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"fossil_gas_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in nuclear energy related activities aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field nuclearEnergyInvestmentsIndicator is Y.
	NuclearEnergyInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,28,opt,name=nuclear_energy_investments_incl_sovereign_bonds_minimum_proportion,json=nuclearEnregyInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"nuclear_energy_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments (excluding fossil gas and nuclear energy related activities) aligned with EU taxonomy including sovereign bonds.
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	RemainingInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,29,opt,name=remaining_investments_incl_sovereign_bonds_minimum_proportion,json=remainingInvestmentsInclSovereignBondsMinimuProportion,proto3" json:"remaining_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in fossil gas related activities aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field fossilGasInvestmentsIndicator is Y
	FossilGasInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,30,opt,name=fossil_gas_investments_excl_sovereign_bonds_minimum_proportion,json=fossilGasInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"fossil_gas_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in nuclear energy related activities aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field nuclearEnergyInvestmentsIndicator is Y
	NuclearEnergyInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,31,opt,name=nuclear_energy_investments_excl_sovereign_bonds_minimum_proportion,json=nuclearEnregyInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"nuclear_energy_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments (excluding fossil gas and nuclear energy related activities) aligned with EU taxonomy excluding sovereign bonds.
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	RemainingInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,32,opt,name=remaining_investments_excl_sovereign_bonds_minimum_proportion,json=remainingInvestmentsExclSovereignBondsMinimuProportion,proto3" json:"remaining_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// What is the minimum share of investments in transitional activities?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TransitionalActivitiesInvestmentsMinimumShare float64 `protobuf:"fixed64,33,opt,name=transitional_activities_investments_minimum_share,json=transitionalActivitiesInvestmentsMinimumShare,proto3" json:"transitional_activities_investments_minimum_share,omitempty"`
	// What is the minimum share of investments in enabling activities?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	EnablingActivitiesInvestmentsMinimumShare float64 `protobuf:"fixed64,34,opt,name=enabling_activities_investments_minimum_share,json=enablingActivitiesInvestmentsMinimumShare,proto3" json:"enabling_activities_investments_minimum_share,omitempty"`
	// Are there any minimum environmental or social safeguards for investments included under “#2 Other”?
	EnvironmentalOrSocialSafeguardsMinimumIndicator YesNo `protobuf:"varint,35,opt,name=environmental_or_social_safeguards_minimum_indicator,json=environmentalOrSocialSafeguardsMinimumIndicator,proto3,enum=standards.open.v1.YesNo" json:"environmental_or_social_safeguards_minimum_indicator,omitempty"`
	// Is a specific index designated as a reference benchmark to determine whether the sub-fund is aligned with the environmental and/or social characteristics that it promotes?
	ReferenceBenchmarkDesignatedIndicator YesNo `protobuf:"varint,36,opt,name=reference_benchmark_designated_indicator,json=referenceBenchmarkDesignatedIndicator,proto3,enum=standards.open.v1.YesNo" json:"reference_benchmark_designated_indicator,omitempty"`
	// Is an ISIN code available for the reference benchmark?
	// The field is required if the value of the field referenceBenchmarkDesignatedIndicator is Y
	ReferenceBenchmarkIsinCodeIndicator YesNo `protobuf:"varint,37,opt,name=reference_benchmark_isin_code_indicator,json=referenceBenchmarkIsinCodeIndicator,proto3,enum=standards.open.v1.YesNo" json:"reference_benchmark_isin_code_indicator,omitempty"`
	// Specify the ISIN code of the reference benchmark
	// The field is required if the value of the field referenceBenchmarkIsinCodeIndicator is Y.\nThe value of the field must respect the ISIN code naming convention.
	ReferenceBenchmarkIsinCode string `protobuf:"bytes,38,opt,name=reference_benchmark_isin_code,json=referenceBenchmarkIsinCode,proto3" json:"reference_benchmark_isin_code,omitempty"`
	// Specify the name of the reference benchmark
	// The field is required if the value of the field referenceBenchmarkIsinCodeIndicator is N
	ReferenceBenchmarkName string `protobuf:"bytes,39,opt,name=reference_benchmark_name,json=referenceBenchmarkName,proto3" json:"reference_benchmark_name,omitempty"`
	// Indicate website link of the methodology used for the calculation of the designated index can be found
	// The field is required if the value of the field referenceBenchmarkDesignatedIndicator is Y
	ReferenceBenchmarkCalculationMethodWebsiteLink string `protobuf:"bytes,40,opt,name=reference_benchmark_calculation_method_website_link,json=referenceBenchmarkCalculationMethodWebsiteLink,proto3" json:"reference_benchmark_calculation_method_website_link,omitempty"`
	// More product-specific information can be found on the website
	// Include a hyperlink to the website referred to in Article 23 of this Regulation
	SubfundSpecificInformationWebsiteLink string `protobuf:"bytes,41,opt,name=subfund_specific_information_website_link,json=subfundSpecificInformationWebsiteLink,proto3" json:"subfund_specific_information_website_link,omitempty"`
	// Does the above mentioned hyperlink direct investors to a separate section titled “Sustainability-related disclosures”, in the same part of the website (as specified in Q3 of the CSSF SFDR FAQ) as the other information relating to the financial product, including marketing communications, in line with and as further detailed in Article 23 of the SFDR RTS?
	ComplianceArt23Indicator YesNo `protobuf:"varint,42,opt,name=compliance_art23_indicator,json=complianceArt23Indicator,proto3,enum=standards.open.v1.YesNo" json:"compliance_art23_indicator,omitempty"`
	// Does the product related website disclosures, available through the above-mentioned hyperlink, provide all information set out in Article 10(1) SFDR and Articles 25 to 36 SFDR RTS, through the sections and order as specified in Article 24 SFDR RTS?
	ComplianceArt24Indicator YesNo `protobuf:"varint,43,opt,name=compliance_art24_indicator,json=complianceArt24Indicator,proto3,enum=standards.open.v1.YesNo" json:"compliance_art24_indicator,omitempty"`
	// Did you already provide the pre-contractual template to the CSSF for the sub-fund?
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateProvidedToCssfIndicator YesNo `protobuf:"varint,44,opt,name=template_provided_to_cssf_indicator,json=templateProvidedToCssfIndicator,proto3,enum=standards.open.v1.YesNo" json:"template_provided_to_cssf_indicator,omitempty"`
	// Subfund still in a ramp-up period
	// Required if AIF, forbidden if UCITS or Pension fund
	RampUpPeriodIndicator YesNo `protobuf:"varint,55,opt,name=ramp_up_period_indicator,json=rampUpPeriodIndicator,proto3,enum=standards.open.v1.YesNo" json:"ramp_up_period_indicator,omitempty"`
	// Ramp-up period end date
	// Required if AIF and if the value of the field rampUpPeriodIndicator is Y.
	// Forbidden if UCITS or Pension fund. Format YYYY-MM-DD.
	RampUpPeriodEndDate string `protobuf:"bytes,56,opt,name=ramp_up_period_end_date,json=rampUpPeriodEndDate,proto3" json:"ramp_up_period_end_date,omitempty"`
	// Please confirm that the pre-contractual template is available to investors
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateAvailableToInvestorsIndicator YesNo `protobuf:"varint,57,opt,name=template_available_to_investors_indicator,json=templateAvailableToInvestorsIndicator,proto3,enum=standards.open.v1.YesNo" json:"template_available_to_investors_indicator,omitempty"`
	// For AIFs not integrating the pre-contractual template in the prospectus, please advise where and how it is available to investors
	// Required if AIF and if the value of the field templateProvidedToCssfIndicator is N.
	// Forbidden if UCITS or Pension fund
	TemplateNotInProspectusWhereAndHowAvailableToInvestors string `protobuf:"bytes,58,opt,name=template_not_in_prospectus_where_and_how_available_to_investors,json=templateNotInProspectusWhereAndHowAvailableToInvestors,proto3" json:"template_not_in_prospectus_where_and_how_available_to_investors,omitempty"`
	// For AIFs not integrating the pre-contractual template in the prospectus, ESG specific investment policy
	// Required if AIF and if the value of the field templateProvidedToCssfIndicator is N.
	// Forbidden if UCITS or Pension fund
	SpecificEsgInvestmentPolicy string `protobuf:"bytes,59,opt,name=specific_esg_investment_policy,json=specificESGInvestmentPolicy,proto3" json:"specific_esg_investment_policy,omitempty"`
	// Prominent statement in the main body of the prospectus/issuing document
	ProminentStatementMainBodyProspectusIndicator YesNo `protobuf:"varint,60,opt,name=prominent_statement_main_body_prospectus_indicator,json=prominentStatementMainBodyProspectusIndicator,proto3,enum=standards.open.v1.YesNo" json:"prominent_statement_main_body_prospectus_indicator,omitempty"`
	// They comply with the requirements set out in the CDR; especially the general principles foreseen in article 2 of the CDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	RequirementsCdrComplianceIndicator YesNo `protobuf:"varint,61,opt,name=requirements_cdr_compliance_indicator,json=requirementsCDRComplianceIndicator,proto3,enum=standards.open.v1.YesNo" json:"requirements_cdr_compliance_indicator,omitempty"`
	// They do not contradict with the information currently published for the respective (sub-)fund on the website (link) in accordance with article 10 of the Regulation (EU) 2019/2088 on sustainability‐related disclosures in the financial services sector (SFDR);
	// Required if AIF, forbidden if UCITS or Pension fund
	NoContradictionWithWebsiteLinkIndicator YesNo `protobuf:"varint,62,opt,name=no_contradiction_with_website_link_indicator,json=noContradictionWithWebsiteLinkIndicator,proto3,enum=standards.open.v1.YesNo" json:"no_contradiction_with_website_link_indicator,omitempty"`
	// They do not contradict with information disclosed under article 22 and 23 of the AIFMD; information disclosed in the PRIIPs KID (if applicable) or information contained in any marketing communication according to article 13 SFDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	NoContradictionWithDisclosedInformationIndicator YesNo `protobuf:"varint,63,opt,name=no_contradiction_with_disclosed_information_indicator,json=noContradictionWithDisclosedInformationIndicator,proto3,enum=standards.open.v1.YesNo" json:"no_contradiction_with_disclosed_information_indicator,omitempty"`
	// They are accurate and reflect what has been actually implemented.
	// Required if AIF, forbidden if UCITS or Pension fund
	ReflectImplementationIndicator YesNo `protobuf:"varint,64,opt,name=reflect_implementation_indicator,json=reflectImplementationIndicator,proto3,enum=standards.open.v1.YesNo" json:"reflect_implementation_indicator,omitempty"`
	// Are sustainability risks integrated into the investment decisions for this financial product (Art.6 SFDR)?
	SustainabilityRisksConsideredIndicator YesNo `protobuf:"varint,65,opt,name=sustainability_risks_considered_indicator,json=sustainabilityRisksConsideredIndicator,proto3,enum=standards.open.v1.YesNo" json:"sustainability_risks_considered_indicator,omitempty"`
	// Is the information in accordance with article 6 SFDR disclosed?
	Art6InformationDisclosedIndicator YesNo `protobuf:"varint,66,opt,name=art6_information_disclosed_indicator,json=art6InformationDisclosedIndicator,proto3,enum=standards.open.v1.YesNo" json:"art6_information_disclosed_indicator,omitempty"`
	// Confirm that the template(s) used for the pre-contractual disclosures of (sub-)funds qualifying as article 8 Product (“Product 8”) or article 9 Product (“Product 9”) under SFDR is a 1-to-1 copy of the template foreseen in annex II or III respectively of the CDR and has not been altered except eventually as regards the size and front type of characters or the color used as permitted by article 2 CDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateCdrCopyIndicator YesNo `protobuf:"varint,67,opt,name=template_cdr_copy_indicator,json=templateCDRCopyIndicator,proto3,enum=standards.open.v1.YesNo" json:"template_cdr_copy_indicator,omitempty"`
	// All sections of the template have been properly completed and those which are not applicable have been disclosed as such;
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateAllSectionsCompletedIndicator YesNo `protobuf:"varint,68,opt,name=template_all_sections_completed_indicator,json=templateAllSectionsCompletedIndicator,proto3,enum=standards.open.v1.YesNo" json:"template_all_sections_completed_indicator,omitempty"`
	// Does the information provided here correspond to the latest published information
	// Required if AIF, forbidden if UCITS or Pension fund
	LatestPublishedInformationCorrespondenceIndicator YesNo `protobuf:"varint,69,opt,name=latest_published_information_correspondence_indicator,json=latestPublishedInformationCorrespondenceIndicator,proto3,enum=standards.open.v1.YesNo" json:"latest_published_information_correspondence_indicator,omitempty"`
	// Date of the latest issued pre-contractual template (version)
	TemplateLatestIssuedDate YesNo `protobuf:"varint,70,opt,name=template_latest_issued_date,json=templateLatestIssuedDate,proto3,enum=standards.open.v1.YesNo" json:"template_latest_issued_date,omitempty"`
}

func (x *RT0007VM1_Article8Subfund) Reset() {
	*x = RT0007VM1_Article8Subfund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0007VM1_Article8Subfund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0007VM1_Article8Subfund) ProtoMessage() {}

func (x *RT0007VM1_Article8Subfund) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0007VM1_Article8Subfund.ProtoReflect.Descriptor instead.
func (*RT0007VM1_Article8Subfund) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 3}
}

func (x *RT0007VM1_Article8Subfund) GetSubfundCssfCode() int32 {
	if x != nil {
		return x.SubfundCssfCode
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetSustainableInvestmentsIndicator() YesNo {
	if x != nil {
		return x.SustainableInvestmentsIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetSustainableInvestmentsMinimumProportion1() float64 {
	if x != nil {
		return x.SustainableInvestmentsMinimumProportion1
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetEnvironmentalObjectiveTaxonomyIndicator() YesNo {
	if x != nil {
		return x.EnvironmentalObjectiveTaxonomyIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetEnvironmentalObjectiveNoTaxonomyIndicator() YesNo {
	if x != nil {
		return x.EnvironmentalObjectiveNoTaxonomyIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetSocialObjectiveIndicator() YesNo {
	if x != nil {
		return x.SocialObjectiveIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetEAndSCharacteristics() []RT0007VM1_Article8Subfund_EAndSCharacteristic {
	if x != nil {
		return x.EAndSCharacteristics
	}
	return nil
}

func (x *RT0007VM1_Article8Subfund) GetOtherEnvironmentalCharacteristicsDescription() string {
	if x != nil {
		return x.OtherEnvironmentalCharacteristicsDescription
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetOtherSocialCharacteristicsDescription() string {
	if x != nil {
		return x.OtherSocialCharacteristicsDescription
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetSustainableInvestmentsObjectives() []RT0007VM1_Article8Subfund_SustainableInvestmentObjective {
	if x != nil {
		return x.SustainableInvestmentsObjectives
	}
	return nil
}

func (x *RT0007VM1_Article8Subfund) GetPrincipalAdverseImpactConsiderationIndicator() YesNo {
	if x != nil {
		return x.PrincipalAdverseImpactConsiderationIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetInvestmentStrategies() []RT0007VM1_Article8Subfund_InvestmentStrategy {
	if x != nil {
		return x.InvestmentStrategies
	}
	return nil
}

func (x *RT0007VM1_Article8Subfund) GetOtherInvestmentsStrategiesDescription() string {
	if x != nil {
		return x.OtherInvestmentsStrategiesDescription
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetGoodGovernancePolicyIndicator() YesNo {
	if x != nil {
		return x.GoodGovernancePolicyIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetNoGoodGovernancePolicyDescription() string {
	if x != nil {
		return x.NoGoodGovernancePolicyDescription
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetAlignedEsCharacteristicsInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.AlignedEsCharacteristicsInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetSustainableInvestmentsMinimumProportion2() float64 {
	if x != nil {
		return x.SustainableInvestmentsMinimumProportion2
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetOtherEsCharacteristicsInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.OtherEsCharacteristicsInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetRemainingInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetTaInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.TaInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetOtherEnvironmentalMinimumProportion() float64 {
	if x != nil {
		return x.OtherEnvironmentalMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetSocialMinimumProportion() float64 {
	if x != nil {
		return x.SocialMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetDerivativesUseIndicator() YesNo {
	if x != nil {
		return x.DerivativesUseIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetTaCalculationMethod() []RT0007VM1_Article8Subfund_TACalculationMethod {
	if x != nil {
		return x.TaCalculationMethod
	}
	return nil
}

func (x *RT0007VM1_Article8Subfund) GetFossilGasInvestmentsIndicator() YesNo {
	if x != nil {
		return x.FossilGasInvestmentsIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetNuclearEnergyInvestmentsIndicator() YesNo {
	if x != nil {
		return x.NuclearEnergyInvestmentsIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetFossilGasInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.FossilGasInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetNuclearEnergyInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.NuclearEnergyInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetRemainingInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetFossilGasInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.FossilGasInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetNuclearEnergyInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.NuclearEnergyInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetRemainingInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetTransitionalActivitiesInvestmentsMinimumShare() float64 {
	if x != nil {
		return x.TransitionalActivitiesInvestmentsMinimumShare
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetEnablingActivitiesInvestmentsMinimumShare() float64 {
	if x != nil {
		return x.EnablingActivitiesInvestmentsMinimumShare
	}
	return 0
}

func (x *RT0007VM1_Article8Subfund) GetEnvironmentalOrSocialSafeguardsMinimumIndicator() YesNo {
	if x != nil {
		return x.EnvironmentalOrSocialSafeguardsMinimumIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetReferenceBenchmarkDesignatedIndicator() YesNo {
	if x != nil {
		return x.ReferenceBenchmarkDesignatedIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetReferenceBenchmarkIsinCodeIndicator() YesNo {
	if x != nil {
		return x.ReferenceBenchmarkIsinCodeIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetReferenceBenchmarkIsinCode() string {
	if x != nil {
		return x.ReferenceBenchmarkIsinCode
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetReferenceBenchmarkName() string {
	if x != nil {
		return x.ReferenceBenchmarkName
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetReferenceBenchmarkCalculationMethodWebsiteLink() string {
	if x != nil {
		return x.ReferenceBenchmarkCalculationMethodWebsiteLink
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetSubfundSpecificInformationWebsiteLink() string {
	if x != nil {
		return x.SubfundSpecificInformationWebsiteLink
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetComplianceArt23Indicator() YesNo {
	if x != nil {
		return x.ComplianceArt23Indicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetComplianceArt24Indicator() YesNo {
	if x != nil {
		return x.ComplianceArt24Indicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetTemplateProvidedToCssfIndicator() YesNo {
	if x != nil {
		return x.TemplateProvidedToCssfIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetRampUpPeriodIndicator() YesNo {
	if x != nil {
		return x.RampUpPeriodIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetRampUpPeriodEndDate() string {
	if x != nil {
		return x.RampUpPeriodEndDate
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetTemplateAvailableToInvestorsIndicator() YesNo {
	if x != nil {
		return x.TemplateAvailableToInvestorsIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetTemplateNotInProspectusWhereAndHowAvailableToInvestors() string {
	if x != nil {
		return x.TemplateNotInProspectusWhereAndHowAvailableToInvestors
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetSpecificEsgInvestmentPolicy() string {
	if x != nil {
		return x.SpecificEsgInvestmentPolicy
	}
	return ""
}

func (x *RT0007VM1_Article8Subfund) GetProminentStatementMainBodyProspectusIndicator() YesNo {
	if x != nil {
		return x.ProminentStatementMainBodyProspectusIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetRequirementsCdrComplianceIndicator() YesNo {
	if x != nil {
		return x.RequirementsCdrComplianceIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetNoContradictionWithWebsiteLinkIndicator() YesNo {
	if x != nil {
		return x.NoContradictionWithWebsiteLinkIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetNoContradictionWithDisclosedInformationIndicator() YesNo {
	if x != nil {
		return x.NoContradictionWithDisclosedInformationIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetReflectImplementationIndicator() YesNo {
	if x != nil {
		return x.ReflectImplementationIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetSustainabilityRisksConsideredIndicator() YesNo {
	if x != nil {
		return x.SustainabilityRisksConsideredIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetArt6InformationDisclosedIndicator() YesNo {
	if x != nil {
		return x.Art6InformationDisclosedIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetTemplateCdrCopyIndicator() YesNo {
	if x != nil {
		return x.TemplateCdrCopyIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetTemplateAllSectionsCompletedIndicator() YesNo {
	if x != nil {
		return x.TemplateAllSectionsCompletedIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetLatestPublishedInformationCorrespondenceIndicator() YesNo {
	if x != nil {
		return x.LatestPublishedInformationCorrespondenceIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article8Subfund) GetTemplateLatestIssuedDate() YesNo {
	if x != nil {
		return x.TemplateLatestIssuedDate
	}
	return YesNo_N
}

// Definition of information to be provided per Article 9 sub fund
type RT0007VM1_Article9Subfund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CSSF code of the sub-fund. Number corresponding to the compartment without zero in front of the number. For a stand-alone fund, please enter 0. For a multiple compartment fund, please indicate the corresponding number.
	SubfundCssfCode int32 `protobuf:"varint,1,opt,name=subfund_cssf_code,json=subfundCssfCode,proto3" json:"subfund_cssf_code,omitempty"`
	// The sub-fund will make a minimum of sustainable investments with an environmental objective
	SustainableInvestmentsIndicator YesNo `protobuf:"varint,2,opt,name=sustainable_investments_indicator,json=sustainableInvestmentsIndicator,proto3,enum=standards.open.v1.YesNo" json:"sustainable_investments_indicator,omitempty"`
	// Minimum proportion of sustainable investments with an environmental objective
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	SustainableInvestmentsEnvironmentalMinimumProportion1 float64 `protobuf:"fixed64,3,opt,name=sustainable_investments_environmental_minimum_proportion1,json=sustainableInvestmentsEnvironmentalMinimumProportion1,proto3" json:"sustainable_investments_environmental_minimum_proportion1,omitempty"`
	// In economic activities that qualify as environmentally sustainable under the EU Taxonomy
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	EnvironmentalObjectiveTaxonomyIndicator YesNo `protobuf:"varint,4,opt,name=environmental_objective_taxonomy_indicator,json=environmentalObjectiveTaxonomyIndicator,proto3,enum=standards.open.v1.YesNo" json:"environmental_objective_taxonomy_indicator,omitempty"`
	// In economic activities that do not qualify as environmentally sustainable under the EU Taxonomy
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	EnvironmentalObjectiveNoTaxonomyIndicator YesNo `protobuf:"varint,5,opt,name=environmental_objective_no_taxonomy_indicator,json=environmentalObjectiveNoTaxonomyIndicator,proto3,enum=standards.open.v1.YesNo" json:"environmental_objective_no_taxonomy_indicator,omitempty"`
	// The sub-fund will make a minimum of sustainable investments with a social objective
	SocialObjectiveIndicator YesNo `protobuf:"varint,6,opt,name=social_objective_indicator,json=socialObjectiveIndicator,proto3,enum=standards.open.v1.YesNo" json:"social_objective_indicator,omitempty"`
	// Minimum percentage of sustainable investments with a social objective
	// The field is required if the value of the field socialObjectiveIndicator is Y
	SustainableInvestmentsSocialMinimalProportion1 float64                                                      `protobuf:"fixed64,7,opt,name=sustainable_investments_social_minimal_proportion1,json=sustainableInvestmentsSocialMinimalProportion1,proto3" json:"sustainable_investments_social_minimal_proportion1,omitempty"`
	EnvironmentalAndSocialObjectives               []RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives `protobuf:"varint,8,rep,packed,name=environmental_and_social_objectives,json=environmentalAndSocialObjectives,proto3,enum=standards.open.v1.RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives" json:"environmental_and_social_objectives,omitempty"`
	// Does the sub-fund consider principal adverse impacts on sustainability factors?
	PrincipalAdverseImpactConsiderationIndicator YesNo `protobuf:"varint,9,opt,name=principal_adverse_impact_consideration_indicator,json=principalAdversImpactConsiderationIndicator,proto3,enum=standards.open.v1.YesNo" json:"principal_adverse_impact_consideration_indicator,omitempty"`
	// What investment strategy does the sub-fund follow?
	InvestmentsStrategies []RT0007VM1_Article9Subfund_InvestmentStrategy `protobuf:"varint,10,rep,packed,name=investments_strategies,json=investmentsStrategies,proto3,enum=standards.open.v1.RT0007VM1_Article9Subfund_InvestmentStrategy" json:"investments_strategies,omitempty"`
	// Please specify other investment strategies
	// The field is required if O is defined in the list of values for the field investmentsStrategies
	OtherInvestmentsStrategiesDescription string `protobuf:"bytes,11,opt,name=otherInvestmentsStrategiesDescription,proto3" json:"otherInvestmentsStrategiesDescription,omitempty"`
	// Is a policy applied to assess good governance practices of the investee companies?
	GoodGovernancePolicyIndicator YesNo `protobuf:"varint,12,opt,name=good_governance_policy_indicator,json=goodGovernancePolicyIndicator,proto3,enum=standards.open.v1.YesNo" json:"good_governance_policy_indicator,omitempty"`
	// If no, please explain.
	// The field is required if the value of the field goodGovernancePolicyIndicator is N"
	NoGoodGovernancePolicyDescription string `protobuf:"bytes,13,opt,name=no_good_governance_policy_description,json=noGoodGovernancePolicyDescription,proto3" json:"no_good_governance_policy_description,omitempty"`
	// Minimum proportion of sustainable investments - #1 Sustainable (in %).
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y or if the value of the field socialObjectiveIndicator is Y
	SustainableInvestmentsMinimalProportion float64 `protobuf:"fixed64,14,opt,name=sustainable_investments_minimal_proportion,json=sustainableInvestmentsMinimalProportion,proto3" json:"sustainable_investments_minimal_proportion,omitempty"`
	// Minimum proportion of sustainable environmental investments - #1 Sustainable - Environmental (in %)
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y.
	SustainableInvestmentsEnvironmentalMinimumProportion2 float64 `protobuf:"fixed64,15,opt,name=sustainable_investments_environmental_minimum_proportion2,json=sustainableInvestmentsEnvironmentalMinimumProportion2,proto3" json:"sustainable_investments_environmental_minimum_proportion2,omitempty"`
	// Minimum proportion of Taxonomy-aligned - #1 Sustainable - Environmental - Taxonomy-aligned (in %)
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	SustainableInvestmentsEnvironmentalTaMinimumProportion float64 `protobuf:"fixed64,16,opt,name=sustainable_investments_environmental_ta_minimum_proportion,json=sustainableInvestmentsEnvironmentalTaMinimumProportion,proto3" json:"sustainable_investments_environmental_ta_minimum_proportion,omitempty"`
	// Minimum proportion of Other - #1 Sustainable - Environmental - Other (in %).
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y.
	SustainableInvestmentsEnvironmentalOtherMinimumProportion float64 `protobuf:"fixed64,17,opt,name=sustainable_investments_environmental_other_minimum_proportion,json=sustainableInvestmentsEnvironmentalOtherMinimumProportion,proto3" json:"sustainable_investments_environmental_other_minimum_proportion,omitempty"`
	// Minimum proportion of sustainable social investments #1 Sustainable - Social (in %)
	// The field is required if the value of the field socialObjectiveIndicator is Y
	SustainableInvestmentsSocialMinimumProportion2 float64 `protobuf:"fixed64,18,opt,name=sustainable_investments_social_minimum_proportion2,json=sustainableInvestmentsSocialMinimumProportion2,proto3" json:"sustainable_investments_social_minimum_proportion2,omitempty"`
	// Minimum proportion of not sustainable investments - #2 Not sustainable (in %)
	NotSustainableInvestmentsMinimumProportion float64 `protobuf:"fixed64,19,opt,name=not_sustainable_investments_minimum_proportion,json=notSustainableInvestmentsMinimumProportion,proto3" json:"not_sustainable_investments_minimum_proportion,omitempty"`
	// Does the sub-fund use derivative instruments as defined in Article2(1), point 29, of Regulation (EU) No 600/2014 to attain the sustainable investment objective?
	DerivativesUseIndicator YesNo `protobuf:"varint,20,opt,name=derivatives_use_indicator,json=derivativesUseIndicator,proto3,enum=standards.open.v1.YesNo" json:"derivatives_use_indicator,omitempty"`
	// Taxonomy-aligned activities are expressed as a share of
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TaCalculationMethod []RT0007VM1_Article9Subfund_TaCalculationMethod `protobuf:"varint,21,rep,packed,name=ta_calculation_method,json=taCalculationMethod,proto3,enum=standards.open.v1.RT0007VM1_Article9Subfund_TaCalculationMethod" json:"ta_calculation_method,omitempty"`
	// Does the sub-fund invest in fossil gas related activities complying with the EU Taxonomy?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	FossilGasInvestmentsIndicator YesNo `protobuf:"varint,22,opt,name=fossil_gas_investments_indicator,json=fossilGasInvestmentsIndicator,proto3,enum=standards.open.v1.YesNo" json:"fossil_gas_investments_indicator,omitempty"`
	// Does the sub-fund invest in nuclear energy related activities complying with the EU Taxonomy?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	NuclearEnergyInvestmentsIndicator YesNo `protobuf:"varint,23,opt,name=nuclear_energy_investments_indicator,json=nuclearEnergyInvestmentsIndicator,proto3,enum=standards.open.v1.YesNo" json:"nuclear_energy_investments_indicator,omitempty"`
	// Minimum percentage of investments in fossil gas related activities aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field fossilGasInvestmentsIndicator is Y
	FossilGasInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,24,opt,name=fossil_gas_investments_incl_sovereign_bonds_minimum_proportion,json=fossilGasInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"fossil_gas_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in nuclear energy related activities aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field nuclearEnergyInvestmentsIndicator is Y
	NuclearEnergyInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,25,opt,name=nuclear_energy_investments_incl_sovereign_bonds_minimum_proportion,json=nuclearEnergyInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"nuclear_energy_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments (excluding fossil gas and nuclear energy related activities) aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	RemainingInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,26,opt,name=remaining_investments_incl_sovereign_bonds_minimum_proportion,json=remainingInvestmentsInclSovereignBondsMinimuProportion,proto3" json:"remaining_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in fossil gas related activities aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field fossilGasInvestmentsIndicator is Y
	FossilGasInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,27,opt,name=fossil_gas_investments_excl_sovereign_bonds_minimum_proportion,json=fossilGasInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"fossil_gas_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in nuclear energy related activities aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field nuclearEnergyInvestmentsIndicator is Y
	NuclearEnergyInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,28,opt,name=nuclear_energy_investments_excl_sovereign_bonds_minimum_proportion,json=nuclearEnergyInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"nuclear_energy_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments (excluding fossil gas and nuclear energy related activities) aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	RemainingInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,29,opt,name=remaining_investments_excl_sovereign_bonds_minimum_proportion,json=remainingInvestmentsExclSovereignBondsMinimuProportion,proto3" json:"remaining_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// What is the minimum share of investments in transitional activities?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TransitionalActivitiesInvestmentsMinimumShare float64 `protobuf:"fixed64,30,opt,name=transitional_activities_investments_minimum_share,json=transitionalActivitiesInvestmentsMinimumShare,proto3" json:"transitional_activities_investments_minimum_share,omitempty"`
	// What is the minimum share of investments in enabling activities?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	EnablingActivitiesInvestmentsMinimumShare float64 `protobuf:"fixed64,31,opt,name=enabling_activities_investments_minimum_share,json=enablingActivitiesInvestmentsMinimumShare,proto3" json:"enabling_activities_investments_minimum_share,omitempty"`
	// Are there any minimum environmental or social safeguards for investments included under “#2 Not sustainable”?
	EnvironmentalOrSocialSafeguardsMinimumIndicator YesNo `protobuf:"varint,32,opt,name=environmental_or_social_safeguards_minimum_indicator,json=environmentalOrSocialSafeguardsMinimumIndicator,proto3,enum=standards.open.v1.YesNo" json:"environmental_or_social_safeguards_minimum_indicator,omitempty"`
	// Is a specific index designated as a reference benchmark to meet the sustainable investment objective?
	ReferenceBenchmarkDesignatedIndicator YesNo `protobuf:"varint,33,opt,name=reference_benchmark_designated_indicator,json=referenceBenchmarkDesignatedIndicator,proto3,enum=standards.open.v1.YesNo" json:"reference_benchmark_designated_indicator,omitempty"`
	// Is an ISIN code available for the reference benchmark?
	// The field is required if the value of the field referenceBenchmarkDesignatedIndicator is Y
	ReferenceBenchmarkIsinCodeIndicator YesNo `protobuf:"varint,34,opt,name=reference_benchmark_isin_code_indicator,json=referenceBenchmarkIsinCodeIndicator,proto3,enum=standards.open.v1.YesNo" json:"reference_benchmark_isin_code_indicator,omitempty"`
	// Specify the ISIN code of the reference benchmark
	// The field is required if the value of the field referenceBenchmarkIsinCodeIndicator is Y.
	// The value of the field must respect the ISIN code naming convention.
	ReferenceBenchmarkIsinCode string `protobuf:"bytes,35,opt,name=reference_benchmark_isin_code,json=referenceBenchmarkIsinCode,proto3" json:"reference_benchmark_isin_code,omitempty"`
	// Specify the name of the reference benchmark
	// The field is required if the value of the field referenceBenchmarkIsinCodeIndicator is N
	ReferenceBenchmarkName string `protobuf:"bytes,36,opt,name=reference_benchmark_name,json=referenceBenchmarkName,proto3" json:"reference_benchmark_name,omitempty"`
	// Indicate website link of the methodology used for the calculation of the designated index can be found
	// The field is required if the value of the field referenceBenchmarkDesignatedIndicator is Y
	ReferenceBenchmarkCalculationMethodWebsiteLink string `protobuf:"bytes,37,opt,name=reference_benchmark_calculation_method_website_link,json=referenceBenchmarkCalculationMethodWebsiteLink,proto3" json:"reference_benchmark_calculation_method_website_link,omitempty"`
	// More product-specific information can be found on the website
	// Include a hyperlink to the website referred to in Article 23 of this Regulation.
	SubfundSpecificInformationWebsiteLink string `protobuf:"bytes,38,opt,name=subfund_specific_information_website_link,json=subfundSpecificInformationWebsiteLink,proto3" json:"subfund_specific_information_website_link,omitempty"`
	// Does the above mentioned hyperlink direct investors to a separate section titled “Sustainability-related disclosures”, in the same part of the website (as specified in Q3 of the CSSF SFDR FAQ) as the other information relating to the financial product, including marketing communications, in line with and as further detailed in Article 23 of the SFDR RTS?
	ComplianceArt23Indicator YesNo `protobuf:"varint,39,opt,name=compliance_art23_indicator,json=complianceArt23Indicator,proto3,enum=standards.open.v1.YesNo" json:"compliance_art23_indicator,omitempty"`
	// Does the product related website disclosures available through the above-mentioned hyperlink, provide all information set out in Article 10(1) SFDR and Articles 38 to 49 SFDR RTS, through the sections and order as specified in Article 37 SFDR RTS?
	ComplianceArt_37Indicator YesNo `protobuf:"varint,40,opt,name=compliance_art_37_indicator,json=complianceArt37Indicator,proto3,enum=standards.open.v1.YesNo" json:"compliance_art_37_indicator,omitempty"`
	// Did you already provide the pre-contractual template to the CSSF for the sub-fund?
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateProvidedToCssfIndicator YesNo `protobuf:"varint,41,opt,name=template_provided_to_cssf_indicator,json=templateProvidedToCssfIndicator,proto3,enum=standards.open.v1.YesNo" json:"template_provided_to_cssf_indicator,omitempty"`
	// Subfund still in a ramp-up period
	// Required if AIF, forbidden if UCITS or Pension fund
	RampUpPeriodIndicator YesNo `protobuf:"varint,42,opt,name=ramp_up_period_indicator,json=rampUpPeriodIndicator,proto3,enum=standards.open.v1.YesNo" json:"ramp_up_period_indicator,omitempty"`
	// Ramp-up period end date
	// Required if AIF and if the value of the field rampUpPeriodIndicator is Y. Forbidden if UCITS or Pension fund
	RampUpPeriodEndDate string `protobuf:"bytes,43,opt,name=ramp_up_period_end_date,json=rampUpPeriodEndDate,proto3" json:"ramp_up_period_end_date,omitempty"`
	// Please confirm that the pre-contractual template is available to investors
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateAvailableToInvestorsIndicator YesNo `protobuf:"varint,44,opt,name=template_available_to_investors_indicator,json=templateAvailableToInvestorsIndicator,proto3,enum=standards.open.v1.YesNo" json:"template_available_to_investors_indicator,omitempty"`
	// For AIFs not integrating the pre-contractual template in the prospectus, please advise where and how it is available to investors
	// Required if AIF and if the value of the field templateProvidedToCssfIndicator is N. Forbidden if UCITS or Pension fund
	TemplateNotInProspectusWhereAndHowAvailableToInvestors string `protobuf:"bytes,45,opt,name=template_not_in_prospectus_where_and_how_available_to_investors,json=templateNotInProspectusWhereAndHowAvailableToInvestors,proto3" json:"template_not_in_prospectus_where_and_how_available_to_investors,omitempty"`
	// For AIFs not integrating the pre-contractual template in the prospectus, ESG specific investment policy
	// Required if AIF and if the value of the field templateProvidedToCssfIndicator is N. Forbidden if UCITS or Pension fund
	SpecificEsgInvestmentPolicy string `protobuf:"bytes,46,opt,name=specific_esg_investment_policy,json=specificESGInvestmentPolicy,proto3" json:"specific_esg_investment_policy,omitempty"`
	// Prominent statement in the main body of the prospectus/issuing document
	ProminentStatementMainBodyProspectusIndicator YesNo `protobuf:"varint,47,opt,name=prominent_statement_main_body_prospectus_indicator,json=prominentStatementMainBodyProspectusIndicator,proto3,enum=standards.open.v1.YesNo" json:"prominent_statement_main_body_prospectus_indicator,omitempty"`
	// They comply with the requirements set out in the CDR; especially the general principles foreseen in article 2 of the CDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	RequirementsCdrComplianceIndicator YesNo `protobuf:"varint,48,opt,name=requirements_cdr_compliance_indicator,json=requirementsCDRComplianceIndicator,proto3,enum=standards.open.v1.YesNo" json:"requirements_cdr_compliance_indicator,omitempty"`
	// They do not contradict with the information currently published for the respective (sub-)fund on the website (link) in accordance with article 10 of the Regulation (EU) 2019/2088 on sustainability‐related disclosures in the financial services sector (SFDR);
	// Required if AIF, forbidden if UCITS or Pension fund
	NoContradictionWithWebsiteLinkIndicator YesNo `protobuf:"varint,49,opt,name=no_contradiction_with_website_link_indicator,json=noContradictionWithWebsiteLinkIndicator,proto3,enum=standards.open.v1.YesNo" json:"no_contradiction_with_website_link_indicator,omitempty"`
	// They do not contradict with information disclosed under article 22 and 23 of the AIFMD; information disclosed in the PRIIPs KID (if applicable) or information contained in any marketing communication according to article 13 SFDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	NoContradictionWithDisclosedInformationIndicator YesNo `protobuf:"varint,50,opt,name=no_contradiction_with_disclosed_information_indicator,json=noContradictionWithDisclosedInformationIndicator,proto3,enum=standards.open.v1.YesNo" json:"no_contradiction_with_disclosed_information_indicator,omitempty"`
	// They are accurate and reflect what has been actually implemented.
	// Required if AIF, forbidden if UCITS or Pension fund
	ReflectImplementationIndicator YesNo `protobuf:"varint,51,opt,name=reflect_implementation_indicator,json=reflectImplementationIndicator,proto3,enum=standards.open.v1.YesNo" json:"reflect_implementation_indicator,omitempty"`
	// Are sustainability risks integrated into the investment decisions for this financial product (Art.6 SFDR)?
	SustainabilityRisksConsideredIndicator YesNo `protobuf:"varint,52,opt,name=sustainability_risks_considered_indicator,json=sustainabilityRisksConsideredIndicator,proto3,enum=standards.open.v1.YesNo" json:"sustainability_risks_considered_indicator,omitempty"`
	// Is the information in accordance with article 6 SFDR disclosed?
	Art6InformationDisclosedIndicator YesNo `protobuf:"varint,53,opt,name=art6_information_disclosed_indicator,json=art6InformationDisclosedIndicator,proto3,enum=standards.open.v1.YesNo" json:"art6_information_disclosed_indicator,omitempty"`
	// Confirm that the template(s) used for the pre-contractual disclosures of (sub-)funds qualifying as article 8 Product (“Product 8”) or article 9 Product (“Product 9”) under SFDR is a 1-to-1 copy of the template foreseen in annex II or III respectively of the CDR and has not been altered except eventually as regards the size and front type of characters or the color used as permitted by article 2 CDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateCdrCopyIndicator YesNo `protobuf:"varint,54,opt,name=template_cdr_copy_indicator,json=templateCDRCopyIndicator,proto3,enum=standards.open.v1.YesNo" json:"template_cdr_copy_indicator,omitempty"`
	// All sections of the template have been properly completed and those which are not applicable have been disclosed as such;
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateAllSectionsCompletedIndicator YesNo `protobuf:"varint,55,opt,name=template_all_sections_completed_indicator,json=templateAllSectionsCompletedIndicator,proto3,enum=standards.open.v1.YesNo" json:"template_all_sections_completed_indicator,omitempty"`
	// Does the information provided here correspond to the latest published information
	// Required if AIF, forbidden if UCITS or Pension fund
	LatestPublishedInformationCorrespondenceIndicator YesNo `protobuf:"varint,56,opt,name=latest_published_information_correspondence_indicator,json=latestPublishedInformationCorrespondenceIndicator,proto3,enum=standards.open.v1.YesNo" json:"latest_published_information_correspondence_indicator,omitempty"`
	// Date of the latest issued pre-contractual template (version) (YYYY-MM-DD)
	TemplateLatestIssuedDate string `protobuf:"bytes,57,opt,name=template_latest_issued_date,json=templateLatestIssuedDate,proto3" json:"template_latest_issued_date,omitempty"`
}

func (x *RT0007VM1_Article9Subfund) Reset() {
	*x = RT0007VM1_Article9Subfund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0007VM1_Article9Subfund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0007VM1_Article9Subfund) ProtoMessage() {}

func (x *RT0007VM1_Article9Subfund) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0007VM1_Article9Subfund.ProtoReflect.Descriptor instead.
func (*RT0007VM1_Article9Subfund) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 4}
}

func (x *RT0007VM1_Article9Subfund) GetSubfundCssfCode() int32 {
	if x != nil {
		return x.SubfundCssfCode
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetSustainableInvestmentsIndicator() YesNo {
	if x != nil {
		return x.SustainableInvestmentsIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetSustainableInvestmentsEnvironmentalMinimumProportion1() float64 {
	if x != nil {
		return x.SustainableInvestmentsEnvironmentalMinimumProportion1
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetEnvironmentalObjectiveTaxonomyIndicator() YesNo {
	if x != nil {
		return x.EnvironmentalObjectiveTaxonomyIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetEnvironmentalObjectiveNoTaxonomyIndicator() YesNo {
	if x != nil {
		return x.EnvironmentalObjectiveNoTaxonomyIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetSocialObjectiveIndicator() YesNo {
	if x != nil {
		return x.SocialObjectiveIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetSustainableInvestmentsSocialMinimalProportion1() float64 {
	if x != nil {
		return x.SustainableInvestmentsSocialMinimalProportion1
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetEnvironmentalAndSocialObjectives() []RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives {
	if x != nil {
		return x.EnvironmentalAndSocialObjectives
	}
	return nil
}

func (x *RT0007VM1_Article9Subfund) GetPrincipalAdverseImpactConsiderationIndicator() YesNo {
	if x != nil {
		return x.PrincipalAdverseImpactConsiderationIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetInvestmentsStrategies() []RT0007VM1_Article9Subfund_InvestmentStrategy {
	if x != nil {
		return x.InvestmentsStrategies
	}
	return nil
}

func (x *RT0007VM1_Article9Subfund) GetOtherInvestmentsStrategiesDescription() string {
	if x != nil {
		return x.OtherInvestmentsStrategiesDescription
	}
	return ""
}

func (x *RT0007VM1_Article9Subfund) GetGoodGovernancePolicyIndicator() YesNo {
	if x != nil {
		return x.GoodGovernancePolicyIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetNoGoodGovernancePolicyDescription() string {
	if x != nil {
		return x.NoGoodGovernancePolicyDescription
	}
	return ""
}

func (x *RT0007VM1_Article9Subfund) GetSustainableInvestmentsMinimalProportion() float64 {
	if x != nil {
		return x.SustainableInvestmentsMinimalProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetSustainableInvestmentsEnvironmentalMinimumProportion2() float64 {
	if x != nil {
		return x.SustainableInvestmentsEnvironmentalMinimumProportion2
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetSustainableInvestmentsEnvironmentalTaMinimumProportion() float64 {
	if x != nil {
		return x.SustainableInvestmentsEnvironmentalTaMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetSustainableInvestmentsEnvironmentalOtherMinimumProportion() float64 {
	if x != nil {
		return x.SustainableInvestmentsEnvironmentalOtherMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetSustainableInvestmentsSocialMinimumProportion2() float64 {
	if x != nil {
		return x.SustainableInvestmentsSocialMinimumProportion2
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetNotSustainableInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.NotSustainableInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetDerivativesUseIndicator() YesNo {
	if x != nil {
		return x.DerivativesUseIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetTaCalculationMethod() []RT0007VM1_Article9Subfund_TaCalculationMethod {
	if x != nil {
		return x.TaCalculationMethod
	}
	return nil
}

func (x *RT0007VM1_Article9Subfund) GetFossilGasInvestmentsIndicator() YesNo {
	if x != nil {
		return x.FossilGasInvestmentsIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetNuclearEnergyInvestmentsIndicator() YesNo {
	if x != nil {
		return x.NuclearEnergyInvestmentsIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetFossilGasInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.FossilGasInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetNuclearEnergyInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.NuclearEnergyInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetRemainingInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetFossilGasInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.FossilGasInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetNuclearEnergyInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.NuclearEnergyInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetRemainingInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetTransitionalActivitiesInvestmentsMinimumShare() float64 {
	if x != nil {
		return x.TransitionalActivitiesInvestmentsMinimumShare
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetEnablingActivitiesInvestmentsMinimumShare() float64 {
	if x != nil {
		return x.EnablingActivitiesInvestmentsMinimumShare
	}
	return 0
}

func (x *RT0007VM1_Article9Subfund) GetEnvironmentalOrSocialSafeguardsMinimumIndicator() YesNo {
	if x != nil {
		return x.EnvironmentalOrSocialSafeguardsMinimumIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetReferenceBenchmarkDesignatedIndicator() YesNo {
	if x != nil {
		return x.ReferenceBenchmarkDesignatedIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetReferenceBenchmarkIsinCodeIndicator() YesNo {
	if x != nil {
		return x.ReferenceBenchmarkIsinCodeIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetReferenceBenchmarkIsinCode() string {
	if x != nil {
		return x.ReferenceBenchmarkIsinCode
	}
	return ""
}

func (x *RT0007VM1_Article9Subfund) GetReferenceBenchmarkName() string {
	if x != nil {
		return x.ReferenceBenchmarkName
	}
	return ""
}

func (x *RT0007VM1_Article9Subfund) GetReferenceBenchmarkCalculationMethodWebsiteLink() string {
	if x != nil {
		return x.ReferenceBenchmarkCalculationMethodWebsiteLink
	}
	return ""
}

func (x *RT0007VM1_Article9Subfund) GetSubfundSpecificInformationWebsiteLink() string {
	if x != nil {
		return x.SubfundSpecificInformationWebsiteLink
	}
	return ""
}

func (x *RT0007VM1_Article9Subfund) GetComplianceArt23Indicator() YesNo {
	if x != nil {
		return x.ComplianceArt23Indicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetComplianceArt_37Indicator() YesNo {
	if x != nil {
		return x.ComplianceArt_37Indicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetTemplateProvidedToCssfIndicator() YesNo {
	if x != nil {
		return x.TemplateProvidedToCssfIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetRampUpPeriodIndicator() YesNo {
	if x != nil {
		return x.RampUpPeriodIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetRampUpPeriodEndDate() string {
	if x != nil {
		return x.RampUpPeriodEndDate
	}
	return ""
}

func (x *RT0007VM1_Article9Subfund) GetTemplateAvailableToInvestorsIndicator() YesNo {
	if x != nil {
		return x.TemplateAvailableToInvestorsIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetTemplateNotInProspectusWhereAndHowAvailableToInvestors() string {
	if x != nil {
		return x.TemplateNotInProspectusWhereAndHowAvailableToInvestors
	}
	return ""
}

func (x *RT0007VM1_Article9Subfund) GetSpecificEsgInvestmentPolicy() string {
	if x != nil {
		return x.SpecificEsgInvestmentPolicy
	}
	return ""
}

func (x *RT0007VM1_Article9Subfund) GetProminentStatementMainBodyProspectusIndicator() YesNo {
	if x != nil {
		return x.ProminentStatementMainBodyProspectusIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetRequirementsCdrComplianceIndicator() YesNo {
	if x != nil {
		return x.RequirementsCdrComplianceIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetNoContradictionWithWebsiteLinkIndicator() YesNo {
	if x != nil {
		return x.NoContradictionWithWebsiteLinkIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetNoContradictionWithDisclosedInformationIndicator() YesNo {
	if x != nil {
		return x.NoContradictionWithDisclosedInformationIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetReflectImplementationIndicator() YesNo {
	if x != nil {
		return x.ReflectImplementationIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetSustainabilityRisksConsideredIndicator() YesNo {
	if x != nil {
		return x.SustainabilityRisksConsideredIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetArt6InformationDisclosedIndicator() YesNo {
	if x != nil {
		return x.Art6InformationDisclosedIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetTemplateCdrCopyIndicator() YesNo {
	if x != nil {
		return x.TemplateCdrCopyIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetTemplateAllSectionsCompletedIndicator() YesNo {
	if x != nil {
		return x.TemplateAllSectionsCompletedIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetLatestPublishedInformationCorrespondenceIndicator() YesNo {
	if x != nil {
		return x.LatestPublishedInformationCorrespondenceIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_Article9Subfund) GetTemplateLatestIssuedDate() string {
	if x != nil {
		return x.TemplateLatestIssuedDate
	}
	return ""
}

// Definition of information to be provided per Other sub fund
type RT0007VM1_OtherSubfund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CSSF code of the sub-fund. Number corresponding to the compartment without zero in front of the number. For a stand-alone fund, please enter 0. For a multiple compartment fund, please indicate the corresponding number.
	SubfundCssfCode int32 `protobuf:"varint,1,opt,name=subfund_cssf_code,json=subfundCssfCode,proto3" json:"subfund_cssf_code,omitempty"`
	// Are sustainability risks integrated into the investment decisions for this financial product (Art.6 SFDR)?
	Article6Indicator YesNo `protobuf:"varint,2,opt,name=article6_indicator,json=article6Indicator,proto3,enum=standards.open.v1.YesNo" json:"article6_indicator,omitempty"`
	// Is the information in accordance with article 6 SFDR disclosed?
	InformationArticle6DisclosedIndicator YesNo `protobuf:"varint,3,opt,name=information_article6_disclosed_indicator,json=informationArticle6DisclosedIndicator,proto3,enum=standards.open.v1.YesNo" json:"information_article6_disclosed_indicator,omitempty"`
	// Are principal adverse impacts on sustainability factors considered for this financial product (Art.7 SFDR)?
	Article7Indicator YesNo `protobuf:"varint,4,opt,name=article7_indicator,json=article7Indicator,proto3,enum=standards.open.v1.YesNo" json:"article7_indicator,omitempty"`
	// Is the information in accordance with article 7 SFDR disclosed?
	InformationArticle7DisclosedIndicator YesNo `protobuf:"varint,5,opt,name=information_article7_disclosed_indicator,json=informationArticle7DisclosedIndicator,proto3,enum=standards.open.v1.YesNo" json:"information_article7_disclosed_indicator,omitempty"`
}

func (x *RT0007VM1_OtherSubfund) Reset() {
	*x = RT0007VM1_OtherSubfund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0007VM1_OtherSubfund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0007VM1_OtherSubfund) ProtoMessage() {}

func (x *RT0007VM1_OtherSubfund) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0007VM1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0007VM1_OtherSubfund.ProtoReflect.Descriptor instead.
func (*RT0007VM1_OtherSubfund) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0007VM1_proto_rawDescGZIP(), []int{0, 5}
}

func (x *RT0007VM1_OtherSubfund) GetSubfundCssfCode() int32 {
	if x != nil {
		return x.SubfundCssfCode
	}
	return 0
}

func (x *RT0007VM1_OtherSubfund) GetArticle6Indicator() YesNo {
	if x != nil {
		return x.Article6Indicator
	}
	return YesNo_N
}

func (x *RT0007VM1_OtherSubfund) GetInformationArticle6DisclosedIndicator() YesNo {
	if x != nil {
		return x.InformationArticle6DisclosedIndicator
	}
	return YesNo_N
}

func (x *RT0007VM1_OtherSubfund) GetArticle7Indicator() YesNo {
	if x != nil {
		return x.Article7Indicator
	}
	return YesNo_N
}

func (x *RT0007VM1_OtherSubfund) GetInformationArticle7DisclosedIndicator() YesNo {
	if x != nil {
		return x.InformationArticle7DisclosedIndicator
	}
	return YesNo_N
}

var File_standards_open_v1_RT0007VM1_proto protoreflect.FileDescriptor

var file_standards_open_v1_RT0007VM1_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x79,
	0x65, 0x73, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0xb8, 0x02, 0x0a, 0x09,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x12, 0x5c, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54,
	0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x1f,
	0x8a, 0x97, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x61,
	0x62, 0x6f, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x66, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30,
	0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x26,
	0x8a, 0x97, 0x22, 0x22, 0x0a, 0x20, 0x44, 0x61, 0x74, 0x61, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65,
	0x20, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x43, 0x53, 0x53, 0x46, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0xc0, 0x05, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x8c, 0x01, 0x0a, 0x0b, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x6c, 0x8a, 0x97, 0x22, 0x68, 0x0a, 0x66, 0x55, 0x55, 0x49, 0x44, 0x20, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x20, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x72, 0x66, 0x63, 0x20, 0x34, 0x31, 0x32, 0x32, 0x20, 0x6e, 0x6f, 0x72,
	0x6d, 0x20, 0x28, 0x73, 0x65, 0x65, 0x20, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77,
	0x77, 0x77, 0x2e, 0x72, 0x66, 0x63, 0x2d, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x72, 0x66, 0x63, 0x2f, 0x72, 0x66, 0x63, 0x34, 0x31, 0x32, 0x32, 0x29, 0x52, 0x09,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x69, 0x64, 0x12, 0x81, 0x01, 0x0a, 0x0b, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x30, 0x8a, 0x97, 0x22, 0x2c, 0x0a, 0x2a, 0x54, 0x68, 0x65, 0x20, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x20, 0x54, 0x79, 0x70, 0x65, 0x20, 0x28, 0x69, 0x2e, 0x65, 0x2e, 0x20, 0x53, 0x46, 0x44,
	0x52, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x55, 0x41, 0x4c,
	0x29, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x1b, 0x8a, 0x97, 0x22,
	0x17, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x69, 0x2e, 0x65, 0x2e,
	0x20, 0x56, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x29, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x8a, 0x97, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x42, 0x79, 0x3a, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x36, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x8a, 0x97, 0x22, 0x0f, 0x0a,
	0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x20, 0x42, 0x79, 0x3a, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x96, 0x01, 0x0a, 0x12,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x4b, 0x8a, 0x97, 0x22, 0x47, 0x0a, 0x45, 0x54, 0x68, 0x65, 0x20,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x49, 0x53, 0x4f, 0x20, 0x38, 0x36, 0x30, 0x31,
	0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x59, 0x59, 0x59, 0x59, 0x2d, 0x4d, 0x4d, 0x2d,
	0x44, 0x44, 0x54, 0x48, 0x48, 0x3a, 0x6d, 0x6d, 0x3a, 0x73, 0x73, 0x2e, 0x73, 0x73, 0x73, 0x5a,
	0x20, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x25, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x46, 0x44, 0x52, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x22, 0x15, 0x0a, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x31, 0x5f, 0x30, 0x5f, 0x30,
	0x10, 0x00, 0x1a, 0xbf, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0xb3,
	0x01, 0x0a, 0x1a, 0x73, 0x66, 0x64, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d,
	0x31, 0x2e, 0x53, 0x46, 0x44, 0x52, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x3e, 0x8a, 0x97, 0x22, 0x3a,
	0x0a, 0x38, 0x54, 0x68, 0x65, 0x20, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20,
	0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x61, 0x6e,
	0x64, 0x20, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x18, 0x73, 0x66, 0x64, 0x72,
	0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x1a, 0x87, 0x05, 0x0a, 0x18, 0x53, 0x46, 0x44, 0x52, 0x50, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x47, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x73, 0x73, 0x66,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x8a, 0x97, 0x22,
	0x19, 0x0a, 0x17, 0x43, 0x53, 0x53, 0x46, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x73, 0x73, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x11, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x5f, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30,
	0x37, 0x56, 0x4d, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x42, 0x41, 0x8a, 0x97, 0x22, 0x3d, 0x0a, 0x3b, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x20, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x61, 0x6c, 0x6c, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x38, 0x20, 0x73,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x10, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x11, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x5f, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37,
	0x56, 0x4d, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x42, 0x40, 0x8a, 0x97, 0x22, 0x3c, 0x0a, 0x3a, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x20, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x61, 0x6c, 0x6c, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x20, 0x73, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x10, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x12, 0xe4, 0x01, 0x0a, 0x0e, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x2e, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x91, 0x01, 0x8a, 0x97,
	0x22, 0x8c, 0x01, 0x0a, 0x89, 0x01, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x20, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20,
	0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x64, 0x69, 0x73, 0x63,
	0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x20, 0x6f, 0x62, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x20, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x20,
	0x61, 0x6e, 0x20, 0x61, 0x72, 0x74, 0x20, 0x38, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x72, 0x74, 0x20,
	0x39, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x61, 0x72, 0x72, 0x61, 0x79, 0x52,
	0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0xc2,
	0x95, 0x01, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x12, 0x90, 0x02, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x63, 0x73, 0x73, 0x66, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0xe3, 0x01, 0x8a, 0x97, 0x22, 0xde, 0x01, 0x0a, 0x1a, 0x43, 0x53, 0x53, 0x46, 0x20, 0x63, 0x6f,
	0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75,
	0x6e, 0x64, 0x2e, 0x12, 0xbf, 0x01, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x77, 0x69,
	0x74, 0x68, 0x6f, 0x75, 0x74, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x2d, 0x61,
	0x6c, 0x6f, 0x6e, 0x65, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x20, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x30, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x61,
	0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x73,
	0x73, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x94, 0x02, 0x0a, 0x21, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xad, 0x01, 0x8a,
	0x97, 0x22, 0xa8, 0x01, 0x0a, 0xa5, 0x01, 0x54, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66,
	0x75, 0x6e, 0x64, 0x20, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x20, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2f, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x20, 0x69, 0x74, 0x20, 0x64,
	0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x73, 0x20,
	0x69, 0x74, 0x73, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x61, 0x20,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2c, 0x20, 0x69, 0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20,
	0x6d, 0x61, 0x6b, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x1f, 0x73, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x9f, 0x02,
	0x0a, 0x28, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x42, 0xc2, 0x01, 0x8a, 0x97, 0x22, 0xbd, 0x01, 0x0a, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59,
	0x22, 0x33, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x2e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x28, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12,
	0x8e, 0x03, 0x0a, 0x2a, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x96,
	0x02, 0x8a, 0x97, 0x22, 0x91, 0x02, 0x0a, 0x81, 0x01, 0x54, 0x68, 0x65, 0x20, 0x66, 0x75, 0x6e,
	0x64, 0x20, 0x68, 0x61, 0x73, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x20, 0x69, 0x6e, 0x20, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x20, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x79, 0x20, 0x61, 0x73, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55,
	0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x53, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73,
	0x20, 0x59, 0x22, 0x33, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x2e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x27, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x9a, 0x03, 0x0a, 0x2d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x5f,
	0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x9d, 0x02, 0x8a, 0x97, 0x22, 0x98, 0x02, 0x0a, 0x88, 0x01, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x68, 0x61, 0x73, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63,
	0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74,
	0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x20,
	0x61, 0x73, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x6c, 0x79, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x33, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31,
	0x3a, 0x30, 0x52, 0x29, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x8d, 0x02,
	0x0a, 0x1a, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb4, 0x01, 0x8a,
	0x97, 0x22, 0xaf, 0x01, 0x0a, 0x20, 0x54, 0x68, 0x65, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x68,
	0x61, 0x73, 0x20, 0x61, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x33,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f,
	0x31, 0x3a, 0x30, 0x52, 0x18, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xdc, 0x02,
	0x0a, 0x17, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x40, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x45, 0x41,
	0x6e, 0x64, 0x53, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x42, 0xe2, 0x01, 0x8a, 0x97, 0x22, 0xdd, 0x01, 0x0a, 0x4e, 0x57, 0x68, 0x61, 0x74, 0x20,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x61, 0x6e,
	0x64, 0x2f, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x3f, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x59, 0x22, 0x33, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75,
	0x6e, 0x64, 0x2e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x14, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x85, 0x02, 0x0a,
	0x2f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x9d, 0x01, 0x8a, 0x97, 0x22, 0x98, 0x01, 0x0a, 0x33,
	0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x12, 0x61, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69,
	0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x45, 0x4f,
	0x54, 0x48, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x2c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0xef, 0x01, 0x0a, 0x28, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x95, 0x01, 0x8a, 0x97, 0x22, 0x90, 0x01, 0x0a,
	0x2b, 0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x61, 0x54, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x53, 0x4f, 0x54, 0x48, 0x20, 0x69, 0x73, 0x20, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69,
	0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x41, 0x6e, 0x64, 0x53,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x25, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x91, 0x03, 0x0a, 0x22, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d,
	0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x42, 0xf5, 0x01, 0x8a, 0x97, 0x22, 0xf0, 0x01, 0x0a, 0x63, 0x57, 0x68, 0x61, 0x74, 0x20, 0x61,
	0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75,
	0x6e, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x61, 0x6b, 0x65, 0x3f, 0x12, 0x54, 0x54,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69,
	0x73, 0x20, 0x59, 0x22, 0x33, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x2e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0xd6, 0x01, 0x0a, 0x30, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x5f, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42,
	0x55, 0x8a, 0x97, 0x22, 0x51, 0x0a, 0x4f, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x72, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x20, 0x61, 0x64, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x20, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x3f, 0x52, 0x2b, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x41, 0x64, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0xaf, 0x01, 0x0a, 0x15, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d,
	0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x42, 0x38, 0x8a, 0x97, 0x22, 0x34, 0x0a, 0x32, 0x57, 0x68, 0x61, 0x74,
	0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75,
	0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x3f, 0x52, 0x15,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x69, 0x65, 0x73, 0x12, 0xf0, 0x01, 0x0a, 0x28, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x96, 0x01, 0x8a, 0x97, 0x22, 0x91, 0x01,
	0x0a, 0x2a, 0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79,
	0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x20, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x12, 0x63, 0x54, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c,
	0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x52, 0x25, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x20, 0x67, 0x6f, 0x6f,
	0x64, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x58, 0x8a,
	0x97, 0x22, 0x54, 0x0a, 0x52, 0x49, 0x73, 0x20, 0x61, 0x20, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x20, 0x67, 0x6f, 0x6f, 0x64, 0x20, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x20, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x65, 0x65, 0x20, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x3f, 0x52, 0x1d, 0x67, 0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xf6, 0x01, 0x0a, 0x25, 0x6e, 0x6f, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0xa3, 0x01, 0x8a, 0x97, 0x22, 0x9e, 0x01, 0x0a, 0x15,
	0x49, 0x66, 0x20, 0x6e, 0x6f, 0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x65, 0x78,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x52, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x67, 0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x22, 0x31, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x47,
	0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x30, 0x3a, 0x31, 0x52, 0x21, 0x6e, 0x6f,
	0x47, 0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x85, 0x02, 0x0a, 0x39, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x65, 0x73, 0x5f, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x01, 0x42, 0x8b, 0x01, 0x8a, 0x97, 0x22, 0x86, 0x01, 0x0a, 0x83, 0x01, 0x4d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20,
	0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x20, 0x2d, 0x20, 0x23, 0x31, 0x20, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x2f, 0x53, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25,
	0x29, 0x52, 0x34, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x53, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb8, 0x02, 0x0a, 0x2b, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x42, 0xd8, 0x01,
	0x8a, 0x97, 0x22, 0xd3, 0x01, 0x0a, 0x46, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x31, 0x23, 0x41, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x54, 0x54,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69,
	0x73, 0x20, 0x59, 0x22, 0x33, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x2e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x28, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0x12, 0x9d, 0x02, 0x0a, 0x37, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x65, 0x73, 0x5f,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x01, 0x42, 0xa7, 0x01, 0x8a, 0x97, 0x22, 0xa2, 0x01, 0x0a, 0x9f, 0x01, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x6f, 0x66, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x64, 0x6f,
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x20, 0x61, 0x73, 0x20,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x23, 0x31, 0x42, 0x20, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x20, 0x45, 0x2f, 0x53, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x52, 0x32,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x53, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x98, 0x02, 0x0a, 0x28, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x01, 0x42, 0xbe, 0x01, 0x8a, 0x97, 0x22, 0xb9, 0x01, 0x0a, 0xb6, 0x01,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x77, 0x68, 0x69, 0x63,
	0x68, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 0x65, 0x69, 0x74, 0x68, 0x65, 0x72, 0x20, 0x61, 0x6c,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x72, 0x20,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2c, 0x20, 0x6e, 0x6f, 0x72, 0x20, 0x61, 0x72, 0x65, 0x20,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x23, 0x32, 0x20, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x20,
	0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x52, 0x25, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x9b, 0x02,
	0x0a, 0x1e, 0x74, 0x61, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x42, 0xcf, 0x01, 0x8a, 0x97, 0x22, 0xca, 0x01, 0x0a, 0x2d,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2d, 0x61,
	0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x5c, 0x54,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x21, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xac, 0x02, 0x0a, 0x26,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x42, 0xd6, 0x01, 0x8a,
	0x97, 0x22, 0xd1, 0x01, 0x0a, 0x30, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20,
	0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x5e, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f,
	0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38,
	0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f,
	0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x23, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xe4, 0x01, 0x0a, 0x19, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x42, 0xa7,
	0x01, 0x8a, 0x97, 0x22, 0xa2, 0x01, 0x0a, 0x23, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x4d, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x2c, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x17, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x8b, 0x02, 0x0a, 0x19, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42,
	0xb4, 0x01, 0x8a, 0x97, 0x22, 0xaf, 0x01, 0x0a, 0xac, 0x01, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x75, 0x73, 0x65, 0x20,
	0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x20, 0x61, 0x73, 0x20, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x20, 0x32, 0x28, 0x31, 0x29, 0x2c, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x28, 0x32,
	0x39, 0x29, 0x2c, 0x20, 0x6f, 0x66, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x28, 0x45, 0x55, 0x29, 0x20, 0x4e, 0x6f, 0x20, 0x36, 0x30, 0x30, 0x2f, 0x32, 0x30,
	0x31, 0x34, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x74, 0x74, 0x61, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f,
	0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x74, 0x68, 0x65, 0x79, 0x20, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x3f, 0x52, 0x17, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x55, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0xcf, 0x02, 0x0a, 0x13, 0x74, 0x61, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x40, 0x2e,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x54, 0x41, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42,
	0xda, 0x01, 0x8a, 0x97, 0x22, 0xd5, 0x01, 0x0a, 0x38, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x66,
	0x2e, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22,
	0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x13, 0x74, 0x61,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0xdf, 0x02, 0x0a, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xfb, 0x01, 0x8a, 0x97, 0x22, 0xf6, 0x01, 0x0a, 0x59,
	0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e,
	0x64, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x73, 0x73,
	0x69, 0x6c, 0x20, 0x67, 0x61, 0x73, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x79,
	0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20,
	0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x3f, 0x31, 0x3a, 0x30, 0x52, 0x1d, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0xeb, 0x02, 0x0a, 0x24, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f,
	0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xff, 0x01, 0x8a,
	0x97, 0x22, 0xfa, 0x01, 0x0a, 0x5d, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73,
	0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x20, 0x69,
	0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x77, 0x69,
	0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69,
	0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75,
	0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x21,
	0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x85, 0x03, 0x0a, 0x3e, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63,
	0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64,
	0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x42, 0x83, 0x02, 0x8a, 0x97, 0x22,
	0xfe, 0x01, 0x0a, 0x75, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20,
	0x67, 0x61, 0x73, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77,
	0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x52, 0x54, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69,
	0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x31, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x66,
	0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30,
	0x52, 0x37, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x9a, 0x03, 0x0a, 0x42, 0x6e, 0x75,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73, 0x6f,
	0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x01, 0x42, 0x90, 0x02, 0x8a, 0x97, 0x22, 0x8b, 0x02, 0x0a, 0x79,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x20, 0x69, 0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77,
	0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x57, 0x54, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x59, 0x2e, 0x22, 0x35, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x2e, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x3b, 0x6e, 0x75, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x45, 0x6e, 0x72, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb6, 0x03, 0x0a, 0x3d, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f,
	0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x01, 0x42, 0xb6,
	0x02, 0x8a, 0x97, 0x22, 0xb1, 0x02, 0x0a, 0x92, 0x01, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x28, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73,
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x29, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20,
	0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x12, 0x5d, 0x20, 0x54, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x36, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63,
	0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x86, 0x03, 0x0a, 0x3e, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x5f,
	0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x01, 0x42, 0x84, 0x02, 0x8a, 0x97, 0x22, 0xff, 0x01,
	0x0a, 0x75, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61,
	0x73, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74,
	0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x53, 0x20, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c,
	0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x31, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x66, 0x6f,
	0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52,
	0x37, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x9a, 0x03, 0x0a, 0x42, 0x6e, 0x75, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76,
	0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x01, 0x42, 0x90, 0x02, 0x8a, 0x97, 0x22, 0x8b, 0x02, 0x0a, 0x79, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x20, 0x69, 0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69,
	0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x57, 0x20, 0x54, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x59, 0x22, 0x35, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75,
	0x6e, 0x64, 0x2e, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x3b, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x45, 0x6e, 0x72, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x42,
	0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb5, 0x03, 0x0a, 0x3d, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x65, 0x78, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62,
	0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x01, 0x42, 0xb5, 0x02,
	0x8a, 0x97, 0x22, 0xb0, 0x02, 0x0a, 0x92, 0x01, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x28, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73, 0x20,
	0x61, 0x6e, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x29, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77,
	0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x36, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x53,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xd1, 0x02,
	0x0a, 0x31, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01, 0x42, 0xe6, 0x01, 0x8a, 0x97, 0x22, 0xe1,
	0x01, 0x0a, 0x44, 0x57, 0x68, 0x61, 0x74, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31,
	0x3a, 0x30, 0x52, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0xc5, 0x02, 0x0a, 0x2d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x01, 0x42, 0xe2, 0x01, 0x8a, 0x97, 0x22, 0xdd,
	0x01, 0x0a, 0x40, 0x57, 0x68, 0x61, 0x74, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69,
	0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75,
	0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x29,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0xf6, 0x01, 0x0a, 0x34, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x5f, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x73,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x6d, 0x8a, 0x97, 0x22, 0x69, 0x0a, 0x67, 0x41, 0x72, 0x65, 0x20, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x72,
	0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x20, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x20, 0xe2, 0x80, 0x9c, 0x23, 0x32, 0x20, 0x4f, 0x74, 0x68, 0x65, 0x72, 0xe2, 0x80, 0x9d,
	0x3f, 0x52, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x4f, 0x72, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0xa7, 0x02, 0x0a, 0x28, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42,
	0xb3, 0x01, 0x8a, 0x97, 0x22, 0xae, 0x01, 0x0a, 0xab, 0x01, 0x49, 0x73, 0x20, 0x61, 0x20, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x64, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x20, 0x77,
	0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66,
	0x75, 0x6e, 0x64, 0x20, 0x69, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77,
	0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x61, 0x6e, 0x64, 0x2f, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x69, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x65, 0x73, 0x3f, 0x52, 0x25, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xc5, 0x02, 0x0a,
	0x27, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x73, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xd4, 0x01, 0x8a, 0x97, 0x22, 0xcf, 0x01,
	0x0a, 0x36, 0x49, 0x73, 0x20, 0x61, 0x6e, 0x20, 0x49, 0x53, 0x49, 0x4e, 0x20, 0x63, 0x6f, 0x64,
	0x65, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x3f, 0x12, 0x5a, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20,
	0x69, 0x73, 0x20, 0x59, 0x22, 0x39, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75,
	0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52,
	0x23, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d,
	0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0xd5, 0x02, 0x0a, 0x1d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x73, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x42, 0x91, 0x02, 0x8a,
	0x97, 0x22, 0x8c, 0x02, 0x0a, 0x30, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x49, 0x53, 0x49, 0x4e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x62, 0x65, 0x6e,
	0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x9e, 0x01, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x59, 0x2e, 0x0a, 0x54, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x72,
	0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x49, 0x53, 0x49, 0x4e, 0x20,
	0x63, 0x6f, 0x64, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x22, 0x37, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30,
	0x52, 0x1a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x80, 0x02, 0x0a,
	0x18, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x42,
	0xc5, 0x01, 0x8a, 0x97, 0x22, 0xc0, 0x01, 0x0a, 0x2b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x58, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x22, 0x37,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61,
	0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x16, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0xf2, 0x02, 0x0a, 0x33, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x42, 0x84, 0x02,
	0x8a, 0x97, 0x22, 0xff, 0x01, 0x0a, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x20,
	0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x5a, 0x54,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x39, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x3f, 0x31, 0x3a, 0x30, 0x52, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0xaf, 0x01, 0x0a, 0x29, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x42, 0x55, 0x8a, 0x97, 0x22, 0x51, 0x0a, 0x4f,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x61, 0x20, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x69, 0x6e, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x69,
	0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x33, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x69, 0x73, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x25, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0xc9, 0x03, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x32, 0x33, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xf0, 0x02, 0x8a, 0x97, 0x22, 0xeb, 0x02, 0x0a, 0xe8, 0x02,
	0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x20, 0x6d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x20, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x6e, 0x6b, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x65, 0x20, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x64,
	0x20, 0xe2, 0x80, 0x9c, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c,
	0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0xe2, 0x80, 0x9d, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x70, 0x61, 0x72, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x28, 0x61, 0x73, 0x20, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x51, 0x33, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x53, 0x53, 0x46, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20,
	0x46, 0x41, 0x51, 0x29, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2c,
	0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x77, 0x69, 0x74,
	0x68, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x73, 0x20, 0x66, 0x75, 0x72, 0x74, 0x68, 0x65, 0x72,
	0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53,
	0x46, 0x44, 0x52, 0x20, 0x52, 0x54, 0x53, 0x3f, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x74, 0x32, 0x33, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0xd9, 0x02, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x61, 0x72, 0x74, 0x32, 0x34, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e,
	0x6f, 0x42, 0x80, 0x02, 0x8a, 0x97, 0x22, 0xfb, 0x01, 0x0a, 0xf8, 0x01, 0x44, 0x6f, 0x65, 0x73,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x64, 0x69, 0x73,
	0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0x2c, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x61, 0x62, 0x6f, 0x76, 0x65, 0x2d, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x20,
	0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x28, 0x31, 0x29, 0x20, 0x53, 0x46, 0x44, 0x52,
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x20, 0x32, 0x35,
	0x20, 0x74, 0x6f, 0x20, 0x33, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x52, 0x54, 0x53, 0x2c,
	0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x20,
	0x61, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x34, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20,
	0x52, 0x54, 0x53, 0x3f, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x72, 0x74, 0x32, 0x34, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xf7,
	0x01, 0x0a, 0x23, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x73, 0x73, 0x66, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x8e, 0x01, 0x8a, 0x97, 0x22, 0x89, 0x01, 0x0a, 0x52,
	0x44, 0x69, 0x64, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x53, 0x53, 0x46,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e,
	0x64, 0x3f, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20,
	0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69,
	0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x1f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xaf, 0x01, 0x0a, 0x18, 0x72, 0x61, 0x6d,
	0x70, 0x5f, 0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x5c, 0x8a, 0x97, 0x22, 0x58, 0x0a, 0x21, 0x53, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x20, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x20,
	0x72, 0x61, 0x6d, 0x70, 0x2d, 0x75, 0x70, 0x20, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x33,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c,
	0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43,
	0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x15, 0x72, 0x61, 0x6d, 0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xc4, 0x02, 0x0a, 0x17, 0x72,
	0x61, 0x6d, 0x70, 0x5f, 0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x42, 0x8d, 0x02, 0x8a,
	0x97, 0x22, 0x88, 0x02, 0x0a, 0x24, 0x52, 0x61, 0x6d, 0x70, 0x2d, 0x75, 0x70, 0x20, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x20, 0x65, 0x6e, 0x64, 0x20, 0x64, 0x61, 0x74, 0x65, 0x20, 0x28, 0x59,
	0x59, 0x59, 0x59, 0x2d, 0x4d, 0x4d, 0x2d, 0x44, 0x44, 0x29, 0x12, 0x80, 0x01, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x61, 0x6d, 0x70, 0x55,
	0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x20, 0x69, 0x73, 0x20, 0x59, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x20, 0x59, 0x59, 0x59, 0x59, 0x2d, 0x4d, 0x4d, 0x2d, 0x44, 0x44, 0x2e, 0x22, 0x29, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x72,
	0x61, 0x6d, 0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x42, 0x32, 0x5e, 0x5c, 0x64, 0x7b, 0x34, 0x7d,
	0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b, 0x30, 0x31, 0x32, 0x5d,
	0x29, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x31, 0x32, 0x5d, 0x5b,
	0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x33, 0x5b, 0x30, 0x31, 0x5d, 0x29, 0x24, 0x52, 0x13, 0x72, 0x61,
	0x6d, 0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0xfb, 0x01, 0x0a, 0x29, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x39, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42,
	0x86, 0x01, 0x8a, 0x97, 0x22, 0x81, 0x01, 0x0a, 0x4a, 0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20,
	0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x25, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0xb8, 0x03, 0x0a, 0x3f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74,
	0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x5f, 0x77,
	0x68, 0x65, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x42, 0xb6, 0x02, 0x8a, 0x97, 0x22, 0xb1,
	0x02, 0x0a, 0x81, 0x01, 0x46, 0x6f, 0x72, 0x20, 0x41, 0x49, 0x46, 0x73, 0x20, 0x6e, 0x6f, 0x74,
	0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x2c, 0x20, 0x70, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x20, 0x61, 0x64, 0x76, 0x69, 0x73, 0x65, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x68, 0x6f, 0x77, 0x20, 0x69, 0x74, 0x20, 0x69, 0x73, 0x20, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x76, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x62, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72,
	0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x33, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54,
	0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x30,
	0x3a, 0x31, 0x52, 0x36, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x49,
	0x6e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x41, 0x6e, 0x64, 0x48, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xe1, 0x02, 0x0a, 0x1e, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x65, 0x73, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x3b, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x9b, 0x02, 0x8a, 0x97, 0x22, 0x96, 0x02, 0x0a, 0x67, 0x46, 0x6f, 0x72,
	0x20, 0x41, 0x49, 0x46, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x75, 0x73, 0x2c, 0x20, 0x45, 0x53, 0x47, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x76, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20,
	0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x33, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f,
	0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x30, 0x3a,
	0x31, 0x52, 0x1b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x53, 0x47, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xd2,
	0x01, 0x0a, 0x32, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x4d, 0x8a, 0x97, 0x22, 0x49, 0x0a, 0x47, 0x50, 0x72, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x62, 0x6f, 0x64,
	0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x75, 0x73, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x2d, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x42, 0x6f, 0x64, 0x79,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0xa3, 0x02, 0x0a, 0x25, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x64, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb5, 0x01,
	0x8a, 0x97, 0x22, 0xb0, 0x01, 0x0a, 0x79, 0x54, 0x68, 0x65, 0x79, 0x20, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x79, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74,
	0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x3b, 0x20, 0x65, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x73, 0x20, 0x66,
	0x6f, 0x72, 0x65, 0x73, 0x65, 0x65, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x20, 0x32, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x3b,
	0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49,
	0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20,
	0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x43, 0x44, 0x52, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xba, 0x03, 0x0a, 0x2c, 0x6e, 0x6f,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xc0, 0x02, 0x8a, 0x97, 0x22,
	0xbb, 0x02, 0x0a, 0x83, 0x02, 0x54, 0x68, 0x65, 0x79, 0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74,
	0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x28, 0x73, 0x75, 0x62, 0x2d, 0x29, 0x66, 0x75,
	0x6e, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x20, 0x28, 0x6c, 0x69, 0x6e, 0x6b, 0x29, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f,
	0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x52, 0x65,
	0x67, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x45, 0x55, 0x29, 0x20, 0x32, 0x30,
	0x31, 0x39, 0x2f, 0x32, 0x30, 0x38, 0x38, 0x20, 0x6f, 0x6e, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0xe2, 0x80, 0x90, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0x20,
	0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x20, 0x28, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72,
	0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x27, 0x6e,
	0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xae, 0x03, 0x0a, 0x35, 0x6e, 0x6f, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x3f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x42, 0xa2, 0x02, 0x8a, 0x97, 0x22, 0x9d, 0x02, 0x0a, 0xe5, 0x01, 0x54, 0x68, 0x65, 0x79, 0x20,
	0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63,
	0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x75, 0x6e, 0x64,
	0x65, 0x72, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x32, 0x20, 0x61, 0x6e,
	0x64, 0x20, 0x32, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x49, 0x46, 0x4d,
	0x44, 0x3b, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x64,
	0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x50, 0x52, 0x49, 0x49, 0x50, 0x73, 0x20, 0x4b, 0x49, 0x44, 0x20, 0x28, 0x69, 0x66, 0x20, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x33, 0x20, 0x53, 0x46, 0x44, 0x52, 0x3b,
	0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49,
	0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20,
	0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x30, 0x6e, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xe0, 0x01, 0x0a, 0x20, 0x72, 0x65, 0x66, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x40, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x7c, 0x8a, 0x97,
	0x22, 0x78, 0x0a, 0x41, 0x54, 0x68, 0x65, 0x79, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x63, 0x63,
	0x75, 0x72, 0x61, 0x74, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63,
	0x74, 0x20, 0x77, 0x68, 0x61, 0x74, 0x20, 0x68, 0x61, 0x73, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x64, 0x2e, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x1e, 0x72, 0x65, 0x66, 0x6c,
	0x65, 0x63, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xe5, 0x01, 0x0a, 0x29, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x69,
	0x73, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x70, 0x8a, 0x97, 0x22, 0x6c, 0x0a, 0x6a,
	0x41, 0x72, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x20, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0x41, 0x72,
	0x74, 0x2e, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3f, 0x52, 0x26, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x69, 0x73, 0x6b, 0x73, 0x43,
	0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0xb0, 0x01, 0x0a, 0x24, 0x61, 0x72, 0x74, 0x36, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x42, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x45, 0x8a, 0x97, 0x22,
	0x41, 0x0a, 0x3f, 0x49, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x61,
	0x6e, 0x63, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x20, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x3f, 0x52, 0x21, 0x61, 0x72, 0x74, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xb1, 0x04, 0x0a, 0x1b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x64, 0x72, 0x5f, 0x63, 0x6f, 0x70, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xd7, 0x03, 0x8a, 0x97, 0x22, 0xd2, 0x03, 0x0a, 0x9a, 0x03,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x28, 0x73, 0x29, 0x20, 0x75, 0x73, 0x65,
	0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f,
	0x73, 0x75, 0x72, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x28, 0x73, 0x75, 0x62, 0x2d, 0x29, 0x66,
	0x75, 0x6e, 0x64, 0x73, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x20,
	0x61, 0x73, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0xe2, 0x80, 0x9c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x20, 0x38, 0xe2, 0x80, 0x9d, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0xe2, 0x80, 0x9c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x39, 0xe2, 0x80, 0x9d, 0x29, 0x20, 0x75, 0x6e,
	0x64, 0x65, 0x72, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x31, 0x2d,
	0x74, 0x6f, 0x2d, 0x31, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x65,
	0x65, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x6e, 0x6e, 0x65, 0x78, 0x20, 0x49, 0x49, 0x20, 0x6f,
	0x72, 0x20, 0x49, 0x49, 0x49, 0x20, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x6c, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x20, 0x61, 0x6e,
	0x64, 0x20, 0x68, 0x61, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x61,
	0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x20, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x61, 0x73, 0x20, 0x72, 0x65, 0x67, 0x61,
	0x72, 0x64, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x20, 0x32, 0x20, 0x43, 0x44, 0x52, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72,
	0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20,
	0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x44, 0x52, 0x43, 0x6f, 0x70, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xaa, 0x02, 0x0a, 0x29, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb5, 0x01, 0x8a, 0x97, 0x22, 0xb0, 0x01, 0x0a,
	0x79, 0x41, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x68, 0x61,
	0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x6c, 0x79,
	0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74,
	0x68, 0x6f, 0x73, 0x65, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e,
	0x6f, 0x74, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x61,
	0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x20, 0x61, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72,
	0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20,
	0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x25, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x9a, 0x02, 0x0a, 0x35, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x45, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x42, 0x8d, 0x01, 0x8a, 0x97, 0x22, 0x88, 0x01, 0x0a, 0x51, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x20, 0x68, 0x65, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x20,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f,
	0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53,
	0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x31, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x9b, 0x01, 0x0a, 0x1b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65,
	0x73, 0x4e, 0x6f, 0x42, 0x42, 0x8a, 0x97, 0x22, 0x3e, 0x0a, 0x3c, 0x44, 0x61, 0x74, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x20, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x64, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x28, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x29, 0x52, 0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x22, 0xb9, 0x01, 0x0a, 0x13, 0x45, 0x41, 0x6e, 0x64, 0x53, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x45, 0x4e,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x52, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x45, 0x52, 0x4d, 0x41, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x57, 0x4c, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x45, 0x57, 0x41, 0x53, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x47, 0x47,
	0x45, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x42, 0x49, 0x4f, 0x10, 0x06, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x43, 0x45, 0x43, 0x4f, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4f, 0x54, 0x48,
	0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x49, 0x4e, 0x45, 0x51, 0x10, 0x09, 0x12, 0x09, 0x0a,
	0x05, 0x53, 0x53, 0x4f, 0x43, 0x4f, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x53, 0x4f, 0x49,
	0x4e, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4c, 0x41, 0x52, 0x45, 0x10, 0x0c, 0x12, 0x08,
	0x0a, 0x04, 0x53, 0x49, 0x48, 0x43, 0x10, 0x0d, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x45, 0x53, 0x44,
	0x43, 0x10, 0x0e, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x4f, 0x54, 0x48, 0x10, 0x0f, 0x22, 0x60, 0x0a,
	0x1e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x07, 0x0a, 0x03, 0x43, 0x43, 0x4d, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x43, 0x41, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x50, 0x57, 0x4d, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x54,
	0x43, 0x45, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x50, 0x43, 0x10, 0x04, 0x12, 0x08, 0x0a,
	0x04, 0x50, 0x52, 0x42, 0x45, 0x10, 0x05, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x4f, 0x10, 0x06, 0x22,
	0x50, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x49, 0x43, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x54, 0x48, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x53, 0x47, 0x49, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x53, 0x47, 0x45, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x49,
	0x49, 0x10, 0x04, 0x12, 0x05, 0x0a, 0x01, 0x45, 0x10, 0x05, 0x12, 0x05, 0x0a, 0x01, 0x4f, 0x10,
	0x06, 0x22, 0x31, 0x0a, 0x13, 0x54, 0x41, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x05, 0x0a, 0x01, 0x54, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x43, 0x41, 0x50, 0x45, 0x58, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50,
	0x45, 0x58, 0x10, 0x02, 0x1a, 0xf4, 0x8c, 0x01, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x90, 0x02, 0x0a, 0x11, 0x73, 0x75,
	0x62, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x73, 0x73, 0x66, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0xe3, 0x01, 0x8a, 0x97, 0x22, 0xde, 0x01, 0x0a, 0x1a, 0x43,
	0x53, 0x53, 0x46, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x12, 0xbf, 0x01, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x20, 0x7a, 0x65, 0x72, 0x6f,
	0x20, 0x69, 0x6e, 0x20, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x2d, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x2c,
	0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x30, 0x2e,
	0x20, 0x46, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x20,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x66, 0x75, 0x6e, 0x64,
	0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x0f, 0x73, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x43, 0x73, 0x73, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0xc7, 0x01, 0x0a,
	0x21, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x61, 0x8a, 0x97, 0x22, 0x5d, 0x0a, 0x5b, 0x54, 0x68, 0x65, 0x20, 0x73, 0x75,
	0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6d, 0x61, 0x6b, 0x65,
	0x20, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xbb, 0x02, 0x0a, 0x39, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x42, 0xc0, 0x01, 0x8a, 0x97, 0x22,
	0xbb, 0x01, 0x0a, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x12, 0x54, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73,
	0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x33, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x35, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x31, 0x12, 0xe2, 0x02, 0x0a, 0x2a, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65,
	0x73, 0x4e, 0x6f, 0x42, 0xea, 0x01, 0x8a, 0x97, 0x22, 0xe5, 0x01, 0x0a, 0x58, 0x49, 0x6e, 0x20,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79,
	0x20, 0x61, 0x73, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x6c, 0x79, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x12, 0x54, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x33, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30,
	0x52, 0x27, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x2d, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x5f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xf1, 0x01, 0x8a, 0x97,
	0x22, 0xec, 0x01, 0x0a, 0x5f, 0x49, 0x6e, 0x20, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63,
	0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74,
	0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x20,
	0x61, 0x73, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x6c, 0x79, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x12, 0x54, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x33, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52,
	0x29, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xb1, 0x01, 0x0a, 0x1a, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x59, 0x8a, 0x97, 0x22, 0x55, 0x0a,
	0x53, 0x54, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x77, 0x69,
	0x6c, 0x6c, 0x20, 0x6d, 0x61, 0x6b, 0x65, 0x20, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x77, 0x69, 0x74,
	0x68, 0x20, 0x61, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x52, 0x18, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xb6,
	0x02, 0x0a, 0x32, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x42, 0xc9, 0x01, 0x8a, 0x97,
	0x22, 0xc4, 0x01, 0x0a, 0x45, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x4d, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x2c, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x2e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0xe1, 0x01, 0x0a, 0x23, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37,
	0x56, 0x4d, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x42, 0x43, 0x8a, 0x97, 0x22, 0x3f, 0x0a, 0x3d, 0x57, 0x68, 0x61, 0x74,
	0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x3f, 0x52, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0xd6, 0x01, 0x0a, 0x30,
	0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x5f, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x42, 0x55, 0x8a, 0x97, 0x22, 0x51, 0x0a, 0x4f, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x72, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x20, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x20, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x3f, 0x52, 0x2b, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x41, 0x64, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0xb0, 0x01, 0x0a, 0x16, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37,
	0x56, 0x4d, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x38, 0x8a, 0x97, 0x22, 0x34, 0x0a, 0x32, 0x57, 0x68,
	0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x3f,
	0x52, 0x15, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x12, 0xf1, 0x01, 0x0a, 0x25, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x9a, 0x01, 0x8a, 0x97, 0x22, 0x95, 0x01, 0x0a,
	0x2a, 0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x20, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x12, 0x67, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x4f, 0x20, 0x28, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x29, 0x20,
	0x69, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x69, 0x65, 0x73, 0x52, 0x25, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x20,
	0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x42, 0x58, 0x8a, 0x97, 0x22, 0x54, 0x0a, 0x52, 0x49, 0x73, 0x20, 0x61, 0x20, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x20, 0x67, 0x6f, 0x6f, 0x64, 0x20, 0x67, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x73, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x65, 0x65, 0x20,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x3f, 0x52, 0x1d, 0x67, 0x6f, 0x6f, 0x64,
	0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x99, 0x02, 0x0a, 0x25, 0x6e, 0x6f,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0xc6, 0x01, 0x8a, 0x97, 0x22, 0xc1,
	0x01, 0x0a, 0x38, 0x49, 0x66, 0x20, 0x27, 0x4e, 0x4f, 0x27, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x6f,
	0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2c, 0x20, 0x70, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x20, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x52, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x67, 0x6f, 0x6f,
	0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x22,
	0x31, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x30,
	0x3a, 0x31, 0x52, 0x21, 0x6e, 0x6f, 0x47, 0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xf2, 0x02, 0x0a, 0x2a, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x42, 0x94, 0x02, 0x8a, 0x97, 0x22,
	0x8f, 0x02, 0x0a, 0x46, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x20, 0x2d, 0x20, 0x23, 0x31, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x2e, 0x12, 0x8f, 0x01, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x59, 0x20, 0x6f, 0x72, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x33, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x73, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a,
	0x30, 0x52, 0x27, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xf1, 0x02, 0x0a, 0x39, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x42, 0xf6,
	0x01, 0x8a, 0x97, 0x22, 0xf1, 0x01, 0x0a, 0x63, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x23, 0x31, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x2d, 0x20, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x55, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x59, 0x2e, 0x22, 0x33, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x2e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x35, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x81,
	0x03, 0x0a, 0x3b, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x01, 0x42, 0x83, 0x02, 0x8a, 0x97, 0x22, 0xfe, 0x01, 0x0a, 0x61, 0x4d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x6f, 0x66, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2d, 0x61, 0x6c, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x20, 0x2d, 0x20, 0x23, 0x31, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x2d, 0x20, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x2d, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12,
	0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x36, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x54,
	0x61, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0xf3, 0x02, 0x0a, 0x3e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x42, 0xef, 0x01, 0x8a, 0x97,
	0x22, 0xea, 0x01, 0x0a, 0x4c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x20, 0x2d, 0x20, 0x23, 0x31, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x20, 0x2d, 0x20, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x20, 0x2d, 0x20, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29,
	0x2e, 0x12, 0x5d, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x2e,
	0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x39, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xc4, 0x02, 0x0a, 0x32, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x01, 0x42, 0xd7, 0x01, 0x8a, 0x97, 0x22, 0xd2, 0x01, 0x0a, 0x53, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x20, 0x23, 0x31, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x20, 0x2d, 0x20, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x28, 0x69, 0x6e, 0x20,
	0x25, 0x29, 0x12, 0x4d, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73,
	0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20,
	0x59, 0x22, 0x2c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75,
	0x6e, 0x64, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52,
	0x2e, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12,
	0xb7, 0x01, 0x0a, 0x2e, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x42, 0x53, 0x8a, 0x97, 0x22, 0x4f, 0x0a, 0x4d,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x20, 0x2d, 0x20, 0x23, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x52, 0x2a, 0x6e,
	0x6f, 0x74, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xff, 0x01, 0x0a, 0x19, 0x64, 0x65,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xa8, 0x01, 0x8a, 0x97, 0x22, 0xa3, 0x01, 0x0a,
	0xa0, 0x01, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66,
	0x75, 0x6e, 0x64, 0x20, 0x75, 0x73, 0x65, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x61,
	0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x32, 0x28, 0x31, 0x29, 0x2c, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20,
	0x32, 0x39, 0x2c, 0x20, 0x6f, 0x66, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x28, 0x45, 0x55, 0x29, 0x20, 0x4e, 0x6f, 0x20, 0x36, 0x30, 0x30, 0x2f, 0x32, 0x30,
	0x31, 0x34, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x74, 0x74, 0x61, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x3f, 0x52, 0x17, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x55,
	0x73, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xd0, 0x02, 0x0a, 0x15,
	0x74, 0x61, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x54, 0x61, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0xd9, 0x01,
	0x8a, 0x97, 0x22, 0xd4, 0x01, 0x0a, 0x37, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2d,
	0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x66, 0x12, 0x5c,
	0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x13, 0x74, 0x61, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0xdf,
	0x02, 0x0a, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65,
	0x73, 0x4e, 0x6f, 0x42, 0xfb, 0x01, 0x8a, 0x97, 0x22, 0xf6, 0x01, 0x0a, 0x59, 0x44, 0x6f, 0x65,
	0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20,
	0x67, 0x61, 0x73, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67,
	0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20,
	0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75,
	0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a,
	0x30, 0x52, 0x1d, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0xeb, 0x02, 0x0a, 0x24, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xff, 0x01, 0x8a, 0x97, 0x22, 0xfa,
	0x01, 0x0a, 0x5d, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d,
	0x66, 0x75, 0x6e, 0x64, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6e,
	0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3f,
	0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x21, 0x6e, 0x75, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x85,
	0x03, 0x0a, 0x3e, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x42, 0x83, 0x02, 0x8a, 0x97, 0x22, 0xfe, 0x01, 0x0a,
	0x75, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73,
	0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68,
	0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x52, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61,
	0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x31, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x66, 0x6f, 0x73, 0x73,
	0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x37, 0x66,
	0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x99, 0x03, 0x0a, 0x42, 0x6e, 0x75, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x01, 0x42, 0x8f, 0x02, 0x8a, 0x97, 0x22, 0x8a, 0x02, 0x0a, 0x79, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69,
	0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68,
	0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x35,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x3b, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49,
	0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64,
	0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0xb4, 0x03, 0x0a, 0x3d, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63,
	0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64,
	0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x42, 0xb4, 0x02, 0x8a, 0x97, 0x22,
	0xaf, 0x02, 0x0a, 0x91, 0x01, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x28, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e,
	0x67, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x29, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68,
	0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20,
	0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75,
	0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a,
	0x30, 0x52, 0x36, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x85, 0x03, 0x0a, 0x3e, 0x66, 0x6f,
	0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x01, 0x42, 0x83, 0x02, 0x8a, 0x97, 0x22, 0xfe, 0x01, 0x0a, 0x75, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e,
	0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73, 0x20, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61,
	0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e,
	0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x52, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x31, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x37, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c,
	0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x78,
	0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x95, 0x03, 0x0a, 0x42, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x65, 0x78, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f,
	0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x01, 0x42, 0x8b,
	0x02, 0x8a, 0x97, 0x22, 0x86, 0x02, 0x0a, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x6e, 0x75, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61,
	0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e,
	0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x31, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x66, 0x6f, 0x73, 0x73, 0x69,
	0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x3b, 0x6e, 0x75,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb4, 0x03, 0x0a, 0x3d, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x01, 0x42, 0xb4, 0x02, 0x8a, 0x97, 0x22, 0xaf, 0x02, 0x0a, 0x91, 0x01, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x28, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20,
	0x67, 0x61, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20,
	0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x29, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x20, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f,
	0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x5c, 0x54,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x36, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x78,
	0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0xd1, 0x02, 0x0a, 0x31, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x01, 0x42, 0xe6, 0x01, 0x8a,
	0x97, 0x22, 0xe1, 0x01, 0x0a, 0x44, 0x57, 0x68, 0x61, 0x74, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69,
	0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x12, 0xc5, 0x02, 0x0a, 0x2d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x42, 0xe2, 0x01, 0x8a,
	0x97, 0x22, 0xdd, 0x01, 0x0a, 0x40, 0x57, 0x68, 0x61, 0x74, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69,
	0x6e, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20,
	0x69, 0x73, 0x20, 0x59, 0x22, 0x3b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75,
	0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a,
	0x30, 0x52, 0x29, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x80, 0x02, 0x0a,
	0x34, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f,
	0x72, 0x5f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x77, 0x8a, 0x97, 0x22, 0x73, 0x0a, 0x71, 0x41, 0x72, 0x65,
	0x20, 0x74, 0x68, 0x65, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x20, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x73, 0x61, 0x66, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x20, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x20, 0xe2, 0x80, 0x9c, 0x23, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x20, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0xe2, 0x80, 0x9d, 0x3f, 0x52, 0x2f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x73, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0xde, 0x01, 0x0a, 0x28, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x6b, 0x8a, 0x97,
	0x22, 0x67, 0x0a, 0x65, 0x49, 0x73, 0x20, 0x61, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x6d,
	0x65, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3f, 0x52, 0x25, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0xc5, 0x02, 0x0a, 0x27, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x73, 0x69, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xd4, 0x01, 0x8a,
	0x97, 0x22, 0xcf, 0x01, 0x0a, 0x36, 0x49, 0x73, 0x20, 0x61, 0x6e, 0x20, 0x49, 0x53, 0x49, 0x4e,
	0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x3f, 0x12, 0x5a, 0x54, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b,
	0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x39, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f,
	0x31, 0x3a, 0x30, 0x52, 0x23, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65,
	0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xd5, 0x02, 0x0a, 0x1d, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b,
	0x5f, 0x69, 0x73, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x91, 0x02, 0x8a, 0x97, 0x22, 0x8c, 0x02, 0x0a, 0x30, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x49, 0x53, 0x49, 0x4e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x9e, 0x01, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49,
	0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x20, 0x69, 0x73, 0x20, 0x59, 0x2e, 0x20, 0x54, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6d, 0x75,
	0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x49,
	0x53, 0x49, 0x4e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x20,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x22, 0x37, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49,
	0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x3f, 0x31, 0x3a, 0x30, 0x52, 0x1a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x80, 0x02, 0x0a, 0x18, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x09, 0x42, 0xc5, 0x01, 0x8a, 0x97, 0x22, 0xc0, 0x01, 0x0a, 0x2b, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x58, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73,
	0x20, 0x4e, 0x22, 0x37, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e,
	0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x16, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0xf2, 0x02, 0x0a, 0x33, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x84, 0x02, 0x8a, 0x97, 0x22, 0xff, 0x01, 0x0a, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x6c, 0x69, 0x6e, 0x6b,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x20, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x5a, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63,
	0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x39, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x57, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0xf2, 0x01, 0x0a, 0x29, 0x73, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x42, 0x97, 0x01, 0x8a,
	0x97, 0x22, 0x92, 0x01, 0x0a, 0x8f, 0x01, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x20, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x61, 0x20,
	0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20,
	0x32, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x25, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0xc9, 0x03,
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x72, 0x74,
	0x32, 0x33, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xf0, 0x02, 0x8a,
	0x97, 0x22, 0xeb, 0x02, 0x0a, 0xe8, 0x02, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x61, 0x62, 0x6f, 0x76, 0x65, 0x20, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x20,
	0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20,
	0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x20, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x64, 0x20, 0xe2, 0x80, 0x9c, 0x53, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0xe2, 0x80, 0x9d,
	0x2c, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x70, 0x61,
	0x72, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x20, 0x28, 0x61, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20,
	0x69, 0x6e, 0x20, 0x51, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x53, 0x53,
	0x46, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x46, 0x41, 0x51, 0x29, 0x20, 0x61, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2c, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e,
	0x67, 0x20, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x6c,
	0x69, 0x6e, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x73, 0x20,
	0x66, 0x75, 0x72, 0x74, 0x68, 0x65, 0x72, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x33, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x52, 0x54, 0x53, 0x3f, 0x52,
	0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x74, 0x32, 0x33,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xd9, 0x02, 0x0a, 0x1b, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x5f, 0x33, 0x37, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xff, 0x01, 0x8a, 0x97, 0x22, 0xfa,
	0x01, 0x0a, 0xf7, 0x01, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73,
	0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x2d, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x20, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b,
	0x2c, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75,
	0x74, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x28,
	0x31, 0x29, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x20, 0x33, 0x38, 0x20, 0x74, 0x6f, 0x20, 0x34, 0x39, 0x20, 0x53, 0x46,
	0x44, 0x52, 0x20, 0x52, 0x54, 0x53, 0x2c, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x61, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x33,
	0x37, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x52, 0x54, 0x53, 0x3f, 0x52, 0x18, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x74, 0x33, 0x37, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xf7, 0x01, 0x0a, 0x23, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x63,
	0x73, 0x73, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x8e, 0x01,
	0x8a, 0x97, 0x22, 0x89, 0x01, 0x0a, 0x52, 0x44, 0x69, 0x64, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x61,
	0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x43, 0x53, 0x53, 0x46, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x3f, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f,
	0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x1f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64,
	0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0xaf, 0x01, 0x0a, 0x18, 0x72, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x5c, 0x8a, 0x97,
	0x22, 0x58, 0x0a, 0x21, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x73, 0x74, 0x69, 0x6c,
	0x6c, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6d, 0x70, 0x2d, 0x75, 0x70, 0x20, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x15, 0x72, 0x61, 0x6d, 0x70,
	0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0xee, 0x01, 0x0a, 0x17, 0x72, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x70, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x09, 0x42, 0xb7, 0x01, 0x8a, 0x97, 0x22, 0xb2, 0x01, 0x0a, 0x17, 0x52, 0x61, 0x6d,
	0x70, 0x2d, 0x75, 0x70, 0x20, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x20, 0x65, 0x6e, 0x64, 0x20,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x72, 0x61, 0x6d, 0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x2e, 0x20,
	0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49,
	0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75,
	0x6e, 0x64, 0x22, 0x29, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x2e, 0x72, 0x61, 0x6d, 0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x30, 0x52, 0x13, 0x72,
	0x61, 0x6d, 0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0xfb, 0x01, 0x0a, 0x29, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x2c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x42, 0x86, 0x01, 0x8a, 0x97, 0x22, 0x81, 0x01, 0x0a, 0x4a, 0x50, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x25, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0xb8, 0x03, 0x0a, 0x3f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f,
	0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x5f,
	0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x42, 0xb6, 0x02, 0x8a, 0x97, 0x22,
	0xb1, 0x02, 0x0a, 0x81, 0x01, 0x46, 0x6f, 0x72, 0x20, 0x41, 0x49, 0x46, 0x73, 0x20, 0x6e, 0x6f,
	0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x2c, 0x20, 0x70, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x20, 0x61, 0x64, 0x76, 0x69, 0x73, 0x65, 0x20, 0x77, 0x68, 0x65, 0x72,
	0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x68, 0x6f, 0x77, 0x20, 0x69, 0x74, 0x20, 0x69, 0x73, 0x20,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x76, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x62,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f,
	0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x33,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64,
	0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f,
	0x30, 0x3a, 0x31, 0x52, 0x36, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x49, 0x6e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x41, 0x6e, 0x64, 0x48, 0x6f, 0x77, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x6f, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xe1, 0x02, 0x0a, 0x1e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x65, 0x73, 0x67, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x9b, 0x02, 0x8a, 0x97, 0x22, 0x96, 0x02, 0x0a, 0x67, 0x46, 0x6f,
	0x72, 0x20, 0x41, 0x49, 0x46, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x75, 0x73, 0x2c, 0x20, 0x45, 0x53, 0x47, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x76, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x62, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72,
	0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x33, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54,
	0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x30,
	0x3a, 0x31, 0x52, 0x1b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x53, 0x47, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0xd2, 0x01, 0x0a, 0x32, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x6f, 0x64,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x4d, 0x8a, 0x97, 0x22, 0x49, 0x0a, 0x47, 0x50, 0x72,
	0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x62, 0x6f,
	0x64, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x75, 0x73, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x2d, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x42, 0x6f, 0x64,
	0x79, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0xa3, 0x02, 0x0a, 0x25, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x64, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x30,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb5,
	0x01, 0x8a, 0x97, 0x22, 0xb0, 0x01, 0x0a, 0x79, 0x54, 0x68, 0x65, 0x79, 0x20, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x79, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75,
	0x74, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x3b, 0x20, 0x65, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x73, 0x20,
	0x66, 0x6f, 0x72, 0x65, 0x73, 0x65, 0x65, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x20, 0x32, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52,
	0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41,
	0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66,
	0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x43, 0x44, 0x52, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xba, 0x03, 0x0a, 0x2c, 0x6e,
	0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x31, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xc0, 0x02, 0x8a, 0x97,
	0x22, 0xbb, 0x02, 0x0a, 0x83, 0x02, 0x54, 0x68, 0x65, 0x79, 0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f,
	0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x20, 0x77, 0x69, 0x74,
	0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x20, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x28, 0x73, 0x75, 0x62, 0x2d, 0x29, 0x66,
	0x75, 0x6e, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x20, 0x28, 0x6c, 0x69, 0x6e, 0x6b, 0x29, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x63, 0x63,
	0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x52,
	0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x45, 0x55, 0x29, 0x20, 0x32,
	0x30, 0x31, 0x39, 0x2f, 0x32, 0x30, 0x38, 0x38, 0x20, 0x6f, 0x6e, 0x20, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0xe2, 0x80, 0x90, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73,
	0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x73, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x20, 0x28, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f,
	0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x27,
	0x6e, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xae, 0x03, 0x0a, 0x35, 0x6e, 0x6f, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74,
	0x68, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e,
	0x6f, 0x42, 0xa2, 0x02, 0x8a, 0x97, 0x22, 0x9d, 0x02, 0x0a, 0xe5, 0x01, 0x54, 0x68, 0x65, 0x79,
	0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x63, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x75, 0x6e,
	0x64, 0x65, 0x72, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x32, 0x20, 0x61,
	0x6e, 0x64, 0x20, 0x32, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x49, 0x46,
	0x4d, 0x44, 0x3b, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x50, 0x52, 0x49, 0x49, 0x50, 0x73, 0x20, 0x4b, 0x49, 0x44, 0x20, 0x28, 0x69, 0x66, 0x20,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f,
	0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x33, 0x20, 0x53, 0x46, 0x44, 0x52,
	0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41,
	0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66,
	0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x30, 0x6e, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xe0, 0x01, 0x0a, 0x20, 0x72, 0x65, 0x66,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x7c, 0x8a,
	0x97, 0x22, 0x78, 0x0a, 0x41, 0x54, 0x68, 0x65, 0x79, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x63,
	0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65,
	0x63, 0x74, 0x20, 0x77, 0x68, 0x61, 0x74, 0x20, 0x68, 0x61, 0x73, 0x20, 0x62, 0x65, 0x65, 0x6e,
	0x20, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x64, 0x2e, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x1e, 0x72, 0x65, 0x66,
	0x6c, 0x65, 0x63, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xe5, 0x01, 0x0a, 0x29,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72,
	0x69, 0x73, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x70, 0x8a, 0x97, 0x22, 0x6c, 0x0a,
	0x6a, 0x41, 0x72, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x20, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0x41,
	0x72, 0x74, 0x2e, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3f, 0x52, 0x26, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x69, 0x73, 0x6b, 0x73,
	0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0xb0, 0x01, 0x0a, 0x24, 0x61, 0x72, 0x74, 0x36, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x35, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x45, 0x8a, 0x97,
	0x22, 0x41, 0x0a, 0x3f, 0x49, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x20, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x3f, 0x52, 0x21, 0x61, 0x72, 0x74, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xb1, 0x04, 0x0a, 0x1b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x64, 0x72, 0x5f, 0x63, 0x6f, 0x70, 0x79, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xd7, 0x03, 0x8a, 0x97, 0x22, 0xd2, 0x03, 0x0a, 0x9a,
	0x03, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x28, 0x73, 0x29, 0x20, 0x75, 0x73,
	0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c,
	0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x28, 0x73, 0x75, 0x62, 0x2d, 0x29,
	0x66, 0x75, 0x6e, 0x64, 0x73, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67,
	0x20, 0x61, 0x73, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x38, 0x20, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0xe2, 0x80, 0x9c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x20, 0x38, 0xe2, 0x80, 0x9d, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0xe2, 0x80,
	0x9c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x39, 0xe2, 0x80, 0x9d, 0x29, 0x20, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x31,
	0x2d, 0x74, 0x6f, 0x2d, 0x31, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x65, 0x73,
	0x65, 0x65, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x6e, 0x6e, 0x65, 0x78, 0x20, 0x49, 0x49, 0x20,
	0x6f, 0x72, 0x20, 0x49, 0x49, 0x49, 0x20, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x6c, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x20, 0x61,
	0x6e, 0x64, 0x20, 0x68, 0x61, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20,
	0x61, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x20, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x61, 0x73, 0x20, 0x72, 0x65, 0x67,
	0x61, 0x72, 0x64, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x61, 0x6e,
	0x64, 0x20, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x20, 0x43, 0x44, 0x52, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f,
	0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53,
	0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x44, 0x52, 0x43, 0x6f, 0x70,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xaa, 0x02, 0x0a, 0x29, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb5, 0x01, 0x8a, 0x97, 0x22, 0xb0, 0x01,
	0x0a, 0x79, 0x41, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x68,
	0x61, 0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x6c,
	0x79, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20,
	0x74, 0x68, 0x6f, 0x73, 0x65, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x61, 0x72, 0x65, 0x20,
	0x6e, 0x6f, 0x74, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x68,
	0x61, 0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f,
	0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53,
	0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x25, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x9a, 0x02, 0x0a, 0x35, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e,
	0x6f, 0x42, 0x8d, 0x01, 0x8a, 0x97, 0x22, 0x88, 0x01, 0x0a, 0x51, 0x44, 0x6f, 0x65, 0x73, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x20, 0x68, 0x65, 0x72, 0x65, 0x20, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66,
	0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54,
	0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x31, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0xc3, 0x01, 0x0a, 0x1b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x42, 0x83, 0x01, 0x8a, 0x97, 0x22,
	0x7f, 0x0a, 0x49, 0x44, 0x61, 0x74, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x20, 0x70, 0x72, 0x65,
	0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x28, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x29, 0x20,
	0x28, 0x59, 0x59, 0x59, 0x59, 0x2d, 0x4d, 0x4d, 0x2d, 0x44, 0x44, 0x29, 0x42, 0x32, 0x5e, 0x5c,
	0x64, 0x7b, 0x34, 0x7d, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b,
	0x30, 0x31, 0x32, 0x5d, 0x29, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x5b,
	0x31, 0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x33, 0x5b, 0x30, 0x31, 0x5d, 0x29, 0x24,
	0x52, 0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x6b, 0x0a, 0x20, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x43, 0x4d, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x43, 0x41, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x55, 0x50, 0x57, 0x4d, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43,
	0x45, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x50, 0x43, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x52, 0x42, 0x45, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x43, 0x45, 0x10, 0x06, 0x12,
	0x06, 0x0a, 0x02, 0x53, 0x4f, 0x10, 0x07, 0x22, 0x50, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x49, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x48, 0x45, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x45, 0x53, 0x47, 0x49, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x53, 0x47,
	0x45, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x49, 0x10, 0x04, 0x12, 0x05, 0x0a, 0x01, 0x45,
	0x10, 0x05, 0x12, 0x05, 0x0a, 0x01, 0x4f, 0x10, 0x06, 0x22, 0x31, 0x0a, 0x13, 0x54, 0x61, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x05, 0x0a, 0x01, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x41, 0x50, 0x45, 0x58,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x58, 0x10, 0x02, 0x1a, 0x90, 0x08, 0x0a,
	0x0c, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x90, 0x02,
	0x0a, 0x11, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x73, 0x73, 0x66, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0xe3, 0x01, 0x8a, 0x97, 0x22, 0xde,
	0x01, 0x0a, 0x1a, 0x43, 0x53, 0x53, 0x46, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x12, 0xbf, 0x01,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x20,
	0x7a, 0x65, 0x72, 0x6f, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x20, 0x46, 0x6f, 0x72,
	0x20, 0x61, 0x20, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x2d, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x20, 0x66,
	0x75, 0x6e, 0x64, 0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x20, 0x30, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20,
	0x66, 0x75, 0x6e, 0x64, 0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52,
	0x0f, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x73, 0x73, 0x66, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0xb9, 0x01, 0x0a, 0x12, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x36, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x70, 0x8a, 0x97, 0x22, 0x6c, 0x0a, 0x6a, 0x41,
	0x72, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x20, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0x41, 0x72, 0x74,
	0x2e, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3f, 0x52, 0x11, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x36, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xb8, 0x01, 0x0a,
	0x28, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x36, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x45, 0x8a, 0x97, 0x22, 0x41, 0x0a,
	0x3f, 0x49, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x36,
	0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x3f,
	0x52, 0x25, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x36, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xba, 0x01, 0x0a, 0x12, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x37, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x71,
	0x8a, 0x97, 0x22, 0x6d, 0x0a, 0x6b, 0x41, 0x72, 0x65, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x20, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73, 0x65, 0x20, 0x69, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x20, 0x63, 0x6f,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69,
	0x73, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x20, 0x28, 0x41, 0x72, 0x74, 0x2e, 0x37, 0x20, 0x53, 0x46, 0x44, 0x52, 0x29,
	0x3f, 0x52, 0x11, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x37, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0xb8, 0x01, 0x0a, 0x28, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x37, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4e,
	0x6f, 0x42, 0x45, 0x8a, 0x97, 0x22, 0x41, 0x0a, 0x3f, 0x49, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61,
	0x63, 0x63, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x37, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x64, 0x69,
	0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x3f, 0x52, 0x25, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x37, 0x44, 0x69, 0x73,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0x4b, 0x0a, 0x0f, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56, 0x4d, 0x31, 0x5f, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x37, 0x56,
	0x4d, 0x31, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x73, 0x2d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_standards_open_v1_RT0007VM1_proto_rawDescOnce sync.Once
	file_standards_open_v1_RT0007VM1_proto_rawDescData = file_standards_open_v1_RT0007VM1_proto_rawDesc
)

func file_standards_open_v1_RT0007VM1_proto_rawDescGZIP() []byte {
	file_standards_open_v1_RT0007VM1_proto_rawDescOnce.Do(func() {
		file_standards_open_v1_RT0007VM1_proto_rawDescData = protoimpl.X.CompressGZIP(file_standards_open_v1_RT0007VM1_proto_rawDescData)
	})
	return file_standards_open_v1_RT0007VM1_proto_rawDescData
}

var file_standards_open_v1_RT0007VM1_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_standards_open_v1_RT0007VM1_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_standards_open_v1_RT0007VM1_proto_goTypes = []interface{}{
	(RT0007VM1_Header_ReportType)(0),                                // 0: standards.open.v1.RT0007VM1.Header.ReportType
	(RT0007VM1_Header_Version)(0),                                   // 1: standards.open.v1.RT0007VM1.Header.Version
	(RT0007VM1_Article8Subfund_EAndSCharacteristic)(0),              // 2: standards.open.v1.RT0007VM1.Article8Subfund.EAndSCharacteristic
	(RT0007VM1_Article8Subfund_SustainableInvestmentObjective)(0),   // 3: standards.open.v1.RT0007VM1.Article8Subfund.SustainableInvestmentObjective
	(RT0007VM1_Article8Subfund_InvestmentStrategy)(0),               // 4: standards.open.v1.RT0007VM1.Article8Subfund.InvestmentStrategy
	(RT0007VM1_Article8Subfund_TACalculationMethod)(0),              // 5: standards.open.v1.RT0007VM1.Article8Subfund.TACalculationMethod
	(RT0007VM1_Article9Subfund_EnvironmentalAndSocialObjectives)(0), // 6: standards.open.v1.RT0007VM1.Article9Subfund.EnvironmentalAndSocialObjectives
	(RT0007VM1_Article9Subfund_InvestmentStrategy)(0),               // 7: standards.open.v1.RT0007VM1.Article9Subfund.InvestmentStrategy
	(RT0007VM1_Article9Subfund_TaCalculationMethod)(0),              // 8: standards.open.v1.RT0007VM1.Article9Subfund.TaCalculationMethod
	(*RT0007VM1)(nil),                          // 9: standards.open.v1.RT0007VM1
	(*RT0007VM1Batch)(nil),                     // 10: standards.open.v1.RT0007VM1_batch
	(*RT0007VM1_Header)(nil),                   // 11: standards.open.v1.RT0007VM1.Header
	(*RT0007VM1_Payload)(nil),                  // 12: standards.open.v1.RT0007VM1.Payload
	(*RT0007VM1_SFDRPrecontractualReport)(nil), // 13: standards.open.v1.RT0007VM1.SFDRPrecontractualReport
	(*RT0007VM1_Article8Subfund)(nil),          // 14: standards.open.v1.RT0007VM1.Article8Subfund
	(*RT0007VM1_Article9Subfund)(nil),          // 15: standards.open.v1.RT0007VM1.Article9Subfund
	(*RT0007VM1_OtherSubfund)(nil),             // 16: standards.open.v1.RT0007VM1.OtherSubfund
	(*timestamppb.Timestamp)(nil),              // 17: google.protobuf.Timestamp
	(YesNo)(0),                                 // 18: standards.open.v1.YesNo
}
var file_standards_open_v1_RT0007VM1_proto_depIdxs = []int32{
	11, // 0: standards.open.v1.RT0007VM1.header:type_name -> standards.open.v1.RT0007VM1.Header
	12, // 1: standards.open.v1.RT0007VM1.payload:type_name -> standards.open.v1.RT0007VM1.Payload
	9,  // 2: standards.open.v1.RT0007VM1_batch.response:type_name -> standards.open.v1.RT0007VM1
	0,  // 3: standards.open.v1.RT0007VM1.Header.report_type:type_name -> standards.open.v1.RT0007VM1.Header.ReportType
	1,  // 4: standards.open.v1.RT0007VM1.Header.version:type_name -> standards.open.v1.RT0007VM1.Header.Version
	17, // 5: standards.open.v1.RT0007VM1.Header.creation_timestamp:type_name -> google.protobuf.Timestamp
	13, // 6: standards.open.v1.RT0007VM1.Payload.sfdr_precontractual_report:type_name -> standards.open.v1.RT0007VM1.SFDRPrecontractualReport
	14, // 7: standards.open.v1.RT0007VM1.SFDRPrecontractualReport.article8_subfunds:type_name -> standards.open.v1.RT0007VM1.Article8Subfund
	15, // 8: standards.open.v1.RT0007VM1.SFDRPrecontractualReport.article9_subfunds:type_name -> standards.open.v1.RT0007VM1.Article9Subfund
	16, // 9: standards.open.v1.RT0007VM1.SFDRPrecontractualReport.other_subfunds:type_name -> standards.open.v1.RT0007VM1.OtherSubfund
	18, // 10: standards.open.v1.RT0007VM1.Article8Subfund.sustainable_investments_indicator:type_name -> standards.open.v1.YesNo
	18, // 11: standards.open.v1.RT0007VM1.Article8Subfund.environmental_objective_taxonomy_indicator:type_name -> standards.open.v1.YesNo
	18, // 12: standards.open.v1.RT0007VM1.Article8Subfund.environmental_objective_no_taxonomy_indicator:type_name -> standards.open.v1.YesNo
	18, // 13: standards.open.v1.RT0007VM1.Article8Subfund.social_objective_indicator:type_name -> standards.open.v1.YesNo
	2,  // 14: standards.open.v1.RT0007VM1.Article8Subfund.e_and_s_characteristics:type_name -> standards.open.v1.RT0007VM1.Article8Subfund.EAndSCharacteristic
	3,  // 15: standards.open.v1.RT0007VM1.Article8Subfund.sustainable_investments_objectives:type_name -> standards.open.v1.RT0007VM1.Article8Subfund.SustainableInvestmentObjective
	18, // 16: standards.open.v1.RT0007VM1.Article8Subfund.principal_adverse_impact_consideration_indicator:type_name -> standards.open.v1.YesNo
	4,  // 17: standards.open.v1.RT0007VM1.Article8Subfund.investment_strategies:type_name -> standards.open.v1.RT0007VM1.Article8Subfund.InvestmentStrategy
	18, // 18: standards.open.v1.RT0007VM1.Article8Subfund.good_governance_policy_indicator:type_name -> standards.open.v1.YesNo
	18, // 19: standards.open.v1.RT0007VM1.Article8Subfund.derivatives_use_indicator:type_name -> standards.open.v1.YesNo
	5,  // 20: standards.open.v1.RT0007VM1.Article8Subfund.taCalculationMethod:type_name -> standards.open.v1.RT0007VM1.Article8Subfund.TACalculationMethod
	18, // 21: standards.open.v1.RT0007VM1.Article8Subfund.fossil_gas_investments_indicator:type_name -> standards.open.v1.YesNo
	18, // 22: standards.open.v1.RT0007VM1.Article8Subfund.nuclear_energy_investments_indicator:type_name -> standards.open.v1.YesNo
	18, // 23: standards.open.v1.RT0007VM1.Article8Subfund.environmental_or_social_safeguards_minimum_indicator:type_name -> standards.open.v1.YesNo
	18, // 24: standards.open.v1.RT0007VM1.Article8Subfund.reference_benchmark_designated_indicator:type_name -> standards.open.v1.YesNo
	18, // 25: standards.open.v1.RT0007VM1.Article8Subfund.reference_benchmark_isin_code_indicator:type_name -> standards.open.v1.YesNo
	18, // 26: standards.open.v1.RT0007VM1.Article8Subfund.compliance_art23_indicator:type_name -> standards.open.v1.YesNo
	18, // 27: standards.open.v1.RT0007VM1.Article8Subfund.compliance_art24_indicator:type_name -> standards.open.v1.YesNo
	18, // 28: standards.open.v1.RT0007VM1.Article8Subfund.template_provided_to_cssf_indicator:type_name -> standards.open.v1.YesNo
	18, // 29: standards.open.v1.RT0007VM1.Article8Subfund.ramp_up_period_indicator:type_name -> standards.open.v1.YesNo
	18, // 30: standards.open.v1.RT0007VM1.Article8Subfund.template_available_to_investors_indicator:type_name -> standards.open.v1.YesNo
	18, // 31: standards.open.v1.RT0007VM1.Article8Subfund.prominent_statement_main_body_prospectus_indicator:type_name -> standards.open.v1.YesNo
	18, // 32: standards.open.v1.RT0007VM1.Article8Subfund.requirements_cdr_compliance_indicator:type_name -> standards.open.v1.YesNo
	18, // 33: standards.open.v1.RT0007VM1.Article8Subfund.no_contradiction_with_website_link_indicator:type_name -> standards.open.v1.YesNo
	18, // 34: standards.open.v1.RT0007VM1.Article8Subfund.no_contradiction_with_disclosed_information_indicator:type_name -> standards.open.v1.YesNo
	18, // 35: standards.open.v1.RT0007VM1.Article8Subfund.reflect_implementation_indicator:type_name -> standards.open.v1.YesNo
	18, // 36: standards.open.v1.RT0007VM1.Article8Subfund.sustainability_risks_considered_indicator:type_name -> standards.open.v1.YesNo
	18, // 37: standards.open.v1.RT0007VM1.Article8Subfund.art6_information_disclosed_indicator:type_name -> standards.open.v1.YesNo
	18, // 38: standards.open.v1.RT0007VM1.Article8Subfund.template_cdr_copy_indicator:type_name -> standards.open.v1.YesNo
	18, // 39: standards.open.v1.RT0007VM1.Article8Subfund.template_all_sections_completed_indicator:type_name -> standards.open.v1.YesNo
	18, // 40: standards.open.v1.RT0007VM1.Article8Subfund.latest_published_information_correspondence_indicator:type_name -> standards.open.v1.YesNo
	18, // 41: standards.open.v1.RT0007VM1.Article8Subfund.template_latest_issued_date:type_name -> standards.open.v1.YesNo
	18, // 42: standards.open.v1.RT0007VM1.Article9Subfund.sustainable_investments_indicator:type_name -> standards.open.v1.YesNo
	18, // 43: standards.open.v1.RT0007VM1.Article9Subfund.environmental_objective_taxonomy_indicator:type_name -> standards.open.v1.YesNo
	18, // 44: standards.open.v1.RT0007VM1.Article9Subfund.environmental_objective_no_taxonomy_indicator:type_name -> standards.open.v1.YesNo
	18, // 45: standards.open.v1.RT0007VM1.Article9Subfund.social_objective_indicator:type_name -> standards.open.v1.YesNo
	6,  // 46: standards.open.v1.RT0007VM1.Article9Subfund.environmental_and_social_objectives:type_name -> standards.open.v1.RT0007VM1.Article9Subfund.EnvironmentalAndSocialObjectives
	18, // 47: standards.open.v1.RT0007VM1.Article9Subfund.principal_adverse_impact_consideration_indicator:type_name -> standards.open.v1.YesNo
	7,  // 48: standards.open.v1.RT0007VM1.Article9Subfund.investments_strategies:type_name -> standards.open.v1.RT0007VM1.Article9Subfund.InvestmentStrategy
	18, // 49: standards.open.v1.RT0007VM1.Article9Subfund.good_governance_policy_indicator:type_name -> standards.open.v1.YesNo
	18, // 50: standards.open.v1.RT0007VM1.Article9Subfund.derivatives_use_indicator:type_name -> standards.open.v1.YesNo
	8,  // 51: standards.open.v1.RT0007VM1.Article9Subfund.ta_calculation_method:type_name -> standards.open.v1.RT0007VM1.Article9Subfund.TaCalculationMethod
	18, // 52: standards.open.v1.RT0007VM1.Article9Subfund.fossil_gas_investments_indicator:type_name -> standards.open.v1.YesNo
	18, // 53: standards.open.v1.RT0007VM1.Article9Subfund.nuclear_energy_investments_indicator:type_name -> standards.open.v1.YesNo
	18, // 54: standards.open.v1.RT0007VM1.Article9Subfund.environmental_or_social_safeguards_minimum_indicator:type_name -> standards.open.v1.YesNo
	18, // 55: standards.open.v1.RT0007VM1.Article9Subfund.reference_benchmark_designated_indicator:type_name -> standards.open.v1.YesNo
	18, // 56: standards.open.v1.RT0007VM1.Article9Subfund.reference_benchmark_isin_code_indicator:type_name -> standards.open.v1.YesNo
	18, // 57: standards.open.v1.RT0007VM1.Article9Subfund.compliance_art23_indicator:type_name -> standards.open.v1.YesNo
	18, // 58: standards.open.v1.RT0007VM1.Article9Subfund.compliance_art_37_indicator:type_name -> standards.open.v1.YesNo
	18, // 59: standards.open.v1.RT0007VM1.Article9Subfund.template_provided_to_cssf_indicator:type_name -> standards.open.v1.YesNo
	18, // 60: standards.open.v1.RT0007VM1.Article9Subfund.ramp_up_period_indicator:type_name -> standards.open.v1.YesNo
	18, // 61: standards.open.v1.RT0007VM1.Article9Subfund.template_available_to_investors_indicator:type_name -> standards.open.v1.YesNo
	18, // 62: standards.open.v1.RT0007VM1.Article9Subfund.prominent_statement_main_body_prospectus_indicator:type_name -> standards.open.v1.YesNo
	18, // 63: standards.open.v1.RT0007VM1.Article9Subfund.requirements_cdr_compliance_indicator:type_name -> standards.open.v1.YesNo
	18, // 64: standards.open.v1.RT0007VM1.Article9Subfund.no_contradiction_with_website_link_indicator:type_name -> standards.open.v1.YesNo
	18, // 65: standards.open.v1.RT0007VM1.Article9Subfund.no_contradiction_with_disclosed_information_indicator:type_name -> standards.open.v1.YesNo
	18, // 66: standards.open.v1.RT0007VM1.Article9Subfund.reflect_implementation_indicator:type_name -> standards.open.v1.YesNo
	18, // 67: standards.open.v1.RT0007VM1.Article9Subfund.sustainability_risks_considered_indicator:type_name -> standards.open.v1.YesNo
	18, // 68: standards.open.v1.RT0007VM1.Article9Subfund.art6_information_disclosed_indicator:type_name -> standards.open.v1.YesNo
	18, // 69: standards.open.v1.RT0007VM1.Article9Subfund.template_cdr_copy_indicator:type_name -> standards.open.v1.YesNo
	18, // 70: standards.open.v1.RT0007VM1.Article9Subfund.template_all_sections_completed_indicator:type_name -> standards.open.v1.YesNo
	18, // 71: standards.open.v1.RT0007VM1.Article9Subfund.latest_published_information_correspondence_indicator:type_name -> standards.open.v1.YesNo
	18, // 72: standards.open.v1.RT0007VM1.OtherSubfund.article6_indicator:type_name -> standards.open.v1.YesNo
	18, // 73: standards.open.v1.RT0007VM1.OtherSubfund.information_article6_disclosed_indicator:type_name -> standards.open.v1.YesNo
	18, // 74: standards.open.v1.RT0007VM1.OtherSubfund.article7_indicator:type_name -> standards.open.v1.YesNo
	18, // 75: standards.open.v1.RT0007VM1.OtherSubfund.information_article7_disclosed_indicator:type_name -> standards.open.v1.YesNo
	76, // [76:76] is the sub-list for method output_type
	76, // [76:76] is the sub-list for method input_type
	76, // [76:76] is the sub-list for extension type_name
	76, // [76:76] is the sub-list for extension extendee
	0,  // [0:76] is the sub-list for field type_name
}

func init() { file_standards_open_v1_RT0007VM1_proto_init() }
func file_standards_open_v1_RT0007VM1_proto_init() {
	if File_standards_open_v1_RT0007VM1_proto != nil {
		return
	}
	file_standards_open_v1_yesno_proto_init()
	file_standards_open_v1_fieldOptionsExtentions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_standards_open_v1_RT0007VM1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0007VM1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0007VM1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0007VM1Batch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0007VM1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0007VM1_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0007VM1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0007VM1_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0007VM1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0007VM1_SFDRPrecontractualReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0007VM1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0007VM1_Article8Subfund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0007VM1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0007VM1_Article9Subfund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0007VM1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0007VM1_OtherSubfund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_standards_open_v1_RT0007VM1_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_standards_open_v1_RT0007VM1_proto_goTypes,
		DependencyIndexes: file_standards_open_v1_RT0007VM1_proto_depIdxs,
		EnumInfos:         file_standards_open_v1_RT0007VM1_proto_enumTypes,
		MessageInfos:      file_standards_open_v1_RT0007VM1_proto_msgTypes,
	}.Build()
	File_standards_open_v1_RT0007VM1_proto = out.File
	file_standards_open_v1_RT0007VM1_proto_rawDesc = nil
	file_standards_open_v1_RT0007VM1_proto_goTypes = nil
	file_standards_open_v1_RT0007VM1_proto_depIdxs = nil
}
