// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: standards/open/v1/RT0008FD7.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/type/date"
	_ "google.golang.org/genproto/googleapis/type/money"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Eumerations of SFDR Article Classifications
type RT0008FD7_SubFundData_SFDRArticleClassification int32

const (
	RT0008FD7_SubFundData_SFDR_CLASSIFICATION_UNSPECIFIED RT0008FD7_SubFundData_SFDRArticleClassification = 0
	RT0008FD7_SubFundData_ARTICLE_6                       RT0008FD7_SubFundData_SFDRArticleClassification = 1
	RT0008FD7_SubFundData_ARTICLE_8                       RT0008FD7_SubFundData_SFDRArticleClassification = 2
	RT0008FD7_SubFundData_ARTICLE_9                       RT0008FD7_SubFundData_SFDRArticleClassification = 3
)

// Enum value maps for RT0008FD7_SubFundData_SFDRArticleClassification.
var (
	RT0008FD7_SubFundData_SFDRArticleClassification_name = map[int32]string{
		0: "SFDR_CLASSIFICATION_UNSPECIFIED",
		1: "ARTICLE_6",
		2: "ARTICLE_8",
		3: "ARTICLE_9",
	}
	RT0008FD7_SubFundData_SFDRArticleClassification_value = map[string]int32{
		"SFDR_CLASSIFICATION_UNSPECIFIED": 0,
		"ARTICLE_6":                       1,
		"ARTICLE_8":                       2,
		"ARTICLE_9":                       3,
	}
)

func (x RT0008FD7_SubFundData_SFDRArticleClassification) Enum() *RT0008FD7_SubFundData_SFDRArticleClassification {
	p := new(RT0008FD7_SubFundData_SFDRArticleClassification)
	*p = x
	return p
}

func (x RT0008FD7_SubFundData_SFDRArticleClassification) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0008FD7_SubFundData_SFDRArticleClassification) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0008FD7_proto_enumTypes[0].Descriptor()
}

func (RT0008FD7_SubFundData_SFDRArticleClassification) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0008FD7_proto_enumTypes[0]
}

func (x RT0008FD7_SubFundData_SFDRArticleClassification) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0008FD7_SubFundData_SFDRArticleClassification.Descriptor instead.
func (RT0008FD7_SubFundData_SFDRArticleClassification) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 0}
}

// Y / N requiring no further explanation
type RT0008FD7_SubFundData_YesNo int32

const (
	// Not Applicable
	RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED RT0008FD7_SubFundData_YesNo = 0
	// Yes
	RT0008FD7_SubFundData_Y RT0008FD7_SubFundData_YesNo = 1
	// No
	RT0008FD7_SubFundData_N RT0008FD7_SubFundData_YesNo = 2
)

// Enum value maps for RT0008FD7_SubFundData_YesNo.
var (
	RT0008FD7_SubFundData_YesNo_name = map[int32]string{
		0: "YES_NO_NA_UNSPECIFIED",
		1: "Y",
		2: "N",
	}
	RT0008FD7_SubFundData_YesNo_value = map[string]int32{
		"YES_NO_NA_UNSPECIFIED": 0,
		"Y":                     1,
		"N":                     2,
	}
)

func (x RT0008FD7_SubFundData_YesNo) Enum() *RT0008FD7_SubFundData_YesNo {
	p := new(RT0008FD7_SubFundData_YesNo)
	*p = x
	return p
}

func (x RT0008FD7_SubFundData_YesNo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0008FD7_SubFundData_YesNo) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0008FD7_proto_enumTypes[1].Descriptor()
}

func (RT0008FD7_SubFundData_YesNo) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0008FD7_proto_enumTypes[1]
}

func (x RT0008FD7_SubFundData_YesNo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0008FD7_SubFundData_YesNo.Descriptor instead.
func (RT0008FD7_SubFundData_YesNo) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 1}
}

type RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic int32

const (
	RT0008FD7_SubFundData_Article8SubfundResponses_E_AND_S_CHARACTERISTICS_UNSPECIFIED RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 0  // Not Applicable
	RT0008FD7_SubFundData_Article8SubfundResponses_EREN                                RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 1  // Environmental - renewable energy
	RT0008FD7_SubFundData_Article8SubfundResponses_ERMA                                RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 2  // Environmental - raw materials
	RT0008FD7_SubFundData_Article8SubfundResponses_EWL                                 RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 3  // Environmental - water and land
	RT0008FD7_SubFundData_Article8SubfundResponses_EWAS                                RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 4  // Environmental - waste
	RT0008FD7_SubFundData_Article8SubfundResponses_EGGE                                RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 5  // Environmental - greenhouse gas emissions
	RT0008FD7_SubFundData_Article8SubfundResponses_EBIO                                RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 6  // Environmental - biodiversity
	RT0008FD7_SubFundData_Article8SubfundResponses_ECECO                               RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 7  // Environmental - circular economy
	RT0008FD7_SubFundData_Article8SubfundResponses_EOTH                                RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 8  // Environmental - other
	RT0008FD7_SubFundData_Article8SubfundResponses_SINEQ                               RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 9  // Social - inequality
	RT0008FD7_SubFundData_Article8SubfundResponses_SSOCO                               RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 10 // Social - social cohesion
	RT0008FD7_SubFundData_Article8SubfundResponses_SSOIN                               RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 11 // Social - social integration
	RT0008FD7_SubFundData_Article8SubfundResponses_SLARE                               RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 12 // Social - labour relations
	RT0008FD7_SubFundData_Article8SubfundResponses_SIHC                                RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 13 // Social - investment in human capital
	RT0008FD7_SubFundData_Article8SubfundResponses_SESDC                               RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 14 // Social - economically or socially disadvantaged communities
	RT0008FD7_SubFundData_Article8SubfundResponses_SOTH                                RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 15 // Social - other
	RT0008FD7_SubFundData_Article8SubfundResponses_EEN                                 RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic = 16 // Environmental - energy
)

// Enum value maps for RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic.
var (
	RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic_name = map[int32]string{
		0:  "E_AND_S_CHARACTERISTICS_UNSPECIFIED",
		1:  "EREN",
		2:  "ERMA",
		3:  "EWL",
		4:  "EWAS",
		5:  "EGGE",
		6:  "EBIO",
		7:  "ECECO",
		8:  "EOTH",
		9:  "SINEQ",
		10: "SSOCO",
		11: "SSOIN",
		12: "SLARE",
		13: "SIHC",
		14: "SESDC",
		15: "SOTH",
		16: "EEN",
	}
	RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic_value = map[string]int32{
		"E_AND_S_CHARACTERISTICS_UNSPECIFIED": 0,
		"EREN":                                1,
		"ERMA":                                2,
		"EWL":                                 3,
		"EWAS":                                4,
		"EGGE":                                5,
		"EBIO":                                6,
		"ECECO":                               7,
		"EOTH":                                8,
		"SINEQ":                               9,
		"SSOCO":                               10,
		"SSOIN":                               11,
		"SLARE":                               12,
		"SIHC":                                13,
		"SESDC":                               14,
		"SOTH":                                15,
		"EEN":                                 16,
	}
)

func (x RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic) Enum() *RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic {
	p := new(RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic)
	*p = x
	return p
}

func (x RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0008FD7_proto_enumTypes[2].Descriptor()
}

func (RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0008FD7_proto_enumTypes[2]
}

func (x RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic.Descriptor instead.
func (RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

type RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective int32

const (
	RT0008FD7_SubFundData_Article8SubfundResponses_SUSTAINABLE_INVESTMENT_OBJECTIVES_UNSPECIFIED RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective = 0 // Not Applicable
	RT0008FD7_SubFundData_Article8SubfundResponses_CCA                                           RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective = 1 // Climate change adaptation
	RT0008FD7_SubFundData_Article8SubfundResponses_UPWM                                          RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective = 2 // The sustainable use and protection of water and marine resources
	RT0008FD7_SubFundData_Article8SubfundResponses_TCE                                           RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective = 3 // The transition to a circular economy
	RT0008FD7_SubFundData_Article8SubfundResponses_PPC                                           RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective = 4 // Pollution prevention and control
	RT0008FD7_SubFundData_Article8SubfundResponses_PRBE                                          RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective = 5 // The protection and restoration of biodiversity and ecosystems
	RT0008FD7_SubFundData_Article8SubfundResponses_SO                                            RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective = 6 // Social objective
	RT0008FD7_SubFundData_Article8SubfundResponses_CCM                                           RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective = 7 // Climate change mitigation
)

// Enum value maps for RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective.
var (
	RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective_name = map[int32]string{
		0: "SUSTAINABLE_INVESTMENT_OBJECTIVES_UNSPECIFIED",
		1: "CCA",
		2: "UPWM",
		3: "TCE",
		4: "PPC",
		5: "PRBE",
		6: "SO",
		7: "CCM",
	}
	RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective_value = map[string]int32{
		"SUSTAINABLE_INVESTMENT_OBJECTIVES_UNSPECIFIED": 0,
		"CCA":  1,
		"UPWM": 2,
		"TCE":  3,
		"PPC":  4,
		"PRBE": 5,
		"SO":   6,
		"CCM":  7,
	}
)

func (x RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective) Enum() *RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective {
	p := new(RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective)
	*p = x
	return p
}

func (x RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0008FD7_proto_enumTypes[3].Descriptor()
}

func (RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0008FD7_proto_enumTypes[3]
}

func (x RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective.Descriptor instead.
func (RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 0, 1}
}

type RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy int32

const (
	RT0008FD7_SubFundData_Article8SubfundResponses_INVESTMENT_STRATEGY_UNSPECIFIED RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy = 0 // Not Applicable
	RT0008FD7_SubFundData_Article8SubfundResponses_THE                             RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy = 1 // Thematic
	RT0008FD7_SubFundData_Article8SubfundResponses_ESGI                            RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy = 2 // ESG integration
	RT0008FD7_SubFundData_Article8SubfundResponses_ESGE                            RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy = 3 // ESG engagement
	RT0008FD7_SubFundData_Article8SubfundResponses_II                              RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy = 4 // Impact investing
	RT0008FD7_SubFundData_Article8SubfundResponses_E                               RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy = 5 // Exclusions
	RT0008FD7_SubFundData_Article8SubfundResponses_O                               RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy = 6 // Other
	RT0008FD7_SubFundData_Article8SubfundResponses_BIC                             RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy = 7 // Bext in Class
)

// Enum value maps for RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy.
var (
	RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy_name = map[int32]string{
		0: "INVESTMENT_STRATEGY_UNSPECIFIED",
		1: "THE",
		2: "ESGI",
		3: "ESGE",
		4: "II",
		5: "E",
		6: "O",
		7: "BIC",
	}
	RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy_value = map[string]int32{
		"INVESTMENT_STRATEGY_UNSPECIFIED": 0,
		"THE":                             1,
		"ESGI":                            2,
		"ESGE":                            3,
		"II":                              4,
		"E":                               5,
		"O":                               6,
		"BIC":                             7,
	}
)

func (x RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy) Enum() *RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy {
	p := new(RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy)
	*p = x
	return p
}

func (x RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0008FD7_proto_enumTypes[4].Descriptor()
}

func (RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0008FD7_proto_enumTypes[4]
}

func (x RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy.Descriptor instead.
func (RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 0, 2}
}

type RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod int32

const (
	RT0008FD7_SubFundData_Article8SubfundResponses_TA_CALCULATION_METHOD_UNSPECIFIED RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod = 0 // Not Applicable
	RT0008FD7_SubFundData_Article8SubfundResponses_CAPEX                             RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod = 1 // Capital expenditure
	RT0008FD7_SubFundData_Article8SubfundResponses_OPEX                              RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod = 2 // Operational expenditure
	RT0008FD7_SubFundData_Article8SubfundResponses_T                                 RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod = 3 // TURNOVER
)

// Enum value maps for RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod.
var (
	RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod_name = map[int32]string{
		0: "TA_CALCULATION_METHOD_UNSPECIFIED",
		1: "CAPEX",
		2: "OPEX",
		3: "T",
	}
	RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod_value = map[string]int32{
		"TA_CALCULATION_METHOD_UNSPECIFIED": 0,
		"CAPEX":                             1,
		"OPEX":                              2,
		"T":                                 3,
	}
)

func (x RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod) Enum() *RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod {
	p := new(RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod)
	*p = x
	return p
}

func (x RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0008FD7_proto_enumTypes[5].Descriptor()
}

func (RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0008FD7_proto_enumTypes[5]
}

func (x RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod.Descriptor instead.
func (RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 0, 3}
}

// What is the sustainable investment objective of the sub-fund?
type RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives int32

const (
	RT0008FD7_SubFundData_Article9SubfundResponses_ENVIRONMENTAL_AND_SOCIAL_OBJECTIVES_UNSPECIFIED RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives = 0 // Not Applicable
	RT0008FD7_SubFundData_Article9SubfundResponses_CCA                                             RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives = 1 // Climate change adaptation
	RT0008FD7_SubFundData_Article9SubfundResponses_UPWM                                            RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives = 2 // The sustainable use and protection of water and marine resources
	RT0008FD7_SubFundData_Article9SubfundResponses_TCE                                             RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives = 3 // Transition to a circular economy
	RT0008FD7_SubFundData_Article9SubfundResponses_PPC                                             RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives = 4 // Pollution prevention and control
	RT0008FD7_SubFundData_Article9SubfundResponses_PRBE                                            RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives = 5 // The protection and restoration of biodiversity and ecosystems
	RT0008FD7_SubFundData_Article9SubfundResponses_RCE                                             RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives = 6 // Reduction in carbon emissions
	RT0008FD7_SubFundData_Article9SubfundResponses_SO                                              RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives = 7 // Social objective
	RT0008FD7_SubFundData_Article9SubfundResponses_CCM                                             RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives = 8 // Climate change mitigation
)

// Enum value maps for RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives.
var (
	RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives_name = map[int32]string{
		0: "ENVIRONMENTAL_AND_SOCIAL_OBJECTIVES_UNSPECIFIED",
		1: "CCA",
		2: "UPWM",
		3: "TCE",
		4: "PPC",
		5: "PRBE",
		6: "RCE",
		7: "SO",
		8: "CCM",
	}
	RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives_value = map[string]int32{
		"ENVIRONMENTAL_AND_SOCIAL_OBJECTIVES_UNSPECIFIED": 0,
		"CCA":  1,
		"UPWM": 2,
		"TCE":  3,
		"PPC":  4,
		"PRBE": 5,
		"RCE":  6,
		"SO":   7,
		"CCM":  8,
	}
)

func (x RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives) Enum() *RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives {
	p := new(RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives)
	*p = x
	return p
}

func (x RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0008FD7_proto_enumTypes[6].Descriptor()
}

func (RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0008FD7_proto_enumTypes[6]
}

func (x RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives.Descriptor instead.
func (RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

type RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy int32

const (
	RT0008FD7_SubFundData_Article9SubfundResponses_INVESTMENT_STRATEGY_UNSPECIFIED RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy = 0 // Not Applicable
	RT0008FD7_SubFundData_Article9SubfundResponses_THE                             RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy = 1 // Thematic
	RT0008FD7_SubFundData_Article9SubfundResponses_ESGI                            RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy = 2 // ESG integration
	RT0008FD7_SubFundData_Article9SubfundResponses_ESGE                            RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy = 3 // ESG engagement
	RT0008FD7_SubFundData_Article9SubfundResponses_II                              RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy = 4 // Impact investing
	RT0008FD7_SubFundData_Article9SubfundResponses_E                               RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy = 5 // Exclusions
	RT0008FD7_SubFundData_Article9SubfundResponses_O                               RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy = 6 // Other
	RT0008FD7_SubFundData_Article9SubfundResponses_BIC                             RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy = 7 // Best in class
)

// Enum value maps for RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy.
var (
	RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy_name = map[int32]string{
		0: "INVESTMENT_STRATEGY_UNSPECIFIED",
		1: "THE",
		2: "ESGI",
		3: "ESGE",
		4: "II",
		5: "E",
		6: "O",
		7: "BIC",
	}
	RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy_value = map[string]int32{
		"INVESTMENT_STRATEGY_UNSPECIFIED": 0,
		"THE":                             1,
		"ESGI":                            2,
		"ESGE":                            3,
		"II":                              4,
		"E":                               5,
		"O":                               6,
		"BIC":                             7,
	}
)

func (x RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy) Enum() *RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy {
	p := new(RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy)
	*p = x
	return p
}

func (x RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0008FD7_proto_enumTypes[7].Descriptor()
}

func (RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0008FD7_proto_enumTypes[7]
}

func (x RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy.Descriptor instead.
func (RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 1, 1}
}

type RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod int32

const (
	RT0008FD7_SubFundData_Article9SubfundResponses_TA_CALCULATION_METHOD_UNSPECIFIED RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod = 0 // Not Applicable
	RT0008FD7_SubFundData_Article9SubfundResponses_CAPEX                             RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod = 1 // Capital expenditure
	RT0008FD7_SubFundData_Article9SubfundResponses_OPEX                              RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod = 2 // Operational expenditure
	RT0008FD7_SubFundData_Article9SubfundResponses_T                                 RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod = 3 // TURNOVER
)

// Enum value maps for RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod.
var (
	RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod_name = map[int32]string{
		0: "TA_CALCULATION_METHOD_UNSPECIFIED",
		1: "CAPEX",
		2: "OPEX",
		3: "T",
	}
	RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod_value = map[string]int32{
		"TA_CALCULATION_METHOD_UNSPECIFIED": 0,
		"CAPEX":                             1,
		"OPEX":                              2,
		"T":                                 3,
	}
)

func (x RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod) Enum() *RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod {
	p := new(RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod)
	*p = x
	return p
}

func (x RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_standards_open_v1_RT0008FD7_proto_enumTypes[8].Descriptor()
}

func (RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod) Type() protoreflect.EnumType {
	return &file_standards_open_v1_RT0008FD7_proto_enumTypes[8]
}

func (x RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod.Descriptor instead.
func (RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod) EnumDescriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 1, 2}
}

// The CSSF SFDR PreContractual Disclosure is a  data collection exercise is to collect, in a digital format,
// information contained in precontractual disclosure documents/templates.
// See https://www.cssf.lu/wp-content/uploads/User_Guide_-_SFDR_UCI_Data_Collection_-_practical_guide.pdf
// The CSSF SFDR PreContractual Data Collection Template is a data standard template designed to facilitate
// data collection in a manner that can be seamlessly used to populate the CSSF format
type RT0008FD7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data for a particular sub-fund
	SubFundData []*RT0008FD7_SubFundData `protobuf:"bytes,1,rep,name=sub_fund_data,json=subFundData,proto3" json:"sub_fund_data,omitempty"`
}

func (x *RT0008FD7) Reset() {
	*x = RT0008FD7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0008FD7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0008FD7) ProtoMessage() {}

func (x *RT0008FD7) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0008FD7.ProtoReflect.Descriptor instead.
func (*RT0008FD7) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0}
}

func (x *RT0008FD7) GetSubFundData() []*RT0008FD7_SubFundData {
	if x != nil {
		return x.SubFundData
	}
	return nil
}

type RT0008FD7_SubFundData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The umbrella name
	UmbrellaName string `protobuf:"bytes,91,opt,name=umbrella_name,json=umbrellaName,proto3" json:"umbrella_name,omitempty"`
	// The umbrella internal identifier
	UmbrellaInternalIdentifier string `protobuf:"bytes,92,opt,name=umbrella_internal_identifier,json=umbrellaInternalIdentifier,proto3" json:"umbrella_internal_identifier,omitempty"`
	// CSSF code of the umbrellas
	UmbrellaCssfCode string `protobuf:"bytes,93,opt,name=umbrella_cssf_code,json=entityCssfCode,proto3" json:"umbrella_cssf_code,omitempty"`
	// The reporting name of the fund
	FundName string `protobuf:"bytes,94,opt,name=fund_name,json=fundName,proto3" json:"fund_name,omitempty"`
	// The internal identifier of the sub-fund
	FundInternalIdentifier string `protobuf:"bytes,95,opt,name=fund_internal_identifier,json=fundInternalIdentifier,proto3" json:"fund_internal_identifier,omitempty"`
	// CSSF code of the sub-fund. Number corresponding to the compartment without zero in front of the number. For a stand-alone fund, please enter 0. For a multiple compartment fund, please indicate the corresponding number.
	SubfundCssfCode int32 `protobuf:"varint,96,opt,name=subfund_cssf_code,json=subfundCssfCode,proto3" json:"subfund_cssf_code,omitempty"`
	// The SFDR Article Classification of the Sub-fund
	SfdrArticleClassification RT0008FD7_SubFundData_SFDRArticleClassification `protobuf:"varint,97,opt,name=sfdr_article_classification,json=sfdrArticleClassification,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_SFDRArticleClassification" json:"sfdr_article_classification,omitempty"`
	// List of responses for Article 8 subfunds
	// Should only be completed for Article 8 subfunds
	Article8Responses *RT0008FD7_SubFundData_Article8SubfundResponses `protobuf:"bytes,2,opt,name=article8_responses,json=article8Subfunds,proto3" json:"article8_responses,omitempty"`
	// List of responses for Article 9 subfunds
	// Should only be completed for Article 9 subfunds
	Article9Responses *RT0008FD7_SubFundData_Article9SubfundResponses `protobuf:"bytes,3,opt,name=article9_responses,json=article9Subfunds,proto3" json:"article9_responses,omitempty"`
	// Responses for subfunds subject to the SFDR disclosure obligation without being an art 8 or art 9 product array
	// Should only be completed for non Article 8 or 9 subfunds
	OtherResponses *RT0008FD7_SubFundData_OtherSubfundResponses `protobuf:"bytes,4,opt,name=other_responses,json=otherSubfunds,proto3" json:"other_responses,omitempty"`
}

func (x *RT0008FD7_SubFundData) Reset() {
	*x = RT0008FD7_SubFundData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0008FD7_SubFundData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0008FD7_SubFundData) ProtoMessage() {}

func (x *RT0008FD7_SubFundData) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0008FD7_SubFundData.ProtoReflect.Descriptor instead.
func (*RT0008FD7_SubFundData) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RT0008FD7_SubFundData) GetUmbrellaName() string {
	if x != nil {
		return x.UmbrellaName
	}
	return ""
}

func (x *RT0008FD7_SubFundData) GetUmbrellaInternalIdentifier() string {
	if x != nil {
		return x.UmbrellaInternalIdentifier
	}
	return ""
}

func (x *RT0008FD7_SubFundData) GetUmbrellaCssfCode() string {
	if x != nil {
		return x.UmbrellaCssfCode
	}
	return ""
}

func (x *RT0008FD7_SubFundData) GetFundName() string {
	if x != nil {
		return x.FundName
	}
	return ""
}

func (x *RT0008FD7_SubFundData) GetFundInternalIdentifier() string {
	if x != nil {
		return x.FundInternalIdentifier
	}
	return ""
}

func (x *RT0008FD7_SubFundData) GetSubfundCssfCode() int32 {
	if x != nil {
		return x.SubfundCssfCode
	}
	return 0
}

func (x *RT0008FD7_SubFundData) GetSfdrArticleClassification() RT0008FD7_SubFundData_SFDRArticleClassification {
	if x != nil {
		return x.SfdrArticleClassification
	}
	return RT0008FD7_SubFundData_SFDR_CLASSIFICATION_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData) GetArticle8Responses() *RT0008FD7_SubFundData_Article8SubfundResponses {
	if x != nil {
		return x.Article8Responses
	}
	return nil
}

func (x *RT0008FD7_SubFundData) GetArticle9Responses() *RT0008FD7_SubFundData_Article9SubfundResponses {
	if x != nil {
		return x.Article9Responses
	}
	return nil
}

func (x *RT0008FD7_SubFundData) GetOtherResponses() *RT0008FD7_SubFundData_OtherSubfundResponses {
	if x != nil {
		return x.OtherResponses
	}
	return nil
}

// Definition of information to be provided per Article 8 sub fund
type RT0008FD7_SubFundData_Article8SubfundResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The sub-fund promotes Environmental/Social characteristics and while it does not have as its objective a sustainable investment, it will make sustainable investments
	SustainableInvestmentsIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,2,opt,name=sustainable_investments_indicator,json=sustainableInvestmentsIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"sustainable_investments_indicator,omitempty"`
	// Minimum proportion of sustainable investments.
	SustainableInvestmentsMinimumProportion1 float64 `protobuf:"fixed64,3,opt,name=sustainableInvestmentsMinimumProportion1,proto3" json:"sustainableInvestmentsMinimumProportion1,omitempty"`
	// With an environmental objective in economic activities that qualify as environmentally sustainable under the EU Taxonomy.
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	EnvironmentalObjectiveTaxonomyIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,4,opt,name=environmental_objective_taxonomy_indicator,json=environmentalObjectiveTaxonomyIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"environmental_objective_taxonomy_indicator,omitempty"`
	// with an environmental objective in economic activities that do not qualify as environmentally sustainable under the EU Taxonomy
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	EnvironmentalObjectiveNoTaxonomyIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,5,opt,name=environmental_objective_no_taxonomy_indicator,json=environmentalObjectiveNoTaxonomyIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"environmental_objective_no_taxonomy_indicator,omitempty"`
	// with a social objective
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	SocialObjectiveIndicator RT0008FD7_SubFundData_YesNo                                          `protobuf:"varint,6,opt,name=social_objective_indicator,json=socialObjectiveIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"social_objective_indicator,omitempty"`
	EAndSCharacteristics     []RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic `protobuf:"varint,7,rep,packed,name=e_and_s_characteristics,json=eAndSCharacteristics,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic" json:"e_and_s_characteristics,omitempty"`
	// Please specify other environmental characteristics.
	// The field is required if EOTH is defined in the list of values for the field eAndSCharacteristics
	OtherEnvironmentalCharacteristicsDescription string `protobuf:"bytes,8,opt,name=other_environmental_characteristics_description,json=otherEnvironmentalCharacteristicsDescription,proto3" json:"other_environmental_characteristics_description,omitempty"`
	// Please specify other social characteristics
	// The field is required if SOTH is defined in the list of values for the field eAndSCharacteristics
	OtherSocialCharacteristicsDescription string `protobuf:"bytes,9,opt,name=other_social_characteristics_description,json=otherSocialCharacteristicsDescription,proto3" json:"other_social_characteristics_description,omitempty"`
	// What are the objectives of the sustainable investments that the sub-fund partially intends to make?
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	SustainableInvestmentsObjectives []RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective `protobuf:"varint,10,rep,packed,name=sustainable_investments_objectives,json=sustainableInvestmentsObjectives,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective" json:"sustainable_investments_objectives,omitempty"`
	// Does the sub-fund consider principle adverse impacts on sustainability factors?
	PrincipalAdverseImpactConsiderationIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,11,opt,name=principal_adverse_impact_consideration_indicator,json=principalAdversImpactConsiderationIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"principal_adverse_impact_consideration_indicator,omitempty"`
	// What investment strategy does the sub-fund follow?
	InvestmentsStrategies []RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy `protobuf:"varint,12,rep,packed,name=investments_strategies,json=investmentsStrategies,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy" json:"investments_strategies,omitempty"`
	// Please specify other investment strategies
	// The field is required if O is defined in the list of values for the field investmentsStrategies
	OtherInvestmentsStrategiesDescription string `protobuf:"bytes,13,opt,name=other_investments_strategies_description,json=otherInvestmentsStrategiesDescription,proto3" json:"other_investments_strategies_description,omitempty"`
	// Is a policy applied to assess good governance practices of the investee companies?
	GoodGovernancePolicyIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,14,opt,name=good_governance_policy_indicator,json=goodGovernancePolicyIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"good_governance_policy_indicator,omitempty"`
	// If no, please explain
	// The field is required if the value of the field goodGovernancePolicyIndicator is N
	NoGoodGovernancePolicyDescription string `protobuf:"bytes,15,opt,name=no_good_governance_policy_description,json=noGoodGovernancePolicyDescription,proto3" json:"no_good_governance_policy_description,omitempty"`
	// Minimum proportion of investments aligned with environmental or social characteristics - #1 Aligned with E/S characteristics (in %)
	AlignedESCharacteristicsInvestmentsMinimumProportion float64 `protobuf:"fixed64,16,opt,name=aligned_e_s_characteristics_investments_minimum_proportion,json=alignedESCharacteristicsInvestmentsMinimumProportion,proto3" json:"aligned_e_s_characteristics_investments_minimum_proportion,omitempty"`
	// Minimum proportion of sustainable investments - 1#A Sustainable (in %)
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	SustainableInvestmentsMinimumProportion2 float64 `protobuf:"fixed64,17,opt,name=sustainable_investments_minimum_proportion2,json=sustainableInvestmentsMinimumProportion2,proto3" json:"sustainable_investments_minimum_proportion2,omitempty"`
	// Minimum proportion of environmental or social characteristics investments that do not qualify as sustainable investments - #1B Other E/S characteristics (in %)
	OtherESCharacteristicsInvestmentsMinimumProportion float64 `protobuf:"fixed64,18,opt,name=other_e_s_characteristics_investments_minimum_proportion,json=otherESCharacteristicsInvestmentsMinimumProportion,proto3" json:"other_e_s_characteristics_investments_minimum_proportion,omitempty"`
	// Minimum proportion of remaining investments which are neither aligned with the environmental or social characteristics, nor are qualified as sustainable investments - #2 Other (in %)
	RemainingInvestmentsMinimumProportion float64 `protobuf:"fixed64,19,opt,name=remaining_investments_minimum_proportion,json=remainingInvestmentsMinimumProportion,proto3" json:"remaining_investments_minimum_proportion,omitempty"`
	// Minimum proportion of Taxonomy-aligned (in %)
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TaInvestmentsMinimumProportion float64 `protobuf:"fixed64,20,opt,name=ta_investments_minimum_proportion,json=taInvestmentsMinimumProportion,proto3" json:"ta_investments_minimum_proportion,omitempty"`
	// Minimum proportion of Other environmental (in %)
	// The field is required if the value of the field environmentalObjectiveNoTaxonomyIndicator is Y
	OtherEnvironmentalMinimumProportion float64 `protobuf:"fixed64,21,opt,name=other_environmental_minimum_proportion,json=otherEnvironmentalMinimumProportion,proto3" json:"other_environmental_minimum_proportion,omitempty"`
	// Minimum proportion of Social (in %)
	// The field is required if the value of the field socialObjectiveIndicator is Y
	SocialMinimumProportion float64 `protobuf:"fixed64,22,opt,name=social_minimum_proportion,json=socialMinimumProportion,proto3" json:"social_minimum_proportion,omitempty"`
	// Does the sub-fund use derivatives as defined in Article 2(1), point (29), of Regulation (EU) No 600/2014 to attain the environmental or social characteristics they promote?
	DerivativesUseIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,23,opt,name=derivatives_use_indicator,json=derivativesUseIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"derivatives_use_indicator,omitempty"`
	// Taxonomy-aligned activities are expressed as a share of.
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TaCalculationMethod []RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod `protobuf:"varint,24,rep,packed,name=taCalculationMethod,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod" json:"taCalculationMethod,omitempty"`
	// Does the sub-fund invest in fossil gas related activities complying with the EU Taxonomy?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	FossilGasInvestmentsIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,25,opt,name=fossil_gas_investments_indicator,json=fossilGasInvestmentsIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"fossil_gas_investments_indicator,omitempty"`
	// Does the sub-fund invest in nuclear energy related activities complying with the EU Taxonomy?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	NuclearEnergyInvestmentsIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,26,opt,name=nuclear_energy_investments_indicator,json=nuclearEnergyInvestmentsIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"nuclear_energy_investments_indicator,omitempty"`
	// Minimum percentage of investments in fossil gas related activities aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field fossilGasInvestmentsIndicator is Y
	FossilGasInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,27,opt,name=fossil_gas_investments_incl_sovereign_bonds_minimum_proportion,json=fossilGasInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"fossil_gas_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in nuclear energy related activities aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field nuclearEnergyInvestmentsIndicator is Y.
	NuclearEnergyInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,28,opt,name=nuclear_energy_investments_incl_sovereign_bonds_minimum_proportion,json=nuclearEnergyInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"nuclear_energy_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments (excluding fossil gas and nuclear energy related activities) aligned with EU taxonomy including sovereign bonds.
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	RemainingInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,29,opt,name=remaining_investments_incl_sovereign_bonds_minimum_proportion,json=remainingInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"remaining_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in fossil gas related activities aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field fossilGasInvestmentsIndicator is Y
	FossilGasInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,30,opt,name=fossil_gas_investments_excl_sovereign_bonds_minimum_proportion,json=fossilGasInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"fossil_gas_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in nuclear energy related activities aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field nuclearEnergyInvestmentsIndicator is Y
	NuclearEnergyInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,31,opt,name=nuclear_energy_investments_excl_sovereign_bonds_minimum_proportion,json=nuclearEnergyInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"nuclear_energy_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments (excluding fossil gas and nuclear energy related activities) aligned with EU taxonomy excluding sovereign bonds.
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	RemainingInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,32,opt,name=remaining_investments_excl_sovereign_bonds_minimum_proportion,json=remainingInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"remaining_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// What is the minimum share of investments in transitional activities?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TransitionalActivitiesInvestmentsMinimumShare float64 `protobuf:"fixed64,33,opt,name=transitional_activities_investments_minimum_share,json=transitionalActivitiesInvestmentsMinimumShare,proto3" json:"transitional_activities_investments_minimum_share,omitempty"`
	// What is the minimum share of investments in enabling activities?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	EnablingActivitiesInvestmentsMinimumShare float64 `protobuf:"fixed64,34,opt,name=enabling_activities_investments_minimum_share,json=enablingActivitiesInvestmentsMinimumShare,proto3" json:"enabling_activities_investments_minimum_share,omitempty"`
	// Are there any minimum environmental or social safeguards for investments included under “#2 Other”?
	EnvironmentalOrSocialSafeguardsMinimumIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,35,opt,name=environmental_or_social_safeguards_minimum_indicator,json=environmentalOrSocialSafeguardsMinimumIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"environmental_or_social_safeguards_minimum_indicator,omitempty"`
	// Is a specific index designated as a reference benchmark to determine whether the sub-fund is aligned with the environmental and/or social characteristics that it promotes?
	ReferenceBenchmarkDesignatedIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,36,opt,name=reference_benchmark_designated_indicator,json=referenceBenchmarkDesignatedIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"reference_benchmark_designated_indicator,omitempty"`
	// Is an ISIN code available for the reference benchmark?
	// The field is required if the value of the field referenceBenchmarkDesignatedIndicator is Y
	ReferenceBenchmarkIsinCodeIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,37,opt,name=reference_benchmark_isin_code_indicator,json=referenceBenchmarkIsinCodeIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"reference_benchmark_isin_code_indicator,omitempty"`
	// Specify the ISIN code of the reference benchmark
	// The field is required if the value of the field referenceBenchmarkIsinCodeIndicator is Y.\nThe value of the field must respect the ISIN code naming convention.
	ReferenceBenchmarkIsinCode string `protobuf:"bytes,38,opt,name=reference_benchmark_isin_code,json=referenceBenchmarkIsinCode,proto3" json:"reference_benchmark_isin_code,omitempty"`
	// Specify the name of the reference benchmark
	// The field is required if the value of the field referenceBenchmarkIsinCodeIndicator is N
	ReferenceBenchmarkName string `protobuf:"bytes,39,opt,name=reference_benchmark_name,json=referenceBenchmarkName,proto3" json:"reference_benchmark_name,omitempty"`
	// Indicate website link of the methodology used for the calculation of the designated index can be found
	// The field is required if the value of the field referenceBenchmarkDesignatedIndicator is Y
	ReferenceBenchmarkCalculationMethodWebsiteLink string `protobuf:"bytes,40,opt,name=reference_benchmark_calculation_method_website_link,json=referenceBenchmarkCalculationMethodWebsiteLink,proto3" json:"reference_benchmark_calculation_method_website_link,omitempty"`
	// More product-specific information can be found on the website
	// Include a hyperlink to the website referred to in Article 23 of this Regulation
	SubfundSpecificInformationWebsiteLink string `protobuf:"bytes,41,opt,name=subfund_specific_information_website_link,json=subfundSpecificInformationWebsiteLink,proto3" json:"subfund_specific_information_website_link,omitempty"`
	// Does the above mentioned hyperlink direct investors to a separate section titled “Sustainability-related disclosures”, in the same part of the website (as specified in Q3 of the CSSF SFDR FAQ) as the other information relating to the financial product, including marketing communications, in line with and as further detailed in Article 23 of the SFDR RTS?
	ComplianceArt23Indicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,42,opt,name=compliance_art23_indicator,json=complianceArt23Indicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"compliance_art23_indicator,omitempty"`
	// Does the product related website disclosures, available through the above-mentioned hyperlink, provide all information set out in Article 10(1) SFDR and Articles 25 to 36 SFDR RTS, through the sections and order as specified in Article 24 SFDR RTS?
	ComplianceArt24Indicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,43,opt,name=compliance_art24_indicator,json=complianceArt24Indicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"compliance_art24_indicator,omitempty"`
	// Did you already provide the pre-contractual template to the CSSF for the sub-fund?
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateProvidedToCssfIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,44,opt,name=template_provided_to_cssf_indicator,json=templateProvidedToCssfIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"template_provided_to_cssf_indicator,omitempty"`
	// Subfund still in a ramp-up period
	// Required if AIF, forbidden if UCITS or Pension fund
	RampUpPeriodIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,55,opt,name=ramp_up_period_indicator,json=rampUpPeriodIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"ramp_up_period_indicator,omitempty"`
	// Ramp-up period end date
	// Required if AIF and if the value of the field rampUpPeriodIndicator is Y.
	// Forbidden if UCITS or Pension fund. Format YYYY-MM-DD.
	RampUpPeriodEndDate string `protobuf:"bytes,56,opt,name=ramp_up_period_end_date,json=rampUpPeriodEndDate,proto3" json:"ramp_up_period_end_date,omitempty"`
	// Please confirm that the pre-contractual template is available to investors
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateAvailableToInvestorsIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,57,opt,name=template_available_to_investors_indicator,json=templateAvailableToInvestorsIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"template_available_to_investors_indicator,omitempty"`
	// For AIFs not integrating the pre-contractual template in the prospectus, please advise where and how it is available to investors
	// Required if AIF and if the value of the field templateProvidedToCssfIndicator is N.
	// Forbidden if UCITS or Pension fund
	TemplateNotInProspectusWhereAndHowAvailableToInvestors string `protobuf:"bytes,58,opt,name=template_not_in_prospectus_where_and_how_available_to_investors,json=templateNotInProspectusWhereAndHowAvailableToInvestors,proto3" json:"template_not_in_prospectus_where_and_how_available_to_investors,omitempty"`
	// For AIFs not integrating the pre-contractual template in the prospectus, ESG specific investment policy
	// Required if AIF and if the value of the field templateProvidedToCssfIndicator is N.
	// Forbidden if UCITS or Pension fund
	SpecificESGInvestmentPolicy string `protobuf:"bytes,59,opt,name=specific_e_s_g_investment_policy,json=specificESGInvestmentPolicy,proto3" json:"specific_e_s_g_investment_policy,omitempty"`
	// Prominent statement in the main body of the prospectus/issuing document
	ProminentStatementMainBodyProspectusIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,60,opt,name=prominent_statement_main_body_prospectus_indicator,json=prominentStatementMainBodyProspectusIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"prominent_statement_main_body_prospectus_indicator,omitempty"`
	// They comply with the requirements set out in the CDR; especially the general principles foreseen in article 2 of the CDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	RequirementsCDRComplianceIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,61,opt,name=requirements_c_d_r_compliance_indicator,json=requirementsCDRComplianceIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"requirements_c_d_r_compliance_indicator,omitempty"`
	// They do not contradict with the information currently published for the respective (sub-)fund on the website (link) in accordance with article 10 of the Regulation (EU) 2019/2088 on sustainability‐related disclosures in the financial services sector (SFDR);
	// Required if AIF, forbidden if UCITS or Pension fund
	NoContradictionWithWebsiteLinkIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,62,opt,name=no_contradiction_with_website_link_indicator,json=noContradictionWithWebsiteLinkIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"no_contradiction_with_website_link_indicator,omitempty"`
	// They do not contradict with information disclosed under article 22 and 23 of the AIFMD; information disclosed in the PRIIPs KID (if applicable) or information contained in any marketing communication according to article 13 SFDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	NoContradictionWithDisclosedInformationIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,63,opt,name=no_contradiction_with_disclosed_information_indicator,json=noContradictionWithDisclosedInformationIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"no_contradiction_with_disclosed_information_indicator,omitempty"`
	// They are accurate and reflect what has been actually implemented.
	// Required if AIF, forbidden if UCITS or Pension fund
	ReflectImplementationIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,64,opt,name=reflect_implementation_indicator,json=reflectImplementationIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"reflect_implementation_indicator,omitempty"`
	// Are sustainability risks integrated into the investment decisions for this financial product (Art.6 SFDR)?
	SustainabilityRisksConsideredIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,65,opt,name=sustainability_risks_considered_indicator,json=sustainabilityRisksConsideredIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"sustainability_risks_considered_indicator,omitempty"`
	// Is the information in accordance with article 6 SFDR disclosed?
	Art6InformationDisclosedIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,66,opt,name=art6_information_disclosed_indicator,json=art6InformationDisclosedIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"art6_information_disclosed_indicator,omitempty"`
	// Confirm that the template(s) used for the pre-contractual disclosures of (sub-)funds qualifying as article 8 Product (“Product 8”) or article 9 Product (“Product 9”) under SFDR is a 1-to-1 copy of the template foreseen in annex II or III respectively of the CDR and has not been altered except eventually as regards the size and front type of characters or the color used as permitted by article 2 CDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateCDRCopyIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,67,opt,name=template_c_d_r_copy_indicator,json=templateCDRCopyIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"template_c_d_r_copy_indicator,omitempty"`
	// All sections of the template have been properly completed and those which are not applicable have been disclosed as such;
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateAllSectionsCompletedIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,68,opt,name=template_all_sections_completed_indicator,json=templateAllSectionsCompletedIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"template_all_sections_completed_indicator,omitempty"`
	// Does the information provided here correspond to the latest published information
	// Required if AIF, forbidden if UCITS or Pension fund
	LatestPublishedInformationCorrespondenceIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,69,opt,name=latest_published_information_correspondence_indicator,json=latestPublishedInformationCorrespondenceIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"latest_published_information_correspondence_indicator,omitempty"`
	// Date of the latest issued pre-contractual template (version)
	TemplateLatestIssuedDate string `protobuf:"bytes,70,opt,name=template_latest_issued_date,json=templateLatestIssuedDate,proto3" json:"template_latest_issued_date,omitempty"`
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) Reset() {
	*x = RT0008FD7_SubFundData_Article8SubfundResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0008FD7_SubFundData_Article8SubfundResponses) ProtoMessage() {}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0008FD7_SubFundData_Article8SubfundResponses.ProtoReflect.Descriptor instead.
func (*RT0008FD7_SubFundData_Article8SubfundResponses) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetSustainableInvestmentsIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.SustainableInvestmentsIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetSustainableInvestmentsMinimumProportion1() float64 {
	if x != nil {
		return x.SustainableInvestmentsMinimumProportion1
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetEnvironmentalObjectiveTaxonomyIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.EnvironmentalObjectiveTaxonomyIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetEnvironmentalObjectiveNoTaxonomyIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.EnvironmentalObjectiveNoTaxonomyIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetSocialObjectiveIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.SocialObjectiveIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetEAndSCharacteristics() []RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic {
	if x != nil {
		return x.EAndSCharacteristics
	}
	return nil
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetOtherEnvironmentalCharacteristicsDescription() string {
	if x != nil {
		return x.OtherEnvironmentalCharacteristicsDescription
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetOtherSocialCharacteristicsDescription() string {
	if x != nil {
		return x.OtherSocialCharacteristicsDescription
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetSustainableInvestmentsObjectives() []RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective {
	if x != nil {
		return x.SustainableInvestmentsObjectives
	}
	return nil
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetPrincipalAdverseImpactConsiderationIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.PrincipalAdverseImpactConsiderationIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetInvestmentsStrategies() []RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy {
	if x != nil {
		return x.InvestmentsStrategies
	}
	return nil
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetOtherInvestmentsStrategiesDescription() string {
	if x != nil {
		return x.OtherInvestmentsStrategiesDescription
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetGoodGovernancePolicyIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.GoodGovernancePolicyIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetNoGoodGovernancePolicyDescription() string {
	if x != nil {
		return x.NoGoodGovernancePolicyDescription
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetAlignedESCharacteristicsInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.AlignedESCharacteristicsInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetSustainableInvestmentsMinimumProportion2() float64 {
	if x != nil {
		return x.SustainableInvestmentsMinimumProportion2
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetOtherESCharacteristicsInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.OtherESCharacteristicsInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetRemainingInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetTaInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.TaInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetOtherEnvironmentalMinimumProportion() float64 {
	if x != nil {
		return x.OtherEnvironmentalMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetSocialMinimumProportion() float64 {
	if x != nil {
		return x.SocialMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetDerivativesUseIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.DerivativesUseIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetTaCalculationMethod() []RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod {
	if x != nil {
		return x.TaCalculationMethod
	}
	return nil
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetFossilGasInvestmentsIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.FossilGasInvestmentsIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetNuclearEnergyInvestmentsIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.NuclearEnergyInvestmentsIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetFossilGasInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.FossilGasInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetNuclearEnergyInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.NuclearEnergyInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetRemainingInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetFossilGasInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.FossilGasInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetNuclearEnergyInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.NuclearEnergyInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetRemainingInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetTransitionalActivitiesInvestmentsMinimumShare() float64 {
	if x != nil {
		return x.TransitionalActivitiesInvestmentsMinimumShare
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetEnablingActivitiesInvestmentsMinimumShare() float64 {
	if x != nil {
		return x.EnablingActivitiesInvestmentsMinimumShare
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetEnvironmentalOrSocialSafeguardsMinimumIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.EnvironmentalOrSocialSafeguardsMinimumIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetReferenceBenchmarkDesignatedIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ReferenceBenchmarkDesignatedIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetReferenceBenchmarkIsinCodeIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ReferenceBenchmarkIsinCodeIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetReferenceBenchmarkIsinCode() string {
	if x != nil {
		return x.ReferenceBenchmarkIsinCode
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetReferenceBenchmarkName() string {
	if x != nil {
		return x.ReferenceBenchmarkName
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetReferenceBenchmarkCalculationMethodWebsiteLink() string {
	if x != nil {
		return x.ReferenceBenchmarkCalculationMethodWebsiteLink
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetSubfundSpecificInformationWebsiteLink() string {
	if x != nil {
		return x.SubfundSpecificInformationWebsiteLink
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetComplianceArt23Indicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ComplianceArt23Indicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetComplianceArt24Indicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ComplianceArt24Indicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetTemplateProvidedToCssfIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.TemplateProvidedToCssfIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetRampUpPeriodIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.RampUpPeriodIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetRampUpPeriodEndDate() string {
	if x != nil {
		return x.RampUpPeriodEndDate
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetTemplateAvailableToInvestorsIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.TemplateAvailableToInvestorsIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetTemplateNotInProspectusWhereAndHowAvailableToInvestors() string {
	if x != nil {
		return x.TemplateNotInProspectusWhereAndHowAvailableToInvestors
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetSpecificESGInvestmentPolicy() string {
	if x != nil {
		return x.SpecificESGInvestmentPolicy
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetProminentStatementMainBodyProspectusIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ProminentStatementMainBodyProspectusIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetRequirementsCDRComplianceIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.RequirementsCDRComplianceIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetNoContradictionWithWebsiteLinkIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.NoContradictionWithWebsiteLinkIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetNoContradictionWithDisclosedInformationIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.NoContradictionWithDisclosedInformationIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetReflectImplementationIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ReflectImplementationIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetSustainabilityRisksConsideredIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.SustainabilityRisksConsideredIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetArt6InformationDisclosedIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.Art6InformationDisclosedIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetTemplateCDRCopyIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.TemplateCDRCopyIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetTemplateAllSectionsCompletedIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.TemplateAllSectionsCompletedIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetLatestPublishedInformationCorrespondenceIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.LatestPublishedInformationCorrespondenceIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article8SubfundResponses) GetTemplateLatestIssuedDate() string {
	if x != nil {
		return x.TemplateLatestIssuedDate
	}
	return ""
}

// Definition of information to be provided per Article 9 sub fund
type RT0008FD7_SubFundData_Article9SubfundResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The sub-fund will make a minimum of sustainable investments with an environmental objective
	SustainableInvestmentsIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,2,opt,name=sustainable_investments_indicator,json=sustainableInvestmentsIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"sustainable_investments_indicator,omitempty"`
	// Minimum proportion of sustainable investments with an environmental objective
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	SustainableInvestmentsEnvironmentalMinimumProportion1 float64 `protobuf:"fixed64,3,opt,name=sustainable_investments_environmental_minimum_proportion1,json=sustainableInvestmentsEnvironmentalMinimumProportion1,proto3" json:"sustainable_investments_environmental_minimum_proportion1,omitempty"`
	// In economic activities that qualify as environmentally sustainable under the EU Taxonomy
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	EnvironmentalObjectiveTaxonomyIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,4,opt,name=environmental_objective_taxonomy_indicator,json=environmentalObjectiveTaxonomyIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"environmental_objective_taxonomy_indicator,omitempty"`
	// In economic activities that do not qualify as environmentally sustainable under the EU Taxonomy
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y
	EnvironmentalObjectiveNoTaxonomyIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,5,opt,name=environmental_objective_no_taxonomy_indicator,json=environmentalObjectiveNoTaxonomyIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"environmental_objective_no_taxonomy_indicator,omitempty"`
	// The sub-fund will make a minimum of sustainable investments with a social objective
	SocialObjectiveIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,6,opt,name=social_objective_indicator,json=socialObjectiveIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"social_objective_indicator,omitempty"`
	// Minimum percentage of sustainable investments with a social objective
	// The field is required if the value of the field socialObjectiveIndicator is Y
	SustainableInvestmentsSocialMinimalProportion1 float64                                                                           `protobuf:"fixed64,7,opt,name=sustainable_investments_social_minimal_proportion1,json=sustainableInvestmentsSocialMinimalProportion1,proto3" json:"sustainable_investments_social_minimal_proportion1,omitempty"`
	EnvironmentalAndSocialObjectives               []RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives `protobuf:"varint,8,rep,packed,name=environmental_and_social_objectives,json=environmentalAndSocialObjectives,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives" json:"environmental_and_social_objectives,omitempty"`
	// Does the sub-fund consider principal adverse impacts on sustainability factors?
	PrincipalAdverseImpactConsiderationIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,9,opt,name=principal_adverse_impact_consideration_indicator,json=principalAdversImpactConsiderationIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"principal_adverse_impact_consideration_indicator,omitempty"`
	// What investment strategy does the sub-fund follow?
	InvestmentsStrategies []RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy `protobuf:"varint,10,rep,packed,name=investments_strategies,json=investmentsStrategies,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy" json:"investments_strategies,omitempty"`
	// Please specify other investment strategies
	// The field is required if O is defined in the list of values for the field investmentsStrategies
	OtherInvestmentsStrategiesDescription string `protobuf:"bytes,11,opt,name=other_investments_strategies_description,json=otherInvestmentsStrategiesDescription,proto3" json:"other_investments_strategies_description,omitempty"`
	// Is a policy applied to assess good governance practices of the investee companies?
	GoodGovernancePolicyIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,12,opt,name=good_governance_policy_indicator,json=goodGovernancePolicyIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"good_governance_policy_indicator,omitempty"`
	// If no, please explain.
	// The field is required if the value of the field goodGovernancePolicyIndicator is N"
	NoGoodGovernancePolicyDescription string `protobuf:"bytes,13,opt,name=no_good_governance_policy_description,json=noGoodGovernancePolicyDescription,proto3" json:"no_good_governance_policy_description,omitempty"`
	// Minimum proportion of sustainable investments - #1 Sustainable (in %).
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y or if the value of the field socialObjectiveIndicator is Y
	SustainableInvestmentsMinimalProportion float64 `protobuf:"fixed64,14,opt,name=sustainable_investments_minimal_proportion,json=sustainableInvestmentsMinimalProportion,proto3" json:"sustainable_investments_minimal_proportion,omitempty"`
	// Minimum proportion of sustainable environmental investments - #1 Sustainable - Environmental (in %)
	// The field is required if the value of the field sustainableInvestmentsIndicator is Y.
	SustainableInvestmentsEnvironmentalMinimumProportion2 float64 `protobuf:"fixed64,15,opt,name=sustainable_investments_environmental_minimum_proportion2,json=sustainableInvestmentsEnvironmentalMinimumProportion2,proto3" json:"sustainable_investments_environmental_minimum_proportion2,omitempty"`
	// Minimum proportion of Taxonomy-aligned - #1 Sustainable - Environmental - Taxonomy-aligned (in %)
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	SustainableInvestmentsEnvironmentalTaMinimumProportion float64 `protobuf:"fixed64,16,opt,name=sustainable_investments_environmental_ta_minimum_proportion,json=sustainableInvestmentsEnvironmentalTaMinimumProportion,proto3" json:"sustainable_investments_environmental_ta_minimum_proportion,omitempty"`
	// Minimum proportion of Other - #1 Sustainable - Environmental - Other (in %).
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y.
	SustainableInvestmentsEnvironmentalOtherMinimumProportion float64 `protobuf:"fixed64,17,opt,name=sustainable_investments_environmental_other_minimum_proportion,json=sustainableInvestmentsEnvironmentalOtherMinimumProportion,proto3" json:"sustainable_investments_environmental_other_minimum_proportion,omitempty"`
	// Minimum proportion of sustainable social investments #1 Sustainable - Social (in %)
	// The field is required if the value of the field socialObjectiveIndicator is Y
	SustainableInvestmentsSocialMinimumProportion2 float64 `protobuf:"fixed64,18,opt,name=sustainable_investments_social_minimum_proportion2,json=sustainableInvestmentsSocialMinimumProportion2,proto3" json:"sustainable_investments_social_minimum_proportion2,omitempty"`
	// Minimum proportion of not sustainable investments - #2 Not sustainable (in %)
	NotSustainableInvestmentsMinimumProportion float64 `protobuf:"fixed64,19,opt,name=not_sustainable_investments_minimum_proportion,json=notSustainableInvestmentsMinimumProportion,proto3" json:"not_sustainable_investments_minimum_proportion,omitempty"`
	// Does the sub-fund use derivative instruments as defined in Article2(1), point 29, of Regulation (EU) No 600/2014 to attain the sustainable investment objective?
	DerivativesUseIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,20,opt,name=derivatives_use_indicator,json=derivativesUseIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"derivatives_use_indicator,omitempty"`
	// Taxonomy-aligned activities are expressed as a share of
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TaCalculationMethod []RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod `protobuf:"varint,21,rep,packed,name=ta_calculation_method,json=taCalculationMethod,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod" json:"ta_calculation_method,omitempty"`
	// Does the sub-fund invest in fossil gas related activities complying with the EU Taxonomy?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	FossilGasInvestmentsIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,22,opt,name=fossil_gas_investments_indicator,json=fossilGasInvestmentsIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"fossil_gas_investments_indicator,omitempty"`
	// Does the sub-fund invest in nuclear energy related activities complying with the EU Taxonomy?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	NuclearEnergyInvestmentsIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,23,opt,name=nuclear_energy_investments_indicator,json=nuclearEnergyInvestmentsIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"nuclear_energy_investments_indicator,omitempty"`
	// Minimum percentage of investments in fossil gas related activities aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field fossilGasInvestmentsIndicator is Y
	FossilGasInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,24,opt,name=fossil_gas_investments_incl_sovereign_bonds_minimum_proportion,json=fossilGasInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"fossil_gas_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in nuclear energy related activities aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field nuclearEnergyInvestmentsIndicator is Y
	NuclearEnergyInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,25,opt,name=nuclear_energy_investments_incl_sovereign_bonds_minimum_proportion,json=nuclearEnergyInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"nuclear_energy_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments (excluding fossil gas and nuclear energy related activities) aligned with EU taxonomy including sovereign bonds
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	RemainingInvestmentsInclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,26,opt,name=remaining_investments_incl_sovereign_bonds_minimum_proportion,json=remainingInvestmentsInclSovereignBondsMinimumProportion,proto3" json:"remaining_investments_incl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in fossil gas related activities aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field fossilGasInvestmentsIndicator is Y
	FossilGasInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,27,opt,name=fossil_gas_investments_excl_sovereign_bonds_minimum_proportion,json=fossilGasInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"fossil_gas_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments in nuclear energy related activities aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field nuclearEnergyInvestmentsIndicator is Y
	NuclearEnergyInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,28,opt,name=nuclear_energy_investments_excl_sovereign_bonds_minimum_proportion,json=nuclearEnergyInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"nuclear_energy_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// Minimum percentage of investments (excluding fossil gas and nuclear energy related activities) aligned with EU taxonomy excluding sovereign bonds
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	RemainingInvestmentsExclSovereignBondsMinimumProportion float64 `protobuf:"fixed64,29,opt,name=remaining_investments_excl_sovereign_bonds_minimum_proportion,json=remainingInvestmentsExclSovereignBondsMinimumProportion,proto3" json:"remaining_investments_excl_sovereign_bonds_minimum_proportion,omitempty"`
	// What is the minimum share of investments in transitional activities?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	TransitionalActivitiesInvestmentsMinimumShare float64 `protobuf:"fixed64,30,opt,name=transitional_activities_investments_minimum_share,json=transitionalActivitiesInvestmentsMinimumShare,proto3" json:"transitional_activities_investments_minimum_share,omitempty"`
	// What is the minimum share of investments in enabling activities?
	// The field is required if the value of the field environmentalObjectiveTaxonomyIndicator is Y
	EnablingActivitiesInvestmentsMinimumShare float64 `protobuf:"fixed64,31,opt,name=enabling_activities_investments_minimum_share,json=enablingActivitiesInvestmentsMinimumShare,proto3" json:"enabling_activities_investments_minimum_share,omitempty"`
	// Are there any minimum environmental or social safeguards for investments included under “#2 Not sustainable”?
	EnvironmentalOrSocialSafeguardsMinimumIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,32,opt,name=environmental_or_social_safeguards_minimum_indicator,json=environmentalOrSocialSafeguardsMinimumIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"environmental_or_social_safeguards_minimum_indicator,omitempty"`
	// Is a specific index designated as a reference benchmark to meet the sustainable investment objective?
	ReferenceBenchmarkDesignatedIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,33,opt,name=reference_benchmark_designated_indicator,json=referenceBenchmarkDesignatedIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"reference_benchmark_designated_indicator,omitempty"`
	// Is an ISIN code available for the reference benchmark?
	// The field is required if the value of the field referenceBenchmarkDesignatedIndicator is Y
	ReferenceBenchmarkIsinCodeIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,34,opt,name=reference_benchmark_isin_code_indicator,json=referenceBenchmarkIsinCodeIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"reference_benchmark_isin_code_indicator,omitempty"`
	// Specify the ISIN code of the reference benchmark
	// The field is required if the value of the field referenceBenchmarkIsinCodeIndicator is Y.
	// The value of the field must respect the ISIN code naming convention.
	ReferenceBenchmarkIsinCode string `protobuf:"bytes,35,opt,name=reference_benchmark_isin_code,json=referenceBenchmarkIsinCode,proto3" json:"reference_benchmark_isin_code,omitempty"`
	// Specify the name of the reference benchmark
	// The field is required if the value of the field referenceBenchmarkIsinCodeIndicator is N
	ReferenceBenchmarkName string `protobuf:"bytes,36,opt,name=reference_benchmark_name,json=referenceBenchmarkName,proto3" json:"reference_benchmark_name,omitempty"`
	// Indicate website link of the methodology used for the calculation of the designated index can be found
	// The field is required if the value of the field referenceBenchmarkDesignatedIndicator is Y
	ReferenceBenchmarkCalculationMethodWebsiteLink string `protobuf:"bytes,37,opt,name=reference_benchmark_calculation_method_website_link,json=referenceBenchmarkCalculationMethodWebsiteLink,proto3" json:"reference_benchmark_calculation_method_website_link,omitempty"`
	// More product-specific information can be found on the website
	// Include a hyperlink to the website referred to in Article 23 of this Regulation.
	SubfundSpecificInformationWebsiteLink string `protobuf:"bytes,38,opt,name=subfund_specific_information_website_link,json=subfundSpecificInformationWebsiteLink,proto3" json:"subfund_specific_information_website_link,omitempty"`
	// Does the above mentioned hyperlink direct investors to a separate section titled “Sustainability-related disclosures”, in the same part of the website (as specified in Q3 of the CSSF SFDR FAQ) as the other information relating to the financial product, including marketing communications, in line with and as further detailed in Article 23 of the SFDR RTS?
	ComplianceArt23Indicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,39,opt,name=compliance_art23_indicator,json=complianceArt23Indicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"compliance_art23_indicator,omitempty"`
	// Does the product related website disclosures available through the above-mentioned hyperlink, provide all information set out in Article 10(1) SFDR and Articles 38 to 49 SFDR RTS, through the sections and order as specified in Article 37 SFDR RTS?
	ComplianceArt_37Indicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,40,opt,name=compliance_art_37_indicator,json=complianceArt37Indicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"compliance_art_37_indicator,omitempty"`
	// Did you already provide the pre-contractual template to the CSSF for the sub-fund?
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateProvidedToCssfIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,41,opt,name=template_provided_to_cssf_indicator,json=templateProvidedToCssfIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"template_provided_to_cssf_indicator,omitempty"`
	// Subfund still in a ramp-up period
	// Required if AIF, forbidden if UCITS or Pension fund
	RampUpPeriodIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,42,opt,name=ramp_up_period_indicator,json=rampUpPeriodIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"ramp_up_period_indicator,omitempty"`
	// Ramp-up period end date
	// Required if AIF and if the value of the field rampUpPeriodIndicator is Y. Forbidden if UCITS or Pension fund
	RampUpPeriodEndDate string `protobuf:"bytes,43,opt,name=ramp_up_period_end_date,json=rampUpPeriodEndDate,proto3" json:"ramp_up_period_end_date,omitempty"`
	// Please confirm that the pre-contractual template is available to investors
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateAvailableToInvestorsIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,44,opt,name=template_available_to_investors_indicator,json=templateAvailableToInvestorsIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"template_available_to_investors_indicator,omitempty"`
	// For AIFs not integrating the pre-contractual template in the prospectus, please advise where and how it is available to investors
	// Required if AIF and if the value of the field templateProvidedToCssfIndicator is N. Forbidden if UCITS or Pension fund
	TemplateNotInProspectusWhereAndHowAvailableToInvestors string `protobuf:"bytes,45,opt,name=template_not_in_prospectus_where_and_how_available_to_investors,json=templateNotInProspectusWhereAndHowAvailableToInvestors,proto3" json:"template_not_in_prospectus_where_and_how_available_to_investors,omitempty"`
	// For AIFs not integrating the pre-contractual template in the prospectus, ESG specific investment policy
	// Required if AIF and if the value of the field templateProvidedToCssfIndicator is N. Forbidden if UCITS or Pension fund
	SpecificESGInvestmentPolicy string `protobuf:"bytes,46,opt,name=specific_e_s_g_investment_policy,json=specificESGInvestmentPolicy,proto3" json:"specific_e_s_g_investment_policy,omitempty"`
	// Prominent statement in the main body of the prospectus/issuing document
	ProminentStatementMainBodyProspectusIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,47,opt,name=prominent_statement_main_body_prospectus_indicator,json=prominentStatementMainBodyProspectusIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"prominent_statement_main_body_prospectus_indicator,omitempty"`
	// They comply with the requirements set out in the CDR; especially the general principles foreseen in article 2 of the CDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	RequirementsCDRComplianceIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,48,opt,name=requirements_c_d_r_compliance_indicator,json=requirementsCDRComplianceIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"requirements_c_d_r_compliance_indicator,omitempty"`
	// They do not contradict with the information currently published for the respective (sub-)fund on the website (link) in accordance with article 10 of the Regulation (EU) 2019/2088 on sustainability‐related disclosures in the financial services sector (SFDR);
	// Required if AIF, forbidden if UCITS or Pension fund
	NoContradictionWithWebsiteLinkIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,49,opt,name=no_contradiction_with_website_link_indicator,json=noContradictionWithWebsiteLinkIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"no_contradiction_with_website_link_indicator,omitempty"`
	// They do not contradict with information disclosed under article 22 and 23 of the AIFMD; information disclosed in the PRIIPs KID (if applicable) or information contained in any marketing communication according to article 13 SFDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	NoContradictionWithDisclosedInformationIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,50,opt,name=no_contradiction_with_disclosed_information_indicator,json=noContradictionWithDisclosedInformationIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"no_contradiction_with_disclosed_information_indicator,omitempty"`
	// They are accurate and reflect what has been actually implemented.
	// Required if AIF, forbidden if UCITS or Pension fund
	ReflectImplementationIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,51,opt,name=reflect_implementation_indicator,json=reflectImplementationIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"reflect_implementation_indicator,omitempty"`
	// Are sustainability risks integrated into the investment decisions for this financial product (Art.6 SFDR)?
	SustainabilityRisksConsideredIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,52,opt,name=sustainability_risks_considered_indicator,json=sustainabilityRisksConsideredIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"sustainability_risks_considered_indicator,omitempty"`
	// Is the information in accordance with article 6 SFDR disclosed?
	Art6InformationDisclosedIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,53,opt,name=art6_information_disclosed_indicator,json=art6InformationDisclosedIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"art6_information_disclosed_indicator,omitempty"`
	// Confirm that the template(s) used for the pre-contractual disclosures of (sub-)funds qualifying as article 8 Product (“Product 8”) or article 9 Product (“Product 9”) under SFDR is a 1-to-1 copy of the template foreseen in annex II or III respectively of the CDR and has not been altered except eventually as regards the size and front type of characters or the color used as permitted by article 2 CDR;
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateCDRCopyIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,54,opt,name=template_c_d_r_copy_indicator,json=templateCDRCopyIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"template_c_d_r_copy_indicator,omitempty"`
	// All sections of the template have been properly completed and those which are not applicable have been disclosed as such;
	// Required if AIF, forbidden if UCITS or Pension fund
	TemplateAllSectionsCompletedIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,55,opt,name=template_all_sections_completed_indicator,json=templateAllSectionsCompletedIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"template_all_sections_completed_indicator,omitempty"`
	// Does the information provided here correspond to the latest published information
	// Required if AIF, forbidden if UCITS or Pension fund
	LatestPublishedInformationCorrespondenceIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,56,opt,name=latest_published_information_correspondence_indicator,json=latestPublishedInformationCorrespondenceIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"latest_published_information_correspondence_indicator,omitempty"`
	// Date of the latest issued pre-contractual template (version) (YYYY-MM-DD)
	TemplateLatestIssuedDate string `protobuf:"bytes,57,opt,name=template_latest_issued_date,json=templateLatestIssuedDate,proto3" json:"template_latest_issued_date,omitempty"`
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) Reset() {
	*x = RT0008FD7_SubFundData_Article9SubfundResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0008FD7_SubFundData_Article9SubfundResponses) ProtoMessage() {}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0008FD7_SubFundData_Article9SubfundResponses.ProtoReflect.Descriptor instead.
func (*RT0008FD7_SubFundData_Article9SubfundResponses) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSustainableInvestmentsIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.SustainableInvestmentsIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSustainableInvestmentsEnvironmentalMinimumProportion1() float64 {
	if x != nil {
		return x.SustainableInvestmentsEnvironmentalMinimumProportion1
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetEnvironmentalObjectiveTaxonomyIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.EnvironmentalObjectiveTaxonomyIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetEnvironmentalObjectiveNoTaxonomyIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.EnvironmentalObjectiveNoTaxonomyIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSocialObjectiveIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.SocialObjectiveIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSustainableInvestmentsSocialMinimalProportion1() float64 {
	if x != nil {
		return x.SustainableInvestmentsSocialMinimalProportion1
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetEnvironmentalAndSocialObjectives() []RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives {
	if x != nil {
		return x.EnvironmentalAndSocialObjectives
	}
	return nil
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetPrincipalAdverseImpactConsiderationIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.PrincipalAdverseImpactConsiderationIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetInvestmentsStrategies() []RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy {
	if x != nil {
		return x.InvestmentsStrategies
	}
	return nil
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetOtherInvestmentsStrategiesDescription() string {
	if x != nil {
		return x.OtherInvestmentsStrategiesDescription
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetGoodGovernancePolicyIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.GoodGovernancePolicyIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetNoGoodGovernancePolicyDescription() string {
	if x != nil {
		return x.NoGoodGovernancePolicyDescription
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSustainableInvestmentsMinimalProportion() float64 {
	if x != nil {
		return x.SustainableInvestmentsMinimalProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSustainableInvestmentsEnvironmentalMinimumProportion2() float64 {
	if x != nil {
		return x.SustainableInvestmentsEnvironmentalMinimumProportion2
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSustainableInvestmentsEnvironmentalTaMinimumProportion() float64 {
	if x != nil {
		return x.SustainableInvestmentsEnvironmentalTaMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSustainableInvestmentsEnvironmentalOtherMinimumProportion() float64 {
	if x != nil {
		return x.SustainableInvestmentsEnvironmentalOtherMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSustainableInvestmentsSocialMinimumProportion2() float64 {
	if x != nil {
		return x.SustainableInvestmentsSocialMinimumProportion2
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetNotSustainableInvestmentsMinimumProportion() float64 {
	if x != nil {
		return x.NotSustainableInvestmentsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetDerivativesUseIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.DerivativesUseIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetTaCalculationMethod() []RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod {
	if x != nil {
		return x.TaCalculationMethod
	}
	return nil
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetFossilGasInvestmentsIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.FossilGasInvestmentsIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetNuclearEnergyInvestmentsIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.NuclearEnergyInvestmentsIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetFossilGasInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.FossilGasInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetNuclearEnergyInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.NuclearEnergyInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetRemainingInvestmentsInclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsInclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetFossilGasInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.FossilGasInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetNuclearEnergyInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.NuclearEnergyInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetRemainingInvestmentsExclSovereignBondsMinimumProportion() float64 {
	if x != nil {
		return x.RemainingInvestmentsExclSovereignBondsMinimumProportion
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetTransitionalActivitiesInvestmentsMinimumShare() float64 {
	if x != nil {
		return x.TransitionalActivitiesInvestmentsMinimumShare
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetEnablingActivitiesInvestmentsMinimumShare() float64 {
	if x != nil {
		return x.EnablingActivitiesInvestmentsMinimumShare
	}
	return 0
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetEnvironmentalOrSocialSafeguardsMinimumIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.EnvironmentalOrSocialSafeguardsMinimumIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetReferenceBenchmarkDesignatedIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ReferenceBenchmarkDesignatedIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetReferenceBenchmarkIsinCodeIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ReferenceBenchmarkIsinCodeIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetReferenceBenchmarkIsinCode() string {
	if x != nil {
		return x.ReferenceBenchmarkIsinCode
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetReferenceBenchmarkName() string {
	if x != nil {
		return x.ReferenceBenchmarkName
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetReferenceBenchmarkCalculationMethodWebsiteLink() string {
	if x != nil {
		return x.ReferenceBenchmarkCalculationMethodWebsiteLink
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSubfundSpecificInformationWebsiteLink() string {
	if x != nil {
		return x.SubfundSpecificInformationWebsiteLink
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetComplianceArt23Indicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ComplianceArt23Indicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetComplianceArt_37Indicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ComplianceArt_37Indicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetTemplateProvidedToCssfIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.TemplateProvidedToCssfIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetRampUpPeriodIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.RampUpPeriodIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetRampUpPeriodEndDate() string {
	if x != nil {
		return x.RampUpPeriodEndDate
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetTemplateAvailableToInvestorsIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.TemplateAvailableToInvestorsIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetTemplateNotInProspectusWhereAndHowAvailableToInvestors() string {
	if x != nil {
		return x.TemplateNotInProspectusWhereAndHowAvailableToInvestors
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSpecificESGInvestmentPolicy() string {
	if x != nil {
		return x.SpecificESGInvestmentPolicy
	}
	return ""
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetProminentStatementMainBodyProspectusIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ProminentStatementMainBodyProspectusIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetRequirementsCDRComplianceIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.RequirementsCDRComplianceIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetNoContradictionWithWebsiteLinkIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.NoContradictionWithWebsiteLinkIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetNoContradictionWithDisclosedInformationIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.NoContradictionWithDisclosedInformationIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetReflectImplementationIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.ReflectImplementationIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetSustainabilityRisksConsideredIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.SustainabilityRisksConsideredIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetArt6InformationDisclosedIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.Art6InformationDisclosedIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetTemplateCDRCopyIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.TemplateCDRCopyIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetTemplateAllSectionsCompletedIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.TemplateAllSectionsCompletedIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetLatestPublishedInformationCorrespondenceIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.LatestPublishedInformationCorrespondenceIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_Article9SubfundResponses) GetTemplateLatestIssuedDate() string {
	if x != nil {
		return x.TemplateLatestIssuedDate
	}
	return ""
}

// Definition of information to be provided per Other sub fund
type RT0008FD7_SubFundData_OtherSubfundResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	// The reporting name of the fund
	//	string fund_name = 91;
	//	// The internal identifier of the sub-fund
	//	string fund_internal_identifier = 92;
	//	// CSSF code of the sub-fund. Number corresponding to the compartment without zero in front of the number. For a stand-alone fund, please enter 0. For a multiple compartment fund, please indicate the corresponding number.
	//	int32 subfund_cssf_code = 1 [
	//	  json_name = "subfundCssfCode",
	//	  (standards.open.v1.fdx_options).required = true,
	//	  (standards.open.v1.fdx_options).question = "CSSF code of the sub-fund.",
	//	  (standards.open.v1.fdx_options).description = "Number corresponding to the compartment without zero in front of the number. For a stand-alone fund, please enter 0. For a multiple compartment fund, please indicate the corresponding number."
	//	];
	//
	// Are sustainability risks integrated into the investment decisions for this financial product (Art.6 SFDR)?
	Article6Indicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,2,opt,name=article6_indicator,json=article6Indicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"article6_indicator,omitempty"`
	// Is the information in accordance with article 6 SFDR disclosed?
	InformationArticle6DisclosedIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,3,opt,name=information_article6_disclosed_indicator,json=informationArticle6DisclosedIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"information_article6_disclosed_indicator,omitempty"`
	// Are principal adverse impacts on sustainability factors considered for this financial product (Art.7 SFDR)?
	Article7Indicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,4,opt,name=article7_indicator,json=article7Indicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"article7_indicator,omitempty"`
	// Is the information in accordance with article 7 SFDR disclosed?
	InformationArticle7DisclosedIndicator RT0008FD7_SubFundData_YesNo `protobuf:"varint,5,opt,name=information_article7_disclosed_indicator,json=informationArticle7DisclosedIndicator,proto3,enum=standards.open.v1.RT0008FD7_SubFundData_YesNo" json:"information_article7_disclosed_indicator,omitempty"`
}

func (x *RT0008FD7_SubFundData_OtherSubfundResponses) Reset() {
	*x = RT0008FD7_SubFundData_OtherSubfundResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RT0008FD7_SubFundData_OtherSubfundResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RT0008FD7_SubFundData_OtherSubfundResponses) ProtoMessage() {}

func (x *RT0008FD7_SubFundData_OtherSubfundResponses) ProtoReflect() protoreflect.Message {
	mi := &file_standards_open_v1_RT0008FD7_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RT0008FD7_SubFundData_OtherSubfundResponses.ProtoReflect.Descriptor instead.
func (*RT0008FD7_SubFundData_OtherSubfundResponses) Descriptor() ([]byte, []int) {
	return file_standards_open_v1_RT0008FD7_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *RT0008FD7_SubFundData_OtherSubfundResponses) GetArticle6Indicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.Article6Indicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_OtherSubfundResponses) GetInformationArticle6DisclosedIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.InformationArticle6DisclosedIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_OtherSubfundResponses) GetArticle7Indicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.Article7Indicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

func (x *RT0008FD7_SubFundData_OtherSubfundResponses) GetInformationArticle7DisclosedIndicator() RT0008FD7_SubFundData_YesNo {
	if x != nil {
		return x.InformationArticle7DisclosedIndicator
	}
	return RT0008FD7_SubFundData_YES_NO_NA_UNSPECIFIED
}

var File_standards_open_v1_RT0008FD7_proto protoreflect.FileDescriptor

var file_standards_open_v1_RT0008FD7_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x79,
	0x65, 0x73, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0xcf, 0x02, 0x0a, 0x09,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x12, 0x4c, 0x0a, 0x0d, 0x73, 0x75, 0x62,
	0x5f, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53,
	0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x46,
	0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xbb, 0xce, 0x02, 0x0a, 0x0b, 0x53, 0x75, 0x62,
	0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6d, 0x62, 0x72,
	0x65, 0x6c, 0x6c, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x75, 0x6d, 0x62, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a,
	0x1c, 0x75, 0x6d, 0x62, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x5c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1a, 0x75, 0x6d, 0x62, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x49, 0x0a, 0x12, 0x75, 0x6d, 0x62, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x5f, 0x63, 0x73, 0x73, 0x66,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x8a, 0x97, 0x22,
	0x19, 0x0a, 0x17, 0x43, 0x53, 0x53, 0x46, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x73, 0x73, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x5f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x66, 0x75, 0x6e, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x90, 0x02, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x73,
	0x73, 0x66, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x60, 0x20, 0x01, 0x28, 0x05, 0x42, 0xe3, 0x01,
	0x8a, 0x97, 0x22, 0xde, 0x01, 0x0a, 0x1a, 0x43, 0x53, 0x53, 0x46, 0x20, 0x63, 0x6f, 0x64, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64,
	0x2e, 0x12, 0xbf, 0x01, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x20, 0x46, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x2d, 0x61, 0x6c, 0x6f,
	0x6e, 0x65, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x30, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x73, 0x73, 0x66,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x1b, 0x73, 0x66, 0x64, 0x72, 0x5f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x46, 0x44, 0x52, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x19,
	0x73, 0x66, 0x64, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb2, 0x01, 0x0a, 0x12, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30,
	0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x42, 0x41, 0x8a, 0x97, 0x22, 0x3d, 0x0a,
	0x3b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x20, 0x38, 0x20, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x10, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x12, 0xb1,
	0x01, 0x0a, 0x12, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75,
	0x62, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x42, 0x40,
	0x8a, 0x97, 0x22, 0x3c, 0x0a, 0x3a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x20, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x52, 0x10, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x12, 0xfa, 0x01, 0x0a, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x42, 0x91, 0x01, 0x8a,
	0x97, 0x22, 0x8c, 0x01, 0x0a, 0x89, 0x01, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20,
	0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x20, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x64, 0x69, 0x73,
	0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x20, 0x6f, 0x62, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x20, 0x62, 0x65, 0x69, 0x6e, 0x67,
	0x20, 0x61, 0x6e, 0x20, 0x61, 0x72, 0x74, 0x20, 0x38, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x72, 0x74,
	0x20, 0x39, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x52, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x1a,
	0xa5, 0xa2, 0x01, 0x0a, 0x18, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0xaf, 0x02,
	0x0a, 0x21, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54,
	0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb2, 0x01, 0x8a, 0x97, 0x22, 0xad,
	0x01, 0x0a, 0xa5, 0x01, 0x54, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64,
	0x20, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x20, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2f, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x61,
	0x6e, 0x64, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x20, 0x69, 0x74, 0x20, 0x64, 0x6f, 0x65, 0x73,
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x73, 0x20, 0x69, 0x74, 0x73,
	0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x61, 0x20, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x2c, 0x20, 0x69, 0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6d, 0x61, 0x6b,
	0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4a, 0x01, 0x31, 0x58, 0x01, 0x52, 0x1f,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0xc3, 0x02, 0x0a, 0x28, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x42, 0xe6, 0x01, 0x8a, 0x97, 0x22, 0xe1, 0x01, 0x0a, 0x2e, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f,
	0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x53, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73,
	0x20, 0x59, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72,
	0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x28, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0xcb, 0x03, 0x0a, 0x2a, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xbd, 0x02, 0x8a, 0x97, 0x22,
	0xb8, 0x02, 0x0a, 0x81, 0x01, 0x54, 0x68, 0x65, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x68, 0x61,
	0x73, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x69, 0x6e, 0x20,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79,
	0x20, 0x61, 0x73, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x6c, 0x79, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x57,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x73, 0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x4a, 0x01, 0x32, 0x52, 0x27, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0xd7, 0x03, 0x0a, 0x2d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x6e, 0x6f, 0x5f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xc4, 0x02, 0x8a, 0x97,
	0x22, 0xbf, 0x02, 0x0a, 0x88, 0x01, 0x54, 0x68, 0x65, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x68,
	0x61, 0x73, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x69, 0x6e,
	0x20, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74,
	0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x20, 0x61, 0x73, 0x20, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x12, 0x56,
	0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x4a,
	0x01, 0x32, 0x52, 0x29, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xca, 0x02,
	0x0a, 0x1a, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0xdb, 0x01, 0x8a, 0x97, 0x22, 0xd6, 0x01, 0x0a, 0x20, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x75, 0x6e, 0x64, 0x20, 0x68, 0x61, 0x73, 0x20, 0x61, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x12, 0x56, 0x54, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x53, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20,
	0x69, 0x73, 0x20, 0x59, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66,
	0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x4a, 0x01, 0x32,
	0x52, 0x18, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xbe, 0x02, 0x0a, 0x17, 0x65,
	0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x55, 0x2e, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e,
	0x45, 0x41, 0x6e, 0x64, 0x53, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x42, 0xaf, 0x01, 0x8a, 0x97, 0x22, 0xaa, 0x01, 0x0a, 0x4e, 0x57, 0x68, 0x61,
	0x74, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20,
	0x61, 0x6e, 0x64, 0x2f, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x61, 0x72,
	0x65, 0x20, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x3f, 0x12, 0x56, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x53, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69,
	0x73, 0x20, 0x59, 0x58, 0x01, 0x52, 0x14, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x85, 0x02, 0x0a, 0x2f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x9d, 0x01, 0x8a, 0x97, 0x22, 0x98, 0x01, 0x0a, 0x33, 0x50,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x12, 0x61, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73,
	0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x45, 0x4f, 0x54,
	0x48, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x20, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x2c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0xef, 0x01, 0x0a, 0x28, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x95, 0x01, 0x8a, 0x97, 0x22, 0x90, 0x01, 0x0a, 0x2b,
	0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x61, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x53, 0x4f, 0x54, 0x48, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73,
	0x74, 0x20, 0x6f, 0x66, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x25,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xca, 0x03, 0x0a, 0x22, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x60, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x42, 0x99, 0x02, 0x8a, 0x97, 0x22, 0x94, 0x02, 0x0a, 0x63, 0x57, 0x68,
	0x61, 0x74, 0x20, 0x61, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75,
	0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79,
	0x20, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x61, 0x6b, 0x65,
	0x3f, 0x12, 0x54, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32,
	0x52, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x12, 0xf1, 0x01, 0x0a, 0x30, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46,
	0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x5a, 0x8a,
	0x97, 0x22, 0x56, 0x0a, 0x4f, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75,
	0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x20,
	0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x20, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x20, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x2b, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x41, 0x64, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xc7, 0x01, 0x0a, 0x16, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x54, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30,
	0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x3a, 0x8a,
	0x97, 0x22, 0x36, 0x0a, 0x32, 0x57, 0x68, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x20, 0x64, 0x6f,
	0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x3f, 0x58, 0x01, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73,
	0x12, 0xf0, 0x01, 0x0a, 0x28, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x96, 0x01, 0x8a, 0x97, 0x22, 0x91, 0x01, 0x0a, 0x2a, 0x50, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x12, 0x63, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f,
	0x66, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x52, 0x25, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0xd6, 0x01, 0x0a, 0x20, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62,
	0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x5d,
	0x8a, 0x97, 0x22, 0x59, 0x0a, 0x52, 0x49, 0x73, 0x20, 0x61, 0x20, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x20, 0x67, 0x6f, 0x6f, 0x64, 0x20, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x20, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x73, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x65, 0x65, 0x20, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x1d, 0x67,
	0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x9a, 0x02, 0x0a,
	0x25, 0x6e, 0x6f, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0xc7, 0x01, 0x8a,
	0x97, 0x22, 0xc2, 0x01, 0x0a, 0x15, 0x49, 0x66, 0x20, 0x6e, 0x6f, 0x2c, 0x20, 0x70, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x20, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x52, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x67, 0x6f, 0x6f,
	0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x22,
	0x55, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x2e, 0x30, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x3f, 0x32, 0x3a, 0x31, 0x52, 0x21, 0x6e, 0x6f, 0x47, 0x6f, 0x6f, 0x64, 0x47, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x88, 0x02, 0x0a, 0x3a, 0x61, 0x6c,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x65, 0x5f, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x42, 0x8d,
	0x01, 0x8a, 0x97, 0x22, 0x88, 0x01, 0x0a, 0x83, 0x01, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20,
	0x2d, 0x20, 0x23, 0x31, 0x20, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74,
	0x68, 0x20, 0x45, 0x2f, 0x53, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x58, 0x01, 0x52, 0x34,
	0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x53, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0xdc, 0x02, 0x0a, 0x2b, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x42, 0xfc, 0x01, 0x8a, 0x97, 0x22,
	0xf7, 0x01, 0x0a, 0x46, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x20, 0x2d, 0x20, 0x31, 0x23, 0x41, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x54, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59,
	0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75,
	0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x28, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x32, 0x12, 0xa0, 0x02, 0x0a, 0x38, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x65, 0x5f,
	0x73, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x42, 0xa9, 0x01, 0x8a, 0x97, 0x22, 0xa4, 0x01, 0x0a, 0x9f,
	0x01, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20,
	0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x20, 0x61,
	0x73, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x23, 0x31, 0x42, 0x20,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x45, 0x2f, 0x53, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29,
	0x58, 0x01, 0x52, 0x32, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x53, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x9a, 0x02, 0x0a, 0x28, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x42, 0xc0, 0x01, 0x8a, 0x97, 0x22, 0xbb,
	0x01, 0x0a, 0xb6, 0x01, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20,
	0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 0x65, 0x69, 0x74, 0x68, 0x65,
	0x72, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x20, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2c, 0x20, 0x6e, 0x6f, 0x72, 0x20,
	0x61, 0x72, 0x65, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x61, 0x73,
	0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x23, 0x32, 0x20, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x58, 0x01, 0x52, 0x25, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0xbf, 0x02, 0x0a, 0x21, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x42,
	0xf3, 0x01, 0x8a, 0x97, 0x22, 0xee, 0x01, 0x0a, 0x2d, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x54,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20,
	0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20,
	0x69, 0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66,
	0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x1e, 0x74, 0x61, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xd0, 0x02, 0x0a, 0x26, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x42, 0xfa, 0x01, 0x8a, 0x97, 0x22, 0xf5, 0x01, 0x0a, 0x30,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29,
	0x12, 0x5e, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59,
	0x22, 0x61, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75,
	0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x54, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f,
	0x31, 0x3a, 0x32, 0x52, 0x23, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x88, 0x02, 0x0a, 0x19, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x42, 0xcb, 0x01, 0x8a,
	0x97, 0x22, 0xc6, 0x01, 0x0a, 0x23, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x4d, 0x54, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x50, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x17, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0xa3, 0x02, 0x0a, 0x19, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30,
	0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb6, 0x01, 0x8a, 0x97, 0x22, 0xb1, 0x01, 0x0a,
	0xac, 0x01, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66,
	0x75, 0x6e, 0x64, 0x20, 0x75, 0x73, 0x65, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x20, 0x61, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69,
	0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x28, 0x31, 0x29, 0x2c, 0x20,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x28, 0x32, 0x39, 0x29, 0x2c, 0x20, 0x6f, 0x66, 0x20, 0x52,
	0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x45, 0x55, 0x29, 0x20, 0x4e,
	0x6f, 0x20, 0x36, 0x30, 0x30, 0x2f, 0x32, 0x30, 0x31, 0x34, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x74,
	0x74, 0x61, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x20, 0x74, 0x68, 0x65, 0x79, 0x20, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x3f, 0x58, 0x01,
	0x52, 0x17, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x55, 0x73, 0x65,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x88, 0x03, 0x0a, 0x13, 0x74, 0x61,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x55, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30,
	0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x54, 0x41, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0xfe,
	0x01, 0x8a, 0x97, 0x22, 0xf9, 0x01, 0x0a, 0x38, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x66, 0x2e,
	0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52,
	0x13, 0x74, 0x61, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x9c, 0x03, 0x0a, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f,
	0x67, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75,
	0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42,
	0xa2, 0x02, 0x8a, 0x97, 0x22, 0x9d, 0x02, 0x0a, 0x59, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73, 0x20,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x74,
	0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73,
	0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59,
	0x22, 0x5f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75,
	0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a,
	0x32, 0x4a, 0x01, 0x32, 0x52, 0x1d, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0xa8, 0x03, 0x0a, 0x24, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f,
	0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0xa6, 0x02, 0x8a, 0x97, 0x22, 0xa1, 0x02, 0x0a, 0x5d, 0x44, 0x6f, 0x65, 0x73,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20,
	0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x79,
	0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20,
	0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x4a, 0x01, 0x32, 0x52, 0x21, 0x6e, 0x75, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xa9,
	0x03, 0x0a, 0x3e, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x42, 0xa7, 0x02, 0x8a, 0x97, 0x22, 0xa2, 0x02, 0x0a,
	0x75, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73,
	0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68,
	0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x52, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61,
	0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x55, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e,
	0x46, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a,
	0x32, 0x52, 0x37, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xbe, 0x03, 0x0a, 0x42, 0x6e,
	0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x01, 0x42, 0xb4, 0x02, 0x8a, 0x97, 0x22, 0xaf, 0x02, 0x0a,
	0x79, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20,
	0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x57, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73,
	0x20, 0x59, 0x2e, 0x22, 0x59, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64,
	0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75,
	0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x3b,
	0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xdb, 0x03, 0x0a, 0x3d,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x01, 0x42, 0xda, 0x02, 0x8a, 0x97, 0x22, 0xd5, 0x02, 0x0a, 0x92, 0x01, 0x4d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20,
	0x28, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69,
	0x6c, 0x20, 0x67, 0x61, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x29, 0x20, 0x61, 0x6c, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20,
	0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x2e,
	0x12, 0x5d, 0x20, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22,
	0x5f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32,
	0x52, 0x37, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xaa, 0x03, 0x0a, 0x3e, 0x66, 0x6f,
	0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x01, 0x42, 0xa8, 0x02, 0x8a, 0x97, 0x22, 0xa3, 0x02, 0x0a, 0x75, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e,
	0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73, 0x20, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61,
	0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e,
	0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x53, 0x20, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73,
	0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x55, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x46, 0x6f, 0x73, 0x73,
	0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x37, 0x66,
	0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xbe, 0x03, 0x0a, 0x42, 0x6e, 0x75, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x01, 0x42, 0xb4, 0x02, 0x8a, 0x97, 0x22, 0xaf, 0x02, 0x0a, 0x79, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69,
	0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68,
	0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x57, 0x20, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22,
	0x59, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x2e, 0x30, 0x2e, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x3b, 0x6e, 0x75, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xda, 0x03, 0x0a, 0x3d, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x01, 0x42,
	0xd9, 0x02, 0x8a, 0x97, 0x22, 0xd4, 0x02, 0x0a, 0x92, 0x01, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x28, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61,
	0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x29, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x20, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x12, 0x5c, 0x54, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x37, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x45, 0x78, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f,
	0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0xf5, 0x02, 0x0a, 0x31, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01,
	0x42, 0x8a, 0x02, 0x8a, 0x97, 0x22, 0x85, 0x02, 0x0a, 0x44, 0x57, 0x68, 0x61, 0x74, 0x20, 0x69,
	0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3f, 0x12, 0x5c,
	0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e,
	0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x2d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0xe9, 0x02, 0x0a,
	0x2d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x01, 0x42, 0x86, 0x02, 0x8a, 0x97, 0x22, 0x81, 0x02, 0x0a, 0x40, 0x57, 0x68,
	0x61, 0x74, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69,
	0x6e, 0x67, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3f, 0x12, 0x5c,
	0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e,
	0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x29, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x91, 0x02, 0x0a, 0x34, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x5f, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30,
	0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x72, 0x8a, 0x97, 0x22, 0x6e, 0x0a, 0x67, 0x41,
	0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x73, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64,
	0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0xe2, 0x80, 0x9c, 0x23, 0x32, 0x20, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0xe2, 0x80, 0x9d, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x2f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xc2, 0x02, 0x0a,
	0x28, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75,
	0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42,
	0xb8, 0x01, 0x8a, 0x97, 0x22, 0xb3, 0x01, 0x0a, 0xab, 0x01, 0x49, 0x73, 0x20, 0x61, 0x20, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x64, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x20, 0x77,
	0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66,
	0x75, 0x6e, 0x64, 0x20, 0x69, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77,
	0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x61, 0x6e, 0x64, 0x2f, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x69, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x65, 0x73, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x25, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x82, 0x03, 0x0a, 0x27, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x73, 0x69, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44,
	0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65,
	0x73, 0x4e, 0x6f, 0x42, 0xfb, 0x01, 0x8a, 0x97, 0x22, 0xf6, 0x01, 0x0a, 0x36, 0x49, 0x73, 0x20,
	0x61, 0x6e, 0x20, 0x49, 0x53, 0x49, 0x4e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61,
	0x72, 0x6b, 0x3f, 0x12, 0x5a, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69,
	0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65,
	0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22,
	0x5d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x2e, 0x30, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65,
	0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x4a, 0x01,
	0x32, 0x52, 0x23, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63,
	0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xf9, 0x02, 0x0a, 0x1d, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69,
	0x73, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x42, 0xb5,
	0x02, 0x8a, 0x97, 0x22, 0xb0, 0x02, 0x0a, 0x30, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x49, 0x53, 0x49, 0x4e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x9e, 0x01, 0x54, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69,
	0x73, 0x20, 0x59, 0x2e, 0x0a, 0x54, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6d, 0x75, 0x73, 0x74,
	0x20, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x49, 0x53, 0x49,
	0x4e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x22, 0x5b, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x1a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0xa4, 0x02, 0x0a, 0x18, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x09, 0x42, 0xe9, 0x01, 0x8a, 0x97, 0x22, 0xe4, 0x01, 0x0a, 0x2b, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x58, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73,
	0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20,
	0x69, 0x73, 0x20, 0x4e, 0x22, 0x5b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66,
	0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a,
	0x32, 0x52, 0x16, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63,
	0x68, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x96, 0x03, 0x0a, 0x33, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x42, 0xa8, 0x02, 0x8a, 0x97, 0x22, 0xa3, 0x02, 0x0a,
	0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62,
	0x65, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x5a, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69,
	0x73, 0x20, 0x59, 0x22, 0x5d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64,
	0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75,
	0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31,
	0x3a, 0x32, 0x52, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e,
	0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0xb1, 0x01, 0x0a, 0x29, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x42, 0x57, 0x8a, 0x97, 0x22, 0x53, 0x0a, 0x4f, 0x49, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x61, 0x20, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x6e,
	0x6b, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x20,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x01, 0x52,
	0x25, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0xe4, 0x03, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x32, 0x33, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xf5, 0x02, 0x8a, 0x97,
	0x22, 0xf0, 0x02, 0x0a, 0xe8, 0x02, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61,
	0x62, 0x6f, 0x76, 0x65, 0x20, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x20, 0x68,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x20,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x73,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x20, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x64, 0x20, 0xe2, 0x80, 0x9c, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0xe2, 0x80, 0x9d, 0x2c,
	0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x70, 0x61, 0x72,
	0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x20, 0x28, 0x61, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x69,
	0x6e, 0x20, 0x51, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x53, 0x53, 0x46,
	0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x46, 0x41, 0x51, 0x29, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2c, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67,
	0x20, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x6c, 0x69,
	0x6e, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x73, 0x20, 0x66,
	0x75, 0x72, 0x74, 0x68, 0x65, 0x72, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x20,
	0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x33, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x52, 0x54, 0x53, 0x3f, 0x4a, 0x01,
	0x32, 0x58, 0x01, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x72, 0x74, 0x32, 0x33, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xf4, 0x02,
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x72, 0x74,
	0x32, 0x34, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x85, 0x02, 0x8a, 0x97, 0x22, 0x80, 0x02, 0x0a, 0xf8, 0x01, 0x44, 0x6f, 0x65,
	0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x64, 0x69,
	0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0x2c, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x2d, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x20, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x28, 0x31, 0x29, 0x20, 0x53, 0x46, 0x44,
	0x52, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x20, 0x32,
	0x35, 0x20, 0x74, 0x6f, 0x20, 0x33, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x52, 0x54, 0x53,
	0x2c, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x20, 0x61, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x69, 0x6e,
	0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x34, 0x20, 0x53, 0x46, 0x44, 0x52,
	0x20, 0x52, 0x54, 0x53, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x74, 0x32, 0x34, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x90, 0x02, 0x0a, 0x23, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x73,
	0x73, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x91, 0x01, 0x8a, 0x97, 0x22, 0x8c, 0x01, 0x0a, 0x52, 0x44, 0x69, 0x64, 0x20,
	0x79, 0x6f, 0x75, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x53, 0x53, 0x46, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x3f, 0x12, 0x33,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c,
	0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43,
	0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66,
	0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x1f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xc8, 0x01, 0x0a, 0x18, 0x72, 0x61, 0x6d, 0x70,
	0x5f, 0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x5f, 0x8a, 0x97, 0x22, 0x5b,
	0x0a, 0x21, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x20,
	0x69, 0x6e, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6d, 0x70, 0x2d, 0x75, 0x70, 0x20, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20,
	0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x15, 0x72, 0x61, 0x6d,
	0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0xe8, 0x02, 0x0a, 0x17, 0x72, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x70, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x38,
	0x20, 0x01, 0x28, 0x09, 0x42, 0xb1, 0x02, 0x8a, 0x97, 0x22, 0xac, 0x02, 0x0a, 0x24, 0x52, 0x61,
	0x6d, 0x70, 0x2d, 0x75, 0x70, 0x20, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x20, 0x65, 0x6e, 0x64,
	0x20, 0x64, 0x61, 0x74, 0x65, 0x20, 0x28, 0x59, 0x59, 0x59, 0x59, 0x2d, 0x4d, 0x4d, 0x2d, 0x44,
	0x44, 0x29, 0x12, 0x80, 0x01, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x72, 0x61, 0x6d, 0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x2e, 0x20, 0x46,
	0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54,
	0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e,
	0x64, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x59, 0x59, 0x59, 0x59, 0x2d, 0x4d,
	0x4d, 0x2d, 0x44, 0x44, 0x2e, 0x22, 0x4d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53,
	0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38,
	0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x52, 0x61, 0x6d, 0x70, 0x55,
	0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x3f, 0x31, 0x3a, 0x32, 0x42, 0x32, 0x5e, 0x5c, 0x64, 0x7b, 0x34, 0x7d, 0x5c, 0x2d, 0x28, 0x30,
	0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b, 0x30, 0x31, 0x32, 0x5d, 0x29, 0x5c, 0x2d, 0x28,
	0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x31, 0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d,
	0x7c, 0x33, 0x5b, 0x30, 0x31, 0x5d, 0x29, 0x24, 0x52, 0x13, 0x72, 0x61, 0x6d, 0x70, 0x55, 0x70,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x94, 0x02,
	0x0a, 0x29, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e,
	0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e,
	0x6f, 0x42, 0x89, 0x01, 0x8a, 0x97, 0x22, 0x84, 0x01, 0x0a, 0x4a, 0x50, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x25, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x6f, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0xdc, 0x03, 0x0a, 0x3f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x75, 0x73, 0x5f, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x68, 0x6f,
	0x77, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x42, 0xda,
	0x02, 0x8a, 0x97, 0x22, 0xd5, 0x02, 0x0a, 0x81, 0x01, 0x46, 0x6f, 0x72, 0x20, 0x41, 0x49, 0x46,
	0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69,
	0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73,
	0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x61, 0x64, 0x76, 0x69, 0x73, 0x65, 0x20,
	0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x68, 0x6f, 0x77, 0x20, 0x69, 0x74,
	0x20, 0x69, 0x73, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f,
	0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x76, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x2e, 0x20,
	0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49,
	0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75,
	0x6e, 0x64, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72,
	0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x38, 0x53, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x32, 0x3a, 0x31, 0x52, 0x36, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x75, 0x73, 0x57, 0x68, 0x65, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x48, 0x6f, 0x77, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x87, 0x03, 0x0a, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x5f, 0x65, 0x5f, 0x73, 0x5f, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x42, 0xbf,
	0x02, 0x8a, 0x97, 0x22, 0xba, 0x02, 0x0a, 0x67, 0x46, 0x6f, 0x72, 0x20, 0x41, 0x49, 0x46, 0x73,
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6e,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x2c,
	0x20, 0x45, 0x53, 0x47, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x76, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46,
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54,
	0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69,
	0x73, 0x20, 0x4e, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69,
	0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x38, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43,
	0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x32, 0x3a, 0x31,
	0x52, 0x1b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x53, 0x47, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xed, 0x01,
	0x0a, 0x32, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x52, 0x8a, 0x97, 0x22, 0x4e,
	0x0a, 0x47, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x69,
	0x6e, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x69, 0x6e, 0x67,
	0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x2d,
	0x70, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xbe, 0x02,
	0x0a, 0x27, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63,
	0x5f, 0x64, 0x5f, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75,
	0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42,
	0xb8, 0x01, 0x8a, 0x97, 0x22, 0xb3, 0x01, 0x0a, 0x79, 0x54, 0x68, 0x65, 0x79, 0x20, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x79, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f,
	0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x3b, 0x20, 0x65,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x73,
	0x20, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x65, 0x65, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44,
	0x52, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20,
	0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69,
	0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x22, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x44, 0x52, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xd3,
	0x03, 0x0a, 0x2c, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x3e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38,
	0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xc3, 0x02, 0x8a, 0x97, 0x22, 0xbe, 0x02, 0x0a, 0x83, 0x02,
	0x54, 0x68, 0x65, 0x79, 0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x6c, 0x79, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x20, 0x28, 0x73, 0x75, 0x62, 0x2d, 0x29, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x6f, 0x6e,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x28, 0x6c, 0x69,
	0x6e, 0x6b, 0x29, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31,
	0x30, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x28, 0x45, 0x55, 0x29, 0x20, 0x32, 0x30, 0x31, 0x39, 0x2f, 0x32, 0x30,
	0x38, 0x38, 0x20, 0x6f, 0x6e, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0xe2, 0x80, 0x90, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64,
	0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x20, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x28, 0x53, 0x46, 0x44,
	0x52, 0x29, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20,
	0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x27, 0x6e, 0x6f, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0xc7, 0x03, 0x0a, 0x35, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x3f,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46,
	0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59,
	0x65, 0x73, 0x4e, 0x6f, 0x42, 0xa5, 0x02, 0x8a, 0x97, 0x22, 0xa0, 0x02, 0x0a, 0xe5, 0x01, 0x54,
	0x68, 0x65, 0x79, 0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x63, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64,
	0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32,
	0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x41, 0x49, 0x46, 0x4d, 0x44, 0x3b, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x50, 0x52, 0x49, 0x49, 0x50, 0x73, 0x20, 0x4b, 0x49, 0x44, 0x20, 0x28,
	0x69, 0x66, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x20, 0x6f,
	0x72, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x20, 0x74, 0x6f, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x33, 0x20, 0x53,
	0x46, 0x44, 0x52, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x30, 0x6e, 0x6f,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xf9,
	0x01, 0x0a, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54,
	0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x7f, 0x8a, 0x97, 0x22, 0x7b, 0x0a,
	0x41, 0x54, 0x68, 0x65, 0x79, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61,
	0x74, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x77,
	0x68, 0x61, 0x74, 0x20, 0x68, 0x61, 0x73, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x64, 0x2e, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20,
	0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69,
	0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x1e, 0x72, 0x65, 0x66, 0x6c,
	0x65, 0x63, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x80, 0x02, 0x0a, 0x29, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x69,
	0x73, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62,
	0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x75,
	0x8a, 0x97, 0x22, 0x71, 0x0a, 0x6a, 0x41, 0x72, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x20, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73,
	0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x20, 0x28, 0x41, 0x72, 0x74, 0x2e, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3f,
	0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x26, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x69, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xcb, 0x01,
	0x0a, 0x24, 0x61, 0x72, 0x74, 0x36, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x4a, 0x8a, 0x97,
	0x22, 0x46, 0x0a, 0x3f, 0x49, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x20, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x21, 0x61, 0x72, 0x74, 0x36, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xcc, 0x04, 0x0a, 0x1d,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x5f, 0x64, 0x5f, 0x72, 0x5f, 0x63,
	0x6f, 0x70, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x43, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44,
	0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65,
	0x73, 0x4e, 0x6f, 0x42, 0xda, 0x03, 0x8a, 0x97, 0x22, 0xd5, 0x03, 0x0a, 0x9a, 0x03, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x28, 0x73, 0x29, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75,
	0x72, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x28, 0x73, 0x75, 0x62, 0x2d, 0x29, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x73,
	0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x20, 0x28, 0xe2, 0x80, 0x9c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x38,
	0xe2, 0x80, 0x9d, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20,
	0x39, 0x20, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0xe2, 0x80, 0x9c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x39, 0xe2, 0x80, 0x9d, 0x29, 0x20, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x31, 0x2d, 0x74, 0x6f,
	0x2d, 0x31, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x65, 0x65, 0x6e,
	0x20, 0x69, 0x6e, 0x20, 0x61, 0x6e, 0x6e, 0x65, 0x78, 0x20, 0x49, 0x49, 0x20, 0x6f, 0x72, 0x20,
	0x49, 0x49, 0x49, 0x20, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x6c, 0x79,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x20, 0x61, 0x6e, 0x64, 0x20,
	0x68, 0x61, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x61, 0x6c, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x20, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x61, 0x73, 0x20, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64,
	0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x20, 0x32, 0x20, 0x43, 0x44, 0x52, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72,
	0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32,
	0x52, 0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x44, 0x52, 0x43, 0x6f, 0x70,
	0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xc3, 0x02, 0x0a, 0x29, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62,
	0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb8,
	0x01, 0x8a, 0x97, 0x22, 0xb3, 0x01, 0x0a, 0x79, 0x41, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x6c, 0x79, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x68, 0x6f, 0x73, 0x65, 0x20, 0x77, 0x68, 0x69, 0x63,
	0x68, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x64,
	0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68,
	0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41,
	0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66,
	0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x25, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0xb3, 0x02, 0x0a, 0x35, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53,
	0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x42, 0x90, 0x01, 0x8a, 0x97, 0x22, 0x8b, 0x01, 0x0a, 0x51, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x20, 0x68, 0x65, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x20,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f,
	0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53,
	0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64,
	0x4a, 0x01, 0x32, 0x52, 0x31, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x83, 0x01, 0x0a, 0x1b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x42, 0x44, 0x8a, 0x97,
	0x22, 0x40, 0x0a, 0x3c, 0x44, 0x61, 0x74, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x20, 0x70, 0x72,
	0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x28, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x29,
	0x58, 0x01, 0x52, 0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xe2, 0x01, 0x0a,
	0x13, 0x45, 0x41, 0x6e, 0x64, 0x53, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x12, 0x27, 0x0a, 0x23, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x5f,
	0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54, 0x45, 0x52, 0x49, 0x53, 0x54, 0x49, 0x43, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x45, 0x52, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x52, 0x4d, 0x41, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x57, 0x4c, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x57,
	0x41, 0x53, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x47, 0x47, 0x45, 0x10, 0x05, 0x12, 0x08,
	0x0a, 0x04, 0x45, 0x42, 0x49, 0x4f, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x43, 0x45, 0x43,
	0x4f, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4f, 0x54, 0x48, 0x10, 0x08, 0x12, 0x09, 0x0a,
	0x05, 0x53, 0x49, 0x4e, 0x45, 0x51, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x53, 0x4f, 0x43,
	0x4f, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x53, 0x4f, 0x49, 0x4e, 0x10, 0x0b, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x4c, 0x41, 0x52, 0x45, 0x10, 0x0c, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x49, 0x48,
	0x43, 0x10, 0x0d, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x45, 0x53, 0x44, 0x43, 0x10, 0x0e, 0x12, 0x08,
	0x0a, 0x04, 0x53, 0x4f, 0x54, 0x48, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x45, 0x4e, 0x10,
	0x10, 0x22, 0x93, 0x01, 0x0a, 0x1e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x31, 0x0a, 0x2d, 0x53, 0x55, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x41,
	0x42, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x53, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x49, 0x56, 0x45, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x43, 0x41, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x55, 0x50, 0x57, 0x4d, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43,
	0x45, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x50, 0x43, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x52, 0x42, 0x45, 0x10, 0x05, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x4f, 0x10, 0x06, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x43, 0x4d, 0x10, 0x07, 0x22, 0x75, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x23, 0x0a,
	0x1f, 0x49, 0x4e, 0x56, 0x45, 0x53, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x41,
	0x54, 0x45, 0x47, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x48, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45,
	0x53, 0x47, 0x49, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x53, 0x47, 0x45, 0x10, 0x03, 0x12,
	0x06, 0x0a, 0x02, 0x49, 0x49, 0x10, 0x04, 0x12, 0x05, 0x0a, 0x01, 0x45, 0x10, 0x05, 0x12, 0x05,
	0x0a, 0x01, 0x4f, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x49, 0x43, 0x10, 0x07, 0x22, 0x58,
	0x0a, 0x13, 0x54, 0x41, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x41, 0x5f, 0x43, 0x41, 0x4c, 0x43,
	0x55, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x41, 0x50, 0x45, 0x58, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x58, 0x10,
	0x02, 0x12, 0x05, 0x0a, 0x01, 0x54, 0x10, 0x03, 0x1a, 0xe4, 0x99, 0x01, 0x0a, 0x18, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0xe2, 0x01, 0x0a, 0x21, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x66, 0x8a, 0x97, 0x22, 0x62, 0x0a, 0x5b, 0x54, 0x68, 0x65, 0x20, 0x73, 0x75,
	0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6d, 0x61, 0x6b, 0x65,
	0x20, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4a, 0x01, 0x31, 0x58, 0x01, 0x52, 0x1f, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xdf, 0x02, 0x0a, 0x39,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x42,
	0xe4, 0x01, 0x8a, 0x97, 0x22, 0xdf, 0x01, 0x0a, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x12, 0x54, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x57, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x35, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x9f, 0x03,
	0x0a, 0x2a, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x91, 0x02, 0x8a, 0x97, 0x22, 0x8c, 0x02, 0x0a, 0x58, 0x49, 0x6e, 0x20, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x20,
	0x61, 0x73, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x6c, 0x79, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x12, 0x54, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e,
	0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f,
	0x31, 0x3a, 0x32, 0x4a, 0x01, 0x32, 0x52, 0x27, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0xab, 0x03, 0x0a, 0x2d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x5f, 0x74,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30,
	0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x98, 0x02, 0x8a, 0x97, 0x22, 0x93, 0x02, 0x0a,
	0x5f, 0x49, 0x6e, 0x20, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x20, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x64, 0x6f, 0x20,
	0x6e, 0x6f, 0x74, 0x20, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x20, 0x61, 0x73, 0x20, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x12, 0x54, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x4a,
	0x01, 0x32, 0x52, 0x29, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xcc, 0x01,
	0x0a, 0x1a, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x5e, 0x8a, 0x97, 0x22, 0x5a, 0x0a, 0x53, 0x54, 0x68, 0x65, 0x20, 0x73, 0x75,
	0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6d, 0x61, 0x6b, 0x65,
	0x20, 0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x20, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4a, 0x01, 0x32,
	0x58, 0x01, 0x52, 0x18, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xda, 0x02, 0x0a,
	0x32, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x42, 0xed, 0x01, 0x8a, 0x97, 0x22, 0xe8,
	0x01, 0x0a, 0x45, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x4d, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x50, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x2e, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0xf8, 0x01, 0x0a, 0x23, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6e, 0x64, 0x5f,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x62, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30,
	0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x42, 0x45, 0x8a, 0x97, 0x22,
	0x41, 0x0a, 0x3d, 0x57, 0x68, 0x61, 0x74, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x3f,
	0x58, 0x01, 0x52, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x12, 0xf1, 0x01, 0x0a, 0x30, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75,
	0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42,
	0x5a, 0x8a, 0x97, 0x22, 0x56, 0x0a, 0x4f, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x72, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x20, 0x61, 0x64, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x20, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x73,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x2b, 0x70, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x41, 0x64, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xc5, 0x01, 0x0a, 0x16, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x54, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54,
	0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42,
	0x38, 0x8a, 0x97, 0x22, 0x34, 0x0a, 0x32, 0x57, 0x68, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x20,
	0x64, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e,
	0x64, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x3f, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73,
	0x12, 0xf4, 0x01, 0x0a, 0x28, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x9a, 0x01, 0x8a, 0x97, 0x22, 0x95, 0x01, 0x0a, 0x2a, 0x50, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x12, 0x67, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x4f, 0x20, 0x28, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x29, 0x20, 0x69, 0x73, 0x20, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69,
	0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73,
	0x52, 0x25, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xd4, 0x01, 0x0a, 0x20, 0x67, 0x6f, 0x6f, 0x64,
	0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x5b, 0x8a, 0x97, 0x22, 0x57, 0x0a, 0x52, 0x49, 0x73, 0x20, 0x61, 0x20, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x20, 0x74, 0x6f,
	0x20, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x20, 0x67, 0x6f, 0x6f, 0x64, 0x20, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65,
	0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x65,
	0x65, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x3f, 0x4a, 0x01, 0x32, 0x52,
	0x1d, 0x67, 0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xbd,
	0x02, 0x0a, 0x25, 0x6e, 0x6f, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0xea,
	0x01, 0x8a, 0x97, 0x22, 0xe5, 0x01, 0x0a, 0x38, 0x49, 0x66, 0x20, 0x27, 0x4e, 0x4f, 0x27, 0x20,
	0x74, 0x6f, 0x20, 0x67, 0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x12, 0x52, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x67, 0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20,
	0x69, 0x73, 0x20, 0x4e, 0x22, 0x55, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66,
	0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x47, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x32, 0x3a, 0x31, 0x52, 0x21, 0x6e, 0x6f, 0x47,
	0x6f, 0x6f, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x96,
	0x03, 0x0a, 0x2a, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x01, 0x42, 0xb8, 0x02, 0x8a, 0x97, 0x22, 0xb3, 0x02, 0x0a, 0x46, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x6f, 0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x23, 0x31, 0x20,
	0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x28, 0x69, 0x6e, 0x20,
	0x25, 0x29, 0x2e, 0x12, 0x8f, 0x01, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x20, 0x6f, 0x72, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53,
	0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39,
	0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x27,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x95, 0x03, 0x0a, 0x39, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x42, 0x9a, 0x02, 0x8a, 0x97,
	0x22, 0x95, 0x02, 0x0a, 0x63, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x20, 0x2d, 0x20, 0x23, 0x31, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x20, 0x2d, 0x20, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x55, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x2e, 0x22,
	0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x2e, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x35, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12,
	0xa5, 0x03, 0x0a, 0x3b, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x5f, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x01, 0x42, 0xa7, 0x02, 0x8a, 0x97, 0x22, 0xa2, 0x02, 0x0a, 0x61, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x6f, 0x66, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2d, 0x61, 0x6c,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x2d, 0x20, 0x23, 0x31, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x2d, 0x20, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x2d, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29,
	0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52,
	0x36, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x97, 0x03, 0x0a, 0x3e, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01,
	0x42, 0x93, 0x02, 0x8a, 0x97, 0x22, 0x8e, 0x02, 0x0a, 0x4c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x2d, 0x20, 0x23, 0x31, 0x20, 0x53, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x2d, 0x20, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x2d, 0x20, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x28,
	0x69, 0x6e, 0x20, 0x25, 0x29, 0x2e, 0x12, 0x5d, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20,
	0x69, 0x73, 0x20, 0x59, 0x2e, 0x22, 0x5f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53,
	0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39,
	0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x39, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0xe8, 0x02, 0x0a, 0x32, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x42, 0xfb,
	0x01, 0x8a, 0x97, 0x22, 0xf6, 0x01, 0x0a, 0x53, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x23, 0x31, 0x20,
	0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x2d, 0x20, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x12, 0x4d, 0x54, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x50, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x2e, 0x73, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0xb7, 0x01, 0x0a,
	0x2e, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x01, 0x42, 0x53, 0x8a, 0x97, 0x22, 0x4f, 0x0a, 0x4d, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x6f, 0x66, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x2d,
	0x20, 0x23, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x28, 0x69, 0x6e, 0x20, 0x25, 0x29, 0x52, 0x2a, 0x6e, 0x6f, 0x74, 0x53,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x98, 0x02, 0x0a, 0x19, 0x64, 0x65, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xab, 0x01, 0x8a, 0x97, 0x22,
	0xa6, 0x01, 0x0a, 0xa0, 0x01, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75,
	0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x75, 0x73, 0x65, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x20, 0x61, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x32, 0x28, 0x31, 0x29, 0x2c, 0x20, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x20, 0x32, 0x39, 0x2c, 0x20, 0x6f, 0x66, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x45, 0x55, 0x29, 0x20, 0x4e, 0x6f, 0x20, 0x36, 0x30, 0x30,
	0x2f, 0x32, 0x30, 0x31, 0x34, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x74, 0x74, 0x61, 0x69, 0x6e, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x3f, 0x4a, 0x01, 0x32, 0x52, 0x17, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x55, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x8c, 0x03, 0x0a, 0x15, 0x74, 0x61, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x15, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x55, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e,
	0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x2e, 0x54, 0x41, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x80, 0x02, 0x8a, 0x97, 0x22, 0xfb, 0x01,
	0x0a, 0x37, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2d, 0x61, 0x6c, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x72,
	0x65, 0x20, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x61,
	0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x66, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x4a, 0x01, 0x32, 0x52, 0x13, 0x74, 0x61, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x9c, 0x03, 0x0a, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73, 0x5f,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xa2, 0x02, 0x8a, 0x97,
	0x22, 0x9d, 0x02, 0x0a, 0x59, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75,
	0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x20, 0x69, 0x6e,
	0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73, 0x20, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3f, 0x12, 0x5c,
	0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e,
	0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x4a, 0x01, 0x32,
	0x52, 0x1d, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0xa8, 0x03, 0x0a, 0x24, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62,
	0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xa6,
	0x02, 0x8a, 0x97, 0x22, 0xa1, 0x02, 0x0a, 0x5d, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x75, 0x62, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x20, 0x69, 0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x20,
	0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x45, 0x55, 0x20, 0x54, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x3f, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69,
	0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64,
	0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75,
	0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x3f, 0x31, 0x3a, 0x32, 0x4a, 0x01, 0x32, 0x52, 0x21, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xa9, 0x03, 0x0a, 0x3e, 0x66,
	0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x01, 0x42, 0xa7, 0x02, 0x8a, 0x97, 0x22, 0xa2, 0x02, 0x0a, 0x75, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69,
	0x6e, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73, 0x20, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20,
	0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20,
	0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69,
	0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x52, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73,
	0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x55, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x46, 0x6f, 0x73, 0x73,
	0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x37, 0x66,
	0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xbd, 0x03, 0x0a, 0x42, 0x6e, 0x75, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x01, 0x42, 0xb3, 0x02, 0x8a, 0x97, 0x22, 0xae, 0x02, 0x0a, 0x79, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69,
	0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68,
	0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x56, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x59,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x73, 0x2e, 0x30, 0x2e, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x3b, 0x6e, 0x75, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xd9, 0x03, 0x0a, 0x3d, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f,
	0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x42, 0xd8,
	0x02, 0x8a, 0x97, 0x22, 0xd3, 0x02, 0x0a, 0x91, 0x01, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x28, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x20, 0x67, 0x61, 0x73,
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x29, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20,
	0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x5c, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x37, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49,
	0x6e, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64,
	0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0xa9, 0x03, 0x0a, 0x3e, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x5f, 0x67, 0x61,
	0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78,
	0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e,
	0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x42, 0xa7, 0x02, 0x8a, 0x97,
	0x22, 0xa2, 0x02, 0x0a, 0x75, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c,
	0x20, 0x67, 0x61, 0x73, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20,
	0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x20, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x52, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x66, 0x6f, 0x73, 0x73,
	0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x55,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x73, 0x2e, 0x30, 0x2e, 0x46, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x37, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c, 0x47, 0x61, 0x73,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x53,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb9,
	0x03, 0x0a, 0x42, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78,
	0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e,
	0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x01, 0x42, 0xaf, 0x02, 0x8a, 0x97,
	0x22, 0xaa, 0x02, 0x0a, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x56,
	0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x55, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x46, 0x6f, 0x73, 0x73,
	0x69, 0x6c, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x3b, 0x6e,
	0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xd9, 0x03, 0x0a, 0x3d, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x5f, 0x73, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x01, 0x42, 0xd8, 0x02, 0x8a, 0x97, 0x22, 0xd3, 0x02, 0x0a, 0x91, 0x01, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x20, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20,
	0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x28,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x73, 0x73, 0x69, 0x6c,
	0x20, 0x67, 0x61, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x20, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x29, 0x20, 0x61, 0x6c, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x55, 0x20, 0x74, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x20, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x5c,
	0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e,
	0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x37, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x53, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x42, 0x6f, 0x6e, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xf5, 0x02, 0x0a, 0x31, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x01, 0x42, 0x8a, 0x02, 0x8a, 0x97, 0x22, 0x85, 0x02, 0x0a, 0x44, 0x57, 0x68, 0x61, 0x74,
	0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3f,
	0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52,
	0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0xe9,
	0x02, 0x0a, 0x2d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x42, 0x86, 0x02, 0x8a, 0x97, 0x22, 0x81, 0x02, 0x0a, 0x40,
	0x57, 0x68, 0x61, 0x74, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3f,
	0x12, 0x5c, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5f,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64,
	0x73, 0x2e, 0x30, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52,
	0x29, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x9b, 0x02, 0x0a, 0x34, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x5f,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54,
	0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x7c, 0x8a, 0x97, 0x22, 0x78, 0x0a,
	0x71, 0x41, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x73,
	0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0xe2, 0x80, 0x9c, 0x23, 0x32, 0x20, 0x4e,
	0x6f, 0x74, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0xe2, 0x80,
	0x9d, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x61,
	0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xf9, 0x01, 0x0a, 0x28, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b,
	0x5f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x70, 0x8a, 0x97, 0x22,
	0x6c, 0x0a, 0x65, 0x49, 0x73, 0x20, 0x61, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x65,
	0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x25, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x82, 0x03, 0x0a, 0x27, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x73, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30,
	0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xfb, 0x01, 0x8a, 0x97, 0x22, 0xf6, 0x01, 0x0a, 0x36,
	0x49, 0x73, 0x20, 0x61, 0x6e, 0x20, 0x49, 0x53, 0x49, 0x4e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x6d, 0x61, 0x72, 0x6b, 0x3f, 0x12, 0x5a, 0x54, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73,
	0x20, 0x59, 0x22, 0x5d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72,
	0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a,
	0x32, 0x4a, 0x01, 0x32, 0x52, 0x23, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xf9, 0x02, 0x0a, 0x1d, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x69, 0x73, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x09, 0x42, 0xb5, 0x02, 0x8a, 0x97, 0x22, 0xb0, 0x02, 0x0a, 0x30, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x49, 0x53, 0x49, 0x4e, 0x20, 0x63, 0x6f, 0x64, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x9e, 0x01, 0x54, 0x68,
	0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b,
	0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x2e, 0x20, 0x54, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6d,
	0x75, 0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x49, 0x53, 0x49, 0x4e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x22, 0x5b, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e,
	0x30, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x1a, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x73, 0x69,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0xa4, 0x02, 0x0a, 0x18, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x42, 0xe9, 0x01, 0x8a, 0x97, 0x22, 0xe4, 0x01,
	0x0a, 0x2b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x61,
	0x6d, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x20, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x58, 0x54,
	0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x49, 0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x22, 0x5b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x49,
	0x73, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x3f, 0x31, 0x3a, 0x32, 0x52, 0x16, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x96, 0x03, 0x0a,
	0x33, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x42, 0xa8, 0x02, 0x8a, 0x97, 0x22,
	0xa3, 0x02, 0x0a, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x20, 0x75, 0x73, 0x65,
	0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x63, 0x61,
	0x6e, 0x20, 0x62, 0x65, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x5a, 0x54, 0x68, 0x65, 0x20,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x20, 0x69, 0x73, 0x20, 0x59, 0x22, 0x5d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0xf4, 0x01, 0x0a, 0x29, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x42, 0x99, 0x01, 0x8a, 0x97, 0x22, 0x94,
	0x01, 0x0a, 0x8f, 0x01, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x20, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x61, 0x20, 0x68, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x20, 0x74,
	0x6f, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x33, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x58, 0x01, 0x52, 0x25, 0x73, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0xe4, 0x03, 0x0a,
	0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x32,
	0x33, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e,
	0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e,
	0x6f, 0x42, 0xf5, 0x02, 0x8a, 0x97, 0x22, 0xf0, 0x02, 0x0a, 0xe8, 0x02, 0x44, 0x6f, 0x65, 0x73,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x20, 0x6d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x64, 0x20, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x20,
	0x74, 0x6f, 0x20, 0x61, 0x20, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x20, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x64, 0x20, 0xe2, 0x80, 0x9c,
	0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72,
	0x65, 0x73, 0xe2, 0x80, 0x9d, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61,
	0x6d, 0x65, 0x20, 0x70, 0x61, 0x72, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x28, 0x61, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x51, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x43, 0x53, 0x53, 0x46, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x46, 0x41, 0x51, 0x29,
	0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2c, 0x20, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2c,
	0x20, 0x69, 0x6e, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x6e,
	0x64, 0x20, 0x61, 0x73, 0x20, 0x66, 0x75, 0x72, 0x74, 0x68, 0x65, 0x72, 0x20, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x20, 0x32, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20,
	0x52, 0x54, 0x53, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x74, 0x32, 0x33, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0xf4, 0x02, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x5f, 0x33, 0x37, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54,
	0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x84, 0x02, 0x8a, 0x97, 0x22, 0xff,
	0x01, 0x0a, 0xf7, 0x01, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73,
	0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x2d, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x20, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b,
	0x2c, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75,
	0x74, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x28,
	0x31, 0x29, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x20, 0x33, 0x38, 0x20, 0x74, 0x6f, 0x20, 0x34, 0x39, 0x20, 0x53, 0x46,
	0x44, 0x52, 0x20, 0x52, 0x54, 0x53, 0x2c, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x61, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x33,
	0x37, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x52, 0x54, 0x53, 0x3f, 0x4a, 0x01, 0x32, 0x58, 0x01,
	0x52, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x74, 0x33,
	0x37, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x90, 0x02, 0x0a, 0x23, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64,
	0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x73, 0x73, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30,
	0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x91, 0x01, 0x8a, 0x97, 0x22, 0x8c, 0x01,
	0x0a, 0x52, 0x44, 0x69, 0x64, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72,
	0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x53,
	0x53, 0x46, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x2d, 0x66,
	0x75, 0x6e, 0x64, 0x3f, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69,
	0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x1f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f,
	0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xc8, 0x01,
	0x0a, 0x18, 0x72, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53,
	0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x42, 0x5f, 0x8a, 0x97, 0x22, 0x5b, 0x0a, 0x21, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x20,
	0x73, 0x74, 0x69, 0x6c, 0x6c, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6d, 0x70, 0x2d,
	0x75, 0x70, 0x20, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f,
	0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01,
	0x32, 0x52, 0x15, 0x72, 0x61, 0x6d, 0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x92, 0x02, 0x0a, 0x17, 0x72, 0x61, 0x6d,
	0x70, 0x5f, 0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x42, 0xdb, 0x01, 0x8a, 0x97, 0x22,
	0xd6, 0x01, 0x0a, 0x17, 0x52, 0x61, 0x6d, 0x70, 0x2d, 0x75, 0x70, 0x20, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x20, 0x65, 0x6e, 0x64, 0x20, 0x64, 0x61, 0x74, 0x65, 0x12, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x72, 0x61, 0x6d, 0x70, 0x55,
	0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x20, 0x69, 0x73, 0x20, 0x59, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x4d, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x52,
	0x61, 0x6d, 0x70, 0x55, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x3f, 0x31, 0x3a, 0x32, 0x52, 0x13, 0x72, 0x61, 0x6d, 0x70, 0x55, 0x70,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x94, 0x02,
	0x0a, 0x29, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e,
	0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e,
	0x6f, 0x42, 0x89, 0x01, 0x8a, 0x97, 0x22, 0x84, 0x01, 0x0a, 0x4a, 0x50, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x25, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x6f, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0xdc, 0x03, 0x0a, 0x3f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x75, 0x73, 0x5f, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x68, 0x6f,
	0x77, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x42, 0xda,
	0x02, 0x8a, 0x97, 0x22, 0xd5, 0x02, 0x0a, 0x81, 0x01, 0x46, 0x6f, 0x72, 0x20, 0x41, 0x49, 0x46,
	0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69,
	0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73,
	0x2c, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x61, 0x64, 0x76, 0x69, 0x73, 0x65, 0x20,
	0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x68, 0x6f, 0x77, 0x20, 0x69, 0x74,
	0x20, 0x69, 0x73, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f,
	0x20, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x76, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x20, 0x61, 0x6e, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x2e, 0x20,
	0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49,
	0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75,
	0x6e, 0x64, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x66, 0x64, 0x72,
	0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x39, 0x53, 0x75, 0x62,
	0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x32, 0x3a, 0x31, 0x52, 0x36, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x75, 0x73, 0x57, 0x68, 0x65, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x48, 0x6f, 0x77, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x87, 0x03, 0x0a, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x5f, 0x65, 0x5f, 0x73, 0x5f, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x42, 0xbf,
	0x02, 0x8a, 0x97, 0x22, 0xba, 0x02, 0x0a, 0x67, 0x46, 0x6f, 0x72, 0x20, 0x41, 0x49, 0x46, 0x73,
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6e,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x2c,
	0x20, 0x45, 0x53, 0x47, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x69, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x76, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46,
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54,
	0x6f, 0x43, 0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x69,
	0x73, 0x20, 0x4e, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69,
	0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x57, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x53, 0x66, 0x64, 0x72, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x39, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x30, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x43,
	0x73, 0x73, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3f, 0x32, 0x3a, 0x31,
	0x52, 0x1b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x53, 0x47, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0xea, 0x01,
	0x0a, 0x32, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x4f, 0x8a, 0x97, 0x22, 0x4b,
	0x0a, 0x47, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x69,
	0x6e, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75, 0x73, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x69, 0x6e, 0x67,
	0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x58, 0x01, 0x52, 0x2d, 0x70, 0x72, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x75,
	0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xbe, 0x02, 0x0a, 0x27, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x5f, 0x64, 0x5f,
	0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb8, 0x01, 0x8a,
	0x97, 0x22, 0xb3, 0x01, 0x0a, 0x79, 0x54, 0x68, 0x65, 0x79, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x79, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20,
	0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x3b, 0x20, 0x65, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x73, 0x20, 0x66, 0x6f,
	0x72, 0x65, 0x73, 0x65, 0x65, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x20, 0x32, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x3b, 0x12,
	0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46,
	0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55,
	0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20,
	0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x44, 0x52, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xd3, 0x03, 0x0a, 0x2c,
	0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x31, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0xc3, 0x02, 0x8a, 0x97, 0x22, 0xbe, 0x02, 0x0a, 0x83, 0x02, 0x54, 0x68, 0x65,
	0x79, 0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x63, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x6c, 0x79, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20,
	0x28, 0x73, 0x75, 0x62, 0x2d, 0x29, 0x66, 0x75, 0x6e, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x20, 0x28, 0x6c, 0x69, 0x6e, 0x6b, 0x29,
	0x20, 0x69, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x77,
	0x69, 0x74, 0x68, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x28, 0x45, 0x55, 0x29, 0x20, 0x32, 0x30, 0x31, 0x39, 0x2f, 0x32, 0x30, 0x38, 0x38, 0x20,
	0x6f, 0x6e, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0xe2, 0x80, 0x90, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 0x69, 0x73, 0x63,
	0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x20, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x28, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3b,
	0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49,
	0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20,
	0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x27, 0x6e, 0x6f, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x57, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0xc7, 0x03, 0x0a, 0x35, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e,
	0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e,
	0x6f, 0x42, 0xa5, 0x02, 0x8a, 0x97, 0x22, 0xa0, 0x02, 0x0a, 0xe5, 0x01, 0x54, 0x68, 0x65, 0x79,
	0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x63, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x75, 0x6e,
	0x64, 0x65, 0x72, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32, 0x32, 0x20, 0x61,
	0x6e, 0x64, 0x20, 0x32, 0x33, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x49, 0x46,
	0x4d, 0x44, 0x3b, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x50, 0x52, 0x49, 0x49, 0x50, 0x73, 0x20, 0x4b, 0x49, 0x44, 0x20, 0x28, 0x69, 0x66, 0x20,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f,
	0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x31, 0x33, 0x20, 0x53, 0x46, 0x44, 0x52,
	0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41,
	0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66,
	0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x30, 0x6e, 0x6f, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69,
	0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xf9, 0x01, 0x0a, 0x20,
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30,
	0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x7f, 0x8a, 0x97, 0x22, 0x7b, 0x0a, 0x41, 0x54, 0x68,
	0x65, 0x79, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x20,
	0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x77, 0x68, 0x61, 0x74,
	0x20, 0x68, 0x61, 0x73, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x6c, 0x79, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x2e, 0x12,
	0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46,
	0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55,
	0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20,
	0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x1e, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74,
	0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x80, 0x02, 0x0a, 0x29, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x75, 0x8a, 0x97, 0x22,
	0x71, 0x0a, 0x6a, 0x41, 0x72, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20,
	0x28, 0x41, 0x72, 0x74, 0x2e, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3f, 0x4a, 0x01, 0x32,
	0x58, 0x01, 0x52, 0x26, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x69, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x65,
	0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xcb, 0x01, 0x0a, 0x24, 0x61,
	0x72, 0x74, 0x36, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54,
	0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x4a, 0x8a, 0x97, 0x22, 0x46, 0x0a,
	0x3f, 0x49, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x36,
	0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x3f,
	0x4a, 0x01, 0x32, 0x58, 0x01, 0x52, 0x21, 0x61, 0x72, 0x74, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xcc, 0x04, 0x0a, 0x1d, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x5f, 0x64, 0x5f, 0x72, 0x5f, 0x63, 0x6f, 0x70, 0x79,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53,
	0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f,
	0x42, 0xda, 0x03, 0x8a, 0x97, 0x22, 0xd5, 0x03, 0x0a, 0x9a, 0x03, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x28, 0x73, 0x29, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73,
	0x20, 0x6f, 0x66, 0x20, 0x28, 0x73, 0x75, 0x62, 0x2d, 0x29, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x20,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x73, 0x20, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20,
	0x28, 0xe2, 0x80, 0x9c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x38, 0xe2, 0x80, 0x9d,
	0x29, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x39, 0x20, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0xe2, 0x80, 0x9c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x20, 0x39, 0xe2, 0x80, 0x9d, 0x29, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x53,
	0x46, 0x44, 0x52, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x31, 0x2d, 0x74, 0x6f, 0x2d, 0x31, 0x20,
	0x63, 0x6f, 0x70, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x65, 0x65, 0x6e, 0x20, 0x69, 0x6e,
	0x20, 0x61, 0x6e, 0x6e, 0x65, 0x78, 0x20, 0x49, 0x49, 0x20, 0x6f, 0x72, 0x20, 0x49, 0x49, 0x49,
	0x20, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x6c, 0x79, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x44, 0x52, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x68, 0x61, 0x73,
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x61,
	0x6c, 0x6c, 0x79, 0x20, 0x61, 0x73, 0x20, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x32,
	0x20, 0x43, 0x44, 0x52, 0x3b, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20,
	0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x18, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x44, 0x52, 0x43, 0x6f, 0x70, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xc3, 0x02, 0x0a, 0x29, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0xb8, 0x01, 0x8a, 0x97,
	0x22, 0xb3, 0x01, 0x0a, 0x79, 0x41, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x6c, 0x79, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x20, 0x61,
	0x6e, 0x64, 0x20, 0x74, 0x68, 0x6f, 0x73, 0x65, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x61,
	0x72, 0x65, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c,
	0x65, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x64, 0x69, 0x73, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x3b, 0x12, 0x33,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c,
	0x20, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43,
	0x49, 0x54, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66,
	0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32, 0x52, 0x25, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xb3, 0x02,
	0x0a, 0x35, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46,
	0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x90, 0x01,
	0x8a, 0x97, 0x22, 0x8b, 0x01, 0x0a, 0x51, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x64, 0x20, 0x68, 0x65, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x41, 0x49, 0x46, 0x2c, 0x20, 0x66, 0x6f, 0x72, 0x62, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x55, 0x43, 0x49, 0x54, 0x53, 0x20, 0x6f, 0x72,
	0x20, 0x50, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x64, 0x4a, 0x01, 0x32,
	0x52, 0x31, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0xc6, 0x01, 0x0a, 0x1b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x42, 0x86, 0x01, 0x8a, 0x97, 0x22, 0x81,
	0x01, 0x0a, 0x49, 0x44, 0x61, 0x74, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x20, 0x70, 0x72, 0x65,
	0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x28, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x29, 0x20,
	0x28, 0x59, 0x59, 0x59, 0x59, 0x2d, 0x4d, 0x4d, 0x2d, 0x44, 0x44, 0x29, 0x42, 0x32, 0x5e, 0x5c,
	0x64, 0x7b, 0x34, 0x7d, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x31, 0x5b,
	0x30, 0x31, 0x32, 0x5d, 0x29, 0x5c, 0x2d, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x5b,
	0x31, 0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7c, 0x33, 0x5b, 0x30, 0x31, 0x5d, 0x29, 0x24,
	0x58, 0x01, 0x52, 0x18, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xa0, 0x01, 0x0a,
	0x20, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x41, 0x6e,
	0x64, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x12, 0x33, 0x0a, 0x2f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d, 0x45, 0x4e, 0x54,
	0x41, 0x4c, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x4f, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x49, 0x56, 0x45, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x43, 0x41, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x55, 0x50, 0x57, 0x4d, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x45,
	0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x50, 0x43, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x50,
	0x52, 0x42, 0x45, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x43, 0x45, 0x10, 0x06, 0x12, 0x06,
	0x0a, 0x02, 0x53, 0x4f, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x43, 0x4d, 0x10, 0x08, 0x22,
	0x75, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x23, 0x0a, 0x1f, 0x49, 0x4e, 0x56, 0x45, 0x53, 0x54, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x48,
	0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x53, 0x47, 0x49, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x45, 0x53, 0x47, 0x45, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x49, 0x10, 0x04, 0x12,
	0x05, 0x0a, 0x01, 0x45, 0x10, 0x05, 0x12, 0x05, 0x0a, 0x01, 0x4f, 0x10, 0x06, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x49, 0x43, 0x10, 0x07, 0x22, 0x58, 0x0a, 0x13, 0x54, 0x41, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a,
	0x21, 0x54, 0x41, 0x5f, 0x43, 0x41, 0x4c, 0x43, 0x55, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x41, 0x50, 0x45, 0x58, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x58, 0x10, 0x02, 0x12, 0x05, 0x0a, 0x01, 0x54, 0x10, 0x03,
	0x1a, 0xf2, 0x06, 0x0a, 0x15, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x75, 0x62, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0xd4, 0x01, 0x0a, 0x12, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x36, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30,
	0x30, 0x38, 0x46, 0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x42, 0x75, 0x8a, 0x97, 0x22, 0x71, 0x0a, 0x6a, 0x41,
	0x72, 0x65, 0x20, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x20, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0x41, 0x72, 0x74,
	0x2e, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3f, 0x4a, 0x01, 0x31, 0x58, 0x01, 0x52, 0x11,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x36, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0xd3, 0x01, 0x0a, 0x28, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x36, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46,
	0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59,
	0x65, 0x73, 0x4e, 0x6f, 0x42, 0x4a, 0x8a, 0x97, 0x22, 0x46, 0x0a, 0x3f, 0x49, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69,
	0x6e, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x77, 0x69, 0x74,
	0x68, 0x20, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x36, 0x20, 0x53, 0x46, 0x44, 0x52,
	0x20, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x3f, 0x4a, 0x01, 0x31, 0x58, 0x01,
	0x52, 0x25, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x36, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xd5, 0x01, 0x0a, 0x12, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x37, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46,
	0x44, 0x37, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59,
	0x65, 0x73, 0x4e, 0x6f, 0x42, 0x76, 0x8a, 0x97, 0x22, 0x72, 0x0a, 0x6b, 0x41, 0x72, 0x65, 0x20,
	0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x20, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x20, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x73, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x65, 0x64, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x28, 0x41, 0x72, 0x74, 0x2e, 0x37,
	0x20, 0x53, 0x46, 0x44, 0x52, 0x29, 0x3f, 0x4a, 0x01, 0x31, 0x58, 0x01, 0x52, 0x11, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x37, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0xd3, 0x01, 0x0a, 0x28, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x37, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x30, 0x30, 0x30, 0x38, 0x46, 0x44, 0x37,
	0x2e, 0x53, 0x75, 0x62, 0x46, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x59, 0x65, 0x73,
	0x4e, 0x6f, 0x42, 0x4a, 0x8a, 0x97, 0x22, 0x46, 0x0a, 0x3f, 0x49, 0x73, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20,
	0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x20, 0x37, 0x20, 0x53, 0x46, 0x44, 0x52, 0x20, 0x64,
	0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x3f, 0x4a, 0x01, 0x31, 0x58, 0x01, 0x52, 0x25,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x37, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x6d, 0x0a, 0x19, 0x53, 0x46, 0x44, 0x52, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x46, 0x44, 0x52, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x52, 0x54, 0x49, 0x43,
	0x4c, 0x45, 0x5f, 0x36, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c,
	0x45, 0x5f, 0x38, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45,
	0x5f, 0x39, 0x10, 0x03, 0x22, 0x30, 0x0a, 0x05, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x12, 0x19, 0x0a,
	0x15, 0x59, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x4e, 0x41, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x05, 0x0a, 0x01, 0x59, 0x10, 0x01, 0x12,
	0x05, 0x0a, 0x01, 0x4e, 0x10, 0x02, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2d, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x6f, 0x70,
	0x65, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_standards_open_v1_RT0008FD7_proto_rawDescOnce sync.Once
	file_standards_open_v1_RT0008FD7_proto_rawDescData = file_standards_open_v1_RT0008FD7_proto_rawDesc
)

func file_standards_open_v1_RT0008FD7_proto_rawDescGZIP() []byte {
	file_standards_open_v1_RT0008FD7_proto_rawDescOnce.Do(func() {
		file_standards_open_v1_RT0008FD7_proto_rawDescData = protoimpl.X.CompressGZIP(file_standards_open_v1_RT0008FD7_proto_rawDescData)
	})
	return file_standards_open_v1_RT0008FD7_proto_rawDescData
}

var file_standards_open_v1_RT0008FD7_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_standards_open_v1_RT0008FD7_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_standards_open_v1_RT0008FD7_proto_goTypes = []interface{}{
	(RT0008FD7_SubFundData_SFDRArticleClassification)(0),                                 // 0: standards.open.v1.RT0008FD7.SubFundData.SFDRArticleClassification
	(RT0008FD7_SubFundData_YesNo)(0),                                                     // 1: standards.open.v1.RT0008FD7.SubFundData.YesNo
	(RT0008FD7_SubFundData_Article8SubfundResponses_EAndSCharacteristic)(0),              // 2: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.EAndSCharacteristic
	(RT0008FD7_SubFundData_Article8SubfundResponses_SustainableInvestmentObjective)(0),   // 3: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.SustainableInvestmentObjective
	(RT0008FD7_SubFundData_Article8SubfundResponses_InvestmentStrategy)(0),               // 4: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.InvestmentStrategy
	(RT0008FD7_SubFundData_Article8SubfundResponses_TACalculationMethod)(0),              // 5: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.TACalculationMethod
	(RT0008FD7_SubFundData_Article9SubfundResponses_EnvironmentalAndSocialObjectives)(0), // 6: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.EnvironmentalAndSocialObjectives
	(RT0008FD7_SubFundData_Article9SubfundResponses_InvestmentStrategy)(0),               // 7: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.InvestmentStrategy
	(RT0008FD7_SubFundData_Article9SubfundResponses_TACalculationMethod)(0),              // 8: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.TACalculationMethod
	(*RT0008FD7)(nil),                                      // 9: standards.open.v1.RT0008FD7
	(*RT0008FD7_SubFundData)(nil),                          // 10: standards.open.v1.RT0008FD7.SubFundData
	(*RT0008FD7_SubFundData_Article8SubfundResponses)(nil), // 11: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses
	(*RT0008FD7_SubFundData_Article9SubfundResponses)(nil), // 12: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses
	(*RT0008FD7_SubFundData_OtherSubfundResponses)(nil),    // 13: standards.open.v1.RT0008FD7.SubFundData.OtherSubfundResponses
}
var file_standards_open_v1_RT0008FD7_proto_depIdxs = []int32{
	10, // 0: standards.open.v1.RT0008FD7.sub_fund_data:type_name -> standards.open.v1.RT0008FD7.SubFundData
	0,  // 1: standards.open.v1.RT0008FD7.SubFundData.sfdr_article_classification:type_name -> standards.open.v1.RT0008FD7.SubFundData.SFDRArticleClassification
	11, // 2: standards.open.v1.RT0008FD7.SubFundData.article8_responses:type_name -> standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses
	12, // 3: standards.open.v1.RT0008FD7.SubFundData.article9_responses:type_name -> standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses
	13, // 4: standards.open.v1.RT0008FD7.SubFundData.other_responses:type_name -> standards.open.v1.RT0008FD7.SubFundData.OtherSubfundResponses
	1,  // 5: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.sustainable_investments_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 6: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.environmental_objective_taxonomy_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 7: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.environmental_objective_no_taxonomy_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 8: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.social_objective_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	2,  // 9: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.e_and_s_characteristics:type_name -> standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.EAndSCharacteristic
	3,  // 10: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.sustainable_investments_objectives:type_name -> standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.SustainableInvestmentObjective
	1,  // 11: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.principal_adverse_impact_consideration_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	4,  // 12: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.investments_strategies:type_name -> standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.InvestmentStrategy
	1,  // 13: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.good_governance_policy_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 14: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.derivatives_use_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	5,  // 15: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.taCalculationMethod:type_name -> standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.TACalculationMethod
	1,  // 16: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.fossil_gas_investments_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 17: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.nuclear_energy_investments_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 18: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.environmental_or_social_safeguards_minimum_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 19: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.reference_benchmark_designated_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 20: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.reference_benchmark_isin_code_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 21: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.compliance_art23_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 22: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.compliance_art24_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 23: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.template_provided_to_cssf_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 24: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.ramp_up_period_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 25: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.template_available_to_investors_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 26: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.prominent_statement_main_body_prospectus_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 27: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.requirements_c_d_r_compliance_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 28: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.no_contradiction_with_website_link_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 29: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.no_contradiction_with_disclosed_information_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 30: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.reflect_implementation_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 31: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.sustainability_risks_considered_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 32: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.art6_information_disclosed_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 33: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.template_c_d_r_copy_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 34: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.template_all_sections_completed_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 35: standards.open.v1.RT0008FD7.SubFundData.Article8SubfundResponses.latest_published_information_correspondence_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 36: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.sustainable_investments_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 37: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.environmental_objective_taxonomy_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 38: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.environmental_objective_no_taxonomy_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 39: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.social_objective_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	6,  // 40: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.environmental_and_social_objectives:type_name -> standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.EnvironmentalAndSocialObjectives
	1,  // 41: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.principal_adverse_impact_consideration_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	7,  // 42: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.investments_strategies:type_name -> standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.InvestmentStrategy
	1,  // 43: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.good_governance_policy_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 44: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.derivatives_use_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	8,  // 45: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.ta_calculation_method:type_name -> standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.TACalculationMethod
	1,  // 46: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.fossil_gas_investments_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 47: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.nuclear_energy_investments_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 48: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.environmental_or_social_safeguards_minimum_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 49: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.reference_benchmark_designated_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 50: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.reference_benchmark_isin_code_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 51: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.compliance_art23_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 52: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.compliance_art_37_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 53: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.template_provided_to_cssf_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 54: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.ramp_up_period_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 55: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.template_available_to_investors_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 56: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.prominent_statement_main_body_prospectus_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 57: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.requirements_c_d_r_compliance_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 58: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.no_contradiction_with_website_link_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 59: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.no_contradiction_with_disclosed_information_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 60: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.reflect_implementation_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 61: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.sustainability_risks_considered_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 62: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.art6_information_disclosed_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 63: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.template_c_d_r_copy_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 64: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.template_all_sections_completed_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 65: standards.open.v1.RT0008FD7.SubFundData.Article9SubfundResponses.latest_published_information_correspondence_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 66: standards.open.v1.RT0008FD7.SubFundData.OtherSubfundResponses.article6_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 67: standards.open.v1.RT0008FD7.SubFundData.OtherSubfundResponses.information_article6_disclosed_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 68: standards.open.v1.RT0008FD7.SubFundData.OtherSubfundResponses.article7_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	1,  // 69: standards.open.v1.RT0008FD7.SubFundData.OtherSubfundResponses.information_article7_disclosed_indicator:type_name -> standards.open.v1.RT0008FD7.SubFundData.YesNo
	70, // [70:70] is the sub-list for method output_type
	70, // [70:70] is the sub-list for method input_type
	70, // [70:70] is the sub-list for extension type_name
	70, // [70:70] is the sub-list for extension extendee
	0,  // [0:70] is the sub-list for field type_name
}

func init() { file_standards_open_v1_RT0008FD7_proto_init() }
func file_standards_open_v1_RT0008FD7_proto_init() {
	if File_standards_open_v1_RT0008FD7_proto != nil {
		return
	}
	file_standards_open_v1_yesno_proto_init()
	file_standards_open_v1_fieldOptionsExtentions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_standards_open_v1_RT0008FD7_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0008FD7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0008FD7_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0008FD7_SubFundData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0008FD7_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0008FD7_SubFundData_Article8SubfundResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0008FD7_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0008FD7_SubFundData_Article9SubfundResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_standards_open_v1_RT0008FD7_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RT0008FD7_SubFundData_OtherSubfundResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_standards_open_v1_RT0008FD7_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_standards_open_v1_RT0008FD7_proto_goTypes,
		DependencyIndexes: file_standards_open_v1_RT0008FD7_proto_depIdxs,
		EnumInfos:         file_standards_open_v1_RT0008FD7_proto_enumTypes,
		MessageInfos:      file_standards_open_v1_RT0008FD7_proto_msgTypes,
	}.Build()
	File_standards_open_v1_RT0008FD7_proto = out.File
	file_standards_open_v1_RT0008FD7_proto_rawDesc = nil
	file_standards_open_v1_RT0008FD7_proto_goTypes = nil
	file_standards_open_v1_RT0008FD7_proto_depIdxs = nil
}
